{"id":"index.html","dependencies":[{"name":"./main.js","dynamic":true,"resolved":"/home/andrew/Documents/School/Cubesat/cubesatsimulator/main.js","parent":"/home/andrew/Documents/School/Cubesat/cubesatsimulator/index.html"}],"generated":{"html":"<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"unicode-8\">\n  <title>blair3sat|What we do</title>\n</head>\n\n<body>\n  <div id=\"container\"></div>\n  <script id=\"vertexShader\" type=\"x-shader/x-vertex\">\n    precision mediump float;\n      precision mediump int;\n      uniform mat4 modelViewMatrix; // optional\n      uniform mat4 projectionMatrix; // optional\n      attribute vec3 position;\n      attribute vec4 color;\n      varying vec3 vPosition;\n      varying vec4 vColor;\n      void main()\t{\n          vPosition = position;\n          vColor = color;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n      }\n  </script>\n\n  <script id=\"fragmentShader\" type=\"x-shader/x-fragment\">\n    precision mediump float;\n      precision mediump int;\n      uniform float time;\n      varying vec3 vPosition;\n      varying vec4 vColor;\n      void main()\t{\n          vec4 color = vec4( vColor );\n          color.r += sin( vPosition.x * 10.0 + time ) * 0.5;\n          gl_FragColor = color;\n      }\n  </script>\n  <script type=\"x-shader/x-vertex\" id=\"pointvertexshader\">\n    attribute float scale;\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n      gl_PointSize = scale * ( 300.0 / - mvPosition.z );\n      gl_Position = projectionMatrix * mvPosition;\n    }\n  </script>\n\n  <script type=\"x-shader/x-fragment\" id=\"pointfragmentshader\">\n    uniform vec3 color;\n    void main() {\n      if ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;\n      gl_FragColor = vec4( color, 1.0 );\n    }\n  </script>\n  <script type=\"text/javascript\" src=\"/7a9076d6d94e62c13d641aa71f19ae8e.js\"></script>\n</body>\n\n</html>"},"hash":"c857748c76a827311417290c3ef687ef","cacheData":{}}