parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"gBK8":[function(require,module,exports) {
"use strict";function t(){}Object.defineProperty(exports,"__esModule",{value:!0}),exports.WebGLRenderTargetCube=Re,exports.WebGLRenderTarget=Ae,exports.WebGLRenderer=oa,exports.FogExp2=aa,exports.Fog=sa,exports.Scene=ca,exports.LensFlare=ha,exports.Sprite=ua,exports.LOD=pa,exports.SkinnedMesh=ma,exports.Skeleton=da,exports.Bone=fa,exports.Mesh=xo,exports.LineSegments=ya,exports.LineLoop=xa,exports.Line=ga,exports.Points=_a,exports.Group=wa,exports.VideoTexture=Ma,exports.DataTexture=Le,exports.CompressedTexture=Ea,exports.CubeTexture=Pe,exports.CanvasTexture=Rn,exports.DepthTexture=Ta,exports.Texture=Te,exports.CompressedTextureLoader=ic,exports.DataTextureLoader=nc,exports.CubeTextureLoader=ac,exports.TextureLoader=sc,exports.ObjectLoader=fh,exports.MaterialLoader=ch,exports.BufferGeometryLoader=hh,exports.LoadingManager=$s,exports.JSONLoader=dh,exports.ImageLoader=oc,exports.ImageBitmapLoader=xh,exports.FontLoader=wh,exports.FileLoader=rc,exports.Loader=uh,exports.AudioLoader=Sh,exports.SpotLightShadow=Hc,exports.SpotLight=Vc,exports.PointLight=kc,exports.RectAreaLight=qc,exports.HemisphereLight=zc,exports.DirectionalLightShadow=jc,exports.DirectionalLight=Wc,exports.AmbientLight=Xc,exports.LightShadow=Gc,exports.Light=Bc,exports.StereoCamera=Ah,exports.PerspectiveCamera=$o,exports.OrthographicCamera=Wn,exports.CubeCamera=Rh,exports.ArrayCamera=ta,exports.Camera=jn,exports.AudioListener=Lh,exports.PositionalAudio=Ch,exports.AudioAnalyser=Ih,exports.Audio=Ph,exports.VectorKeyframeTrack=ah,exports.StringKeyframeTrack=Yc,exports.QuaternionKeyframeTrack=Kc,exports.NumberKeyframeTrack=th,exports.ColorKeyframeTrack=$c,exports.BooleanKeyframeTrack=Zc,exports.PropertyMixer=Oh,exports.PropertyBinding=Nh,exports.KeyframeTrack=oh,exports.AnimationObjectGroup=Dh,exports.AnimationMixer=Bh,exports.AnimationClip=sh,exports.Uniform=zh,exports.InstancedBufferGeometry=Gh,exports.BufferGeometry=co,exports.Geometry=Yn,exports.InterleavedBufferAttribute=Hh,exports.InstancedInterleavedBuffer=kh,exports.InterleavedBuffer=Vh,exports.InstancedBufferAttribute=jh,exports.Face3=Xn,exports.Object3D=kn,exports.Raycaster=Wh,exports.Layers=Hn,exports.EventDispatcher=t,exports.Clock=Yh,exports.QuaternionLinearInterpolant=Qc,exports.LinearInterpolant=rh,exports.DiscreteInterpolant=ih,exports.CubicInterpolant=eh,exports.Interpolant=Jc,exports.Triangle=yo,exports.Spherical=Zh,exports.Cylindrical=Jh,exports.Plane=Dn,exports.Frustum=Fn,exports.Sphere=Nn,exports.Ray=vo,exports.Matrix4=be,exports.Matrix3=Me,exports.Box3=Un,exports.Box2=Sn,exports.Line3=go,exports.Euler=Gn,exports.Vector4=Se,exports.Vector3=we,exports.Vector2=xe,exports.Quaternion=_e,exports.Color=xr,exports.ImmediateRenderObject=Qh,exports.VertexNormalsHelper=Kh,exports.SpotLightHelper=$h,exports.SkeletonHelper=el,exports.PointLightHelper=rl,exports.RectAreaLightHelper=il,exports.HemisphereLightHelper=nl,exports.GridHelper=ol,exports.PolarGridHelper=al,exports.FaceNormalsHelper=sl,exports.DirectionalLightHelper=cl,exports.CameraHelper=hl,exports.BoxHelper=ll,exports.Box3Helper=ul,exports.PlaneHelper=pl,exports.ArrowHelper=dl,exports.AxesHelper=fl,exports.Shape=Fc,exports.Path=Dc,exports.ShapePath=bh,exports.Font=_h,exports.CurvePath=Nc,exports.Curve=cc,exports.WebGLUtils=na,exports.WireframeGeometry=Sa,exports.ParametricGeometry=Aa,exports.ParametricBufferGeometry=Ra,exports.TetrahedronGeometry=Ca,exports.TetrahedronBufferGeometry=Ia,exports.OctahedronGeometry=Oa,exports.OctahedronBufferGeometry=Ua,exports.IcosahedronGeometry=Na,exports.IcosahedronBufferGeometry=Da,exports.DodecahedronGeometry=Fa,exports.DodecahedronBufferGeometry=Ba,exports.PolyhedronGeometry=La,exports.PolyhedronBufferGeometry=Pa,exports.TubeGeometry=za,exports.TubeBufferGeometry=Ga,exports.TorusKnotGeometry=Ha,exports.TorusKnotBufferGeometry=Va,exports.TorusGeometry=ka,exports.TorusBufferGeometry=ja,exports.TextGeometry=Ms,exports.TextBufferGeometry=Es,exports.SphereGeometry=Ts,exports.SphereBufferGeometry=Ss,exports.RingGeometry=As,exports.RingBufferGeometry=Rs,exports.PlaneGeometry=uo,exports.PlaneBufferGeometry=po,exports.LatheGeometry=Ls,exports.LatheBufferGeometry=Ps,exports.ShapeGeometry=Cs,exports.ShapeBufferGeometry=Is,exports.ExtrudeGeometry=_s,exports.ExtrudeBufferGeometry=ws,exports.EdgesGeometry=Us,exports.ConeGeometry=Fs,exports.ConeBufferGeometry=Bs,exports.CylinderGeometry=Ns,exports.CylinderBufferGeometry=Ds,exports.CircleGeometry=zs,exports.CircleBufferGeometry=Gs,exports.CubeGeometry=exports.BoxGeometry=ho,exports.BoxBufferGeometry=lo,exports.ShadowMaterial=Vs,exports.SpriteMaterial=la,exports.RawShaderMaterial=ks,exports.ShaderMaterial=mo,exports.PointsMaterial=ba,exports.MeshPhysicalMaterial=Ws,exports.MeshStandardMaterial=js,exports.MeshPhongMaterial=Xs,exports.MeshToonMaterial=qs,exports.MeshNormalMaterial=Ys,exports.MeshLambertMaterial=Zs,exports.MeshDepthMaterial=In,exports.MeshDistanceMaterial=On,exports.MeshBasicMaterial=fo,exports.LineDashedMaterial=Js,exports.LineBasicMaterial=va,exports.Material=Cn,exports.Float64BufferAttribute=no,exports.Float32BufferAttribute=io,exports.Uint32BufferAttribute=ro,exports.Int32BufferAttribute=eo,exports.Uint16BufferAttribute=to,exports.Int16BufferAttribute=$n,exports.Uint8ClampedBufferAttribute=Kn,exports.Uint8BufferAttribute=Qn,exports.Int8BufferAttribute=Jn,exports.BufferAttribute=Zn,exports.ArcCurve=lc,exports.CatmullRomCurve3=vc,exports.CubicBezierCurve=Ac,exports.CubicBezierCurve3=Rc,exports.EllipseCurve=hc,exports.LineCurve=Lc,exports.LineCurve3=Pc,exports.QuadraticBezierCurve=Cc,exports.QuadraticBezierCurve3=Ic,exports.SplineCurve=Oc,exports.Face4=vl,exports.MeshFaceMaterial=xl,exports.MultiMaterial=bl,exports.PointCloud=_l,exports.Particle=wl,exports.ParticleSystem=Ml,exports.PointCloudMaterial=El,exports.ParticleBasicMaterial=Tl,exports.ParticleSystemMaterial=Sl,exports.Vertex=Al,exports.DynamicBufferAttribute=Rl,exports.Int8Attribute=Ll,exports.Uint8Attribute=Pl,exports.Uint8ClampedAttribute=Cl,exports.Int16Attribute=Il,exports.Uint16Attribute=Ol,exports.Int32Attribute=Ul,exports.Uint32Attribute=Nl,exports.Float32Attribute=Dl,exports.Float64Attribute=Fl,exports.ClosedSplineCurve3=Bl,exports.SplineCurve3=zl,exports.Spline=Gl,exports.AxisHelper=Hl,exports.BoundingBoxHelper=Vl,exports.EdgesHelper=kl,exports.WireframeHelper=jl,exports.XHRLoader=Wl,exports.BinaryTextureLoader=Xl,exports.Projector=Zl,exports.CanvasRenderer=Jl,exports.RGBFormat=exports.AlphaFormat=exports.UnsignedInt248Type=exports.UnsignedShort565Type=exports.UnsignedShort5551Type=exports.UnsignedShort4444Type=exports.HalfFloatType=exports.FloatType=exports.UnsignedIntType=exports.IntType=exports.UnsignedShortType=exports.ShortType=exports.ByteType=exports.UnsignedByteType=exports.LinearMipMapLinearFilter=exports.LinearMipMapNearestFilter=exports.LinearFilter=exports.NearestMipMapLinearFilter=exports.NearestMipMapNearestFilter=exports.NearestFilter=exports.MirroredRepeatWrapping=exports.ClampToEdgeWrapping=exports.RepeatWrapping=exports.CubeUVRefractionMapping=exports.CubeUVReflectionMapping=exports.SphericalReflectionMapping=exports.EquirectangularRefractionMapping=exports.EquirectangularReflectionMapping=exports.CubeRefractionMapping=exports.CubeReflectionMapping=exports.UVMapping=exports.CineonToneMapping=exports.Uncharted2ToneMapping=exports.ReinhardToneMapping=exports.LinearToneMapping=exports.NoToneMapping=exports.AddOperation=exports.MixOperation=exports.MultiplyOperation=exports.NotEqualDepth=exports.GreaterDepth=exports.GreaterEqualDepth=exports.EqualDepth=exports.LessEqualDepth=exports.LessDepth=exports.AlwaysDepth=exports.NeverDepth=exports.SrcAlphaSaturateFactor=exports.OneMinusDstColorFactor=exports.DstColorFactor=exports.OneMinusDstAlphaFactor=exports.DstAlphaFactor=exports.OneMinusSrcAlphaFactor=exports.SrcAlphaFactor=exports.OneMinusSrcColorFactor=exports.SrcColorFactor=exports.OneFactor=exports.ZeroFactor=exports.MaxEquation=exports.MinEquation=exports.ReverseSubtractEquation=exports.SubtractEquation=exports.AddEquation=exports.CustomBlending=exports.MultiplyBlending=exports.SubtractiveBlending=exports.AdditiveBlending=exports.NormalBlending=exports.NoBlending=exports.VertexColors=exports.FaceColors=exports.NoColors=exports.SmoothShading=exports.FlatShading=exports.DoubleSide=exports.BackSide=exports.FrontSide=exports.PCFSoftShadowMap=exports.PCFShadowMap=exports.BasicShadowMap=exports.FrontFaceDirectionCCW=exports.FrontFaceDirectionCW=exports.CullFaceFrontBack=exports.CullFaceFront=exports.CullFaceBack=exports.CullFaceNone=exports.MOUSE=exports.REVISION=exports.SceneUtils=exports.ShapeUtils=exports.Math=exports.AnimationUtils=exports.AudioContext=exports.Cache=exports.LoaderUtils=exports.DefaultLoadingManager=exports.ShaderChunk=exports.UniformsUtils=exports.UniformsLib=exports.ShaderLib=void 0,exports.ImageUtils=exports.GeometryUtils=exports.LinePieces=exports.LineStrip=exports.RGBADepthPacking=exports.BasicDepthPacking=exports.RGBDEncoding=exports.RGBM16Encoding=exports.RGBM7Encoding=exports.LogLuvEncoding=exports.RGBEEncoding=exports.GammaEncoding=exports.sRGBEncoding=exports.LinearEncoding=exports.TriangleFanDrawMode=exports.TriangleStripDrawMode=exports.TrianglesDrawMode=exports.WrapAroundEnding=exports.ZeroSlopeEnding=exports.ZeroCurvatureEnding=exports.InterpolateSmooth=exports.InterpolateLinear=exports.InterpolateDiscrete=exports.LoopPingPong=exports.LoopRepeat=exports.LoopOnce=exports.RGB_ETC1_Format=exports.RGBA_PVRTC_2BPPV1_Format=exports.RGBA_PVRTC_4BPPV1_Format=exports.RGB_PVRTC_2BPPV1_Format=exports.RGB_PVRTC_4BPPV1_Format=exports.RGBA_S3TC_DXT5_Format=exports.RGBA_S3TC_DXT3_Format=exports.RGBA_S3TC_DXT1_Format=exports.RGB_S3TC_DXT1_Format=exports.DepthStencilFormat=exports.DepthFormat=exports.RGBEFormat=exports.LuminanceAlphaFormat=exports.LuminanceFormat=exports.RGBAFormat=void 0,void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),r=1;r<arguments.length;r++){var i=arguments[r];if(null!=i)for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}),Object.assign(t.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners[t];if(void 0!==r){var i=r.indexOf(e);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=e.slice(0),i=0,n=r.length;i<n;i++)r[i].call(this,t)}}}});var e="89";exports.REVISION=e;var r={LEFT:0,MIDDLE:1,RIGHT:2};exports.MOUSE=r;var i=0;exports.CullFaceNone=i;var n=1;exports.CullFaceBack=n;var o=2;exports.CullFaceFront=o;var a=3;exports.CullFaceFrontBack=a;var s=0;exports.FrontFaceDirectionCW=s;var c=1;exports.FrontFaceDirectionCCW=c;var h=0;exports.BasicShadowMap=h;var l=1;exports.PCFShadowMap=l;var u=2;exports.PCFSoftShadowMap=u;var p=0;exports.FrontSide=p;var d=1;exports.BackSide=d;var f=2;exports.DoubleSide=f;var m=1;exports.FlatShading=m;var v=2;exports.SmoothShading=v;var g=0;exports.NoColors=g;var y=1;exports.FaceColors=y;var x=2;exports.VertexColors=x;var b=0;exports.NoBlending=b;var _=1;exports.NormalBlending=_;var w=2;exports.AdditiveBlending=w;var M=3;exports.SubtractiveBlending=M;var E=4;exports.MultiplyBlending=E;var T=5;exports.CustomBlending=T;var S=100;exports.AddEquation=S;var A=101;exports.SubtractEquation=A;var R=102;exports.ReverseSubtractEquation=R;var L=103;exports.MinEquation=L;var P=104;exports.MaxEquation=P;var C=200;exports.ZeroFactor=C;var I=201;exports.OneFactor=I;var O=202;exports.SrcColorFactor=O;var U=203;exports.OneMinusSrcColorFactor=U;var N=204;exports.SrcAlphaFactor=N;var D=205;exports.OneMinusSrcAlphaFactor=D;var F=206;exports.DstAlphaFactor=F;var B=207;exports.OneMinusDstAlphaFactor=B;var z=208;exports.DstColorFactor=z;var G=209;exports.OneMinusDstColorFactor=G;var H=210;exports.SrcAlphaSaturateFactor=H;var V=0;exports.NeverDepth=V;var k=1;exports.AlwaysDepth=k;var j=2;exports.LessDepth=j;var W=3;exports.LessEqualDepth=W;var X=4;exports.EqualDepth=X;var q=5;exports.GreaterEqualDepth=q;var Y=6;exports.GreaterDepth=Y;var Z=7;exports.NotEqualDepth=Z;var J=0;exports.MultiplyOperation=J;var Q=1;exports.MixOperation=Q;var K=2;exports.AddOperation=K;var $=0;exports.NoToneMapping=$;var tt=1;exports.LinearToneMapping=tt;var et=2;exports.ReinhardToneMapping=et;var rt=3;exports.Uncharted2ToneMapping=rt;var it=4;exports.CineonToneMapping=it;var nt=300;exports.UVMapping=nt;var ot=301;exports.CubeReflectionMapping=ot;var at=302;exports.CubeRefractionMapping=at;var st=303;exports.EquirectangularReflectionMapping=st;var ct=304;exports.EquirectangularRefractionMapping=ct;var ht=305;exports.SphericalReflectionMapping=ht;var lt=306;exports.CubeUVReflectionMapping=lt;var ut=307;exports.CubeUVRefractionMapping=ut;var pt=1e3;exports.RepeatWrapping=pt;var dt=1001;exports.ClampToEdgeWrapping=dt;var ft=1002;exports.MirroredRepeatWrapping=ft;var mt=1003;exports.NearestFilter=mt;var vt=1004;exports.NearestMipMapNearestFilter=vt;var gt=1005;exports.NearestMipMapLinearFilter=gt;var yt=1006;exports.LinearFilter=yt;var xt=1007;exports.LinearMipMapNearestFilter=xt;var bt=1008;exports.LinearMipMapLinearFilter=bt;var _t=1009;exports.UnsignedByteType=_t;var wt=1010;exports.ByteType=wt;var Mt=1011;exports.ShortType=Mt;var Et=1012;exports.UnsignedShortType=Et;var Tt=1013;exports.IntType=Tt;var St=1014;exports.UnsignedIntType=St;var At=1015;exports.FloatType=At;var Rt=1016;exports.HalfFloatType=Rt;var Lt=1017;exports.UnsignedShort4444Type=Lt;var Pt=1018;exports.UnsignedShort5551Type=Pt;var Ct=1019;exports.UnsignedShort565Type=Ct;var It=1020;exports.UnsignedInt248Type=It;var Ot=1021;exports.AlphaFormat=Ot;var Ut=1022;exports.RGBFormat=Ut;var Nt=1023;exports.RGBAFormat=Nt;var Dt=1024;exports.LuminanceFormat=Dt;var Ft=1025;exports.LuminanceAlphaFormat=Ft;var Bt=Nt;exports.RGBEFormat=Bt;var zt=1026;exports.DepthFormat=zt;var Gt=1027;exports.DepthStencilFormat=Gt;var Ht=2001;exports.RGB_S3TC_DXT1_Format=Ht;var Vt=2002;exports.RGBA_S3TC_DXT1_Format=Vt;var kt=2003;exports.RGBA_S3TC_DXT3_Format=kt;var jt=2004;exports.RGBA_S3TC_DXT5_Format=jt;var Wt=2100;exports.RGB_PVRTC_4BPPV1_Format=Wt;var Xt=2101;exports.RGB_PVRTC_2BPPV1_Format=Xt;var qt=2102;exports.RGBA_PVRTC_4BPPV1_Format=qt;var Yt=2103;exports.RGBA_PVRTC_2BPPV1_Format=Yt;var Zt=2151;exports.RGB_ETC1_Format=Zt;var Jt=2200;exports.LoopOnce=Jt;var Qt=2201;exports.LoopRepeat=Qt;var Kt=2202;exports.LoopPingPong=Kt;var $t=2300;exports.InterpolateDiscrete=$t;var te=2301;exports.InterpolateLinear=te;var ee=2302;exports.InterpolateSmooth=ee;var re=2400;exports.ZeroCurvatureEnding=re;var ie=2401;exports.ZeroSlopeEnding=ie;var ne=2402;exports.WrapAroundEnding=ne;var oe=0;exports.TrianglesDrawMode=oe;var ae=1;exports.TriangleStripDrawMode=ae;var se=2;exports.TriangleFanDrawMode=se;var ce=3e3;exports.LinearEncoding=ce;var he=3001;exports.sRGBEncoding=he;var le=3007;exports.GammaEncoding=le;var ue=3002;exports.RGBEEncoding=ue;var pe=3003;exports.LogLuvEncoding=pe;var de=3004;exports.RGBM7Encoding=de;var fe=3005;exports.RGBM16Encoding=fe;var me=3006;exports.RGBDEncoding=me;var ve=3200;exports.BasicDepthPacking=ve;var ge=3201;exports.RGBADepthPacking=ge;var ye={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16).toUpperCase();return function(){var e=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+"-"+t[255&r]+t[r>>8&255]+"-"+t[r>>16&15|64]+t[r>>24&255]+"-"+t[63&i|128]+t[i>>8&255]+"-"+t[i>>16&255]+t[i>>24&255]+t[255&n]+t[n>>8&255]+t[n>>16&255]+t[n>>24&255]}}(),clamp:function(t,e,r){return Math.max(e,Math.min(r,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},lerp:function(t,e,r){return(1-r)*t+r*e},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*ye.DEG2RAD},radToDeg:function(t){return t*ye.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};function xe(t,e){this.x=t||0,this.y=e||0}function be(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function _e(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1}function we(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0}function Me(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}exports.Math=ye,Object.defineProperties(xe.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(xe.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,r=this.y,i=t.elements;return this.x=i[0]*e+i[3]*r+i[6],this.y=i[1]*e+i[4]*r+i[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new xe,e=new xe;return function(r,i){return t.set(r,r),e.set(i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=this.x-t.x,o=this.y-t.y;return this.x=n*r-o*i+t.x,this.y=n*i+o*r+t.y,this}}),Object.assign(be.prototype,{isMatrix4:!0,set:function(t,e,r,i,n,o,a,s,c,h,l,u,p,d,f,m){var v=this.elements;return v[0]=t,v[4]=e,v[8]=r,v[12]=i,v[1]=n,v[5]=o,v[9]=a,v[13]=s,v[2]=c,v[6]=h,v[10]=l,v[14]=u,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new be).fromArray(this.elements)},copy:function(t){var e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],e[9]=r[9],e[10]=r[10],e[11]=r[11],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],this},copyPosition:function(t){var e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractBasis:function(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this},extractRotation:function(){var t=new we;return function(e){var r=this.elements,i=e.elements,n=1/t.setFromMatrixColumn(e,0).length(),o=1/t.setFromMatrixColumn(e,1).length(),a=1/t.setFromMatrixColumn(e,2).length();return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[8]=i[8]*a,r[9]=i[9]*a,r[10]=i[10]*a,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,i=t.y,n=t.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(i),c=Math.sin(i),h=Math.cos(n),l=Math.sin(n);if("XYZ"===t.order){var u=o*h,p=o*l,d=a*h,f=a*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=p+d*c,e[5]=u-f*c,e[9]=-a*s,e[2]=f-u*c,e[6]=d+p*c,e[10]=o*s}else if("YXZ"===t.order){var m=s*h,v=s*l,g=c*h,y=c*l;e[0]=m+y*a,e[4]=g*a-v,e[8]=o*c,e[1]=o*l,e[5]=o*h,e[9]=-a,e[2]=v*a-g,e[6]=y+m*a,e[10]=o*s}else if("ZXY"===t.order){m=s*h,v=s*l,g=c*h,y=c*l;e[0]=m-y*a,e[4]=-o*l,e[8]=g+v*a,e[1]=v+g*a,e[5]=o*h,e[9]=y-m*a,e[2]=-o*c,e[6]=a,e[10]=o*s}else if("ZYX"===t.order){u=o*h,p=o*l,d=a*h,f=a*l;e[0]=s*h,e[4]=d*c-p,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=p*c-d,e[2]=-c,e[6]=a*s,e[10]=o*s}else if("YZX"===t.order){var x=o*s,b=o*c,_=a*s,w=a*c;e[0]=s*h,e[4]=w-x*l,e[8]=_*l+b,e[1]=l,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=b*l+_,e[10]=x-w*l}else if("XZY"===t.order){x=o*s,b=o*c,_=a*s,w=a*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=o*h,e[9]=b*l-_,e[2]=_*l-b,e[6]=a*h,e[10]=w*l+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,r=t._x,i=t._y,n=t._z,o=t._w,a=r+r,s=i+i,c=n+n,h=r*a,l=r*s,u=r*c,p=i*s,d=i*c,f=n*c,m=o*a,v=o*s,g=o*c;return e[0]=1-(p+f),e[4]=l-g,e[8]=u+v,e[1]=l+g,e[5]=1-(h+f),e[9]=d-m,e[2]=u-v,e[6]=d+m,e[10]=1-(h+p),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new we,e=new we,r=new we;return function(i,n,o){var a=this.elements;return r.subVectors(i,n),0===r.lengthSq()&&(r.z=1),r.normalize(),t.crossVectors(o,r),0===t.lengthSq()&&(1===Math.abs(o.z)?r.x+=1e-4:r.z+=1e-4,r.normalize(),t.crossVectors(o,r)),t.normalize(),e.crossVectors(r,t),a[0]=t.x,a[4]=e.x,a[8]=r.x,a[1]=t.y,a[5]=e.y,a[9]=r.y,a[2]=t.z,a[6]=e.z,a[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],c=r[12],h=r[1],l=r[5],u=r[9],p=r[13],d=r[2],f=r[6],m=r[10],v=r[14],g=r[3],y=r[7],x=r[11],b=r[15],_=i[0],w=i[4],M=i[8],E=i[12],T=i[1],S=i[5],A=i[9],R=i[13],L=i[2],P=i[6],C=i[10],I=i[14],O=i[3],U=i[7],N=i[11],D=i[15];return n[0]=o*_+a*T+s*L+c*O,n[4]=o*w+a*S+s*P+c*U,n[8]=o*M+a*A+s*C+c*N,n[12]=o*E+a*R+s*I+c*D,n[1]=h*_+l*T+u*L+p*O,n[5]=h*w+l*S+u*P+p*U,n[9]=h*M+l*A+u*C+p*N,n[13]=h*E+l*R+u*I+p*D,n[2]=d*_+f*T+m*L+v*O,n[6]=d*w+f*S+m*P+v*U,n[10]=d*M+f*A+m*C+v*N,n[14]=d*E+f*R+m*I+v*D,n[3]=g*_+y*T+x*L+b*O,n[7]=g*w+y*S+x*P+b*U,n[11]=g*M+y*A+x*C+b*N,n[15]=g*E+y*R+x*I+b*D,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new we;return function(e){for(var r=0,i=e.count;r<i;r++)t.x=e.getX(r),t.y=e.getY(r),t.z=e.getZ(r),t.applyMatrix4(this),e.setXYZ(r,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],p=t[14];return t[3]*(+n*s*l-i*c*l-n*a*u+r*c*u+i*a*p-r*s*p)+t[7]*(+e*s*p-e*c*u+n*o*u-i*o*p+i*c*h-n*s*h)+t[11]*(+e*c*l-e*a*p-n*o*l+r*o*p+n*a*h-r*c*h)+t[15]*(-i*a*h-e*s*l+e*a*u+i*o*l-r*o*u+r*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],o=i[1],a=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],p=i[8],d=i[9],f=i[10],m=i[11],v=i[12],g=i[13],y=i[14],x=i[15],b=d*y*u-g*f*u+g*l*m-h*y*m-d*l*x+h*f*x,_=v*f*u-p*y*u-v*l*m+c*y*m+p*l*x-c*f*x,w=p*g*u-v*d*u+v*h*m-c*g*m-p*h*x+c*d*x,M=v*d*l-p*g*l-v*h*f+c*g*f+p*h*y-c*d*y,E=n*b+o*_+a*w+s*M;if(0===E){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return r[0]=b*S,r[1]=(g*f*s-d*y*s-g*a*m+o*y*m+d*a*x-o*f*x)*S,r[2]=(h*y*s-g*l*s+g*a*u-o*y*u-h*a*x+o*l*x)*S,r[3]=(d*l*s-h*f*s-d*a*u+o*f*u+h*a*m-o*l*m)*S,r[4]=_*S,r[5]=(p*y*s-v*f*s+v*a*m-n*y*m-p*a*x+n*f*x)*S,r[6]=(v*l*s-c*y*s-v*a*u+n*y*u+c*a*x-n*l*x)*S,r[7]=(c*f*s-p*l*s+p*a*u-n*f*u-c*a*m+n*l*m)*S,r[8]=w*S,r[9]=(v*d*s-p*g*s-v*o*m+n*g*m+p*o*x-n*d*x)*S,r[10]=(c*g*s-v*h*s+v*o*u-n*g*u-c*o*x+n*h*x)*S,r[11]=(p*h*s-c*d*s-p*o*u+n*d*u+c*o*m-n*h*m)*S,r[12]=M*S,r[13]=(p*g*a-v*d*a+v*o*f-n*g*f-p*o*y+n*d*y)*S,r[14]=(v*h*a-c*g*a-v*o*l+n*g*l+c*o*y-n*h*y)*S,r[15]=(c*d*a-p*h*a+p*o*l-n*d*l-c*o*f+n*h*f)*S,this},scale:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z;return e[0]*=r,e[4]*=i,e[8]*=n,e[1]*=r,e[5]*=i,e[9]*=n,e[2]*=r,e[6]*=i,e[10]*=n,e[3]*=r,e[7]*=i,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,i))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,c=n*o,h=n*a;return this.set(c*o+r,c*a-i*s,c*s+i*a,0,c*a+i*s,h*a+r,h*s-i*o,0,c*s-i*a,h*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(t,e,r){return this.set(1,e,r,0,t,1,r,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t=new we,e=new be;return function(r,i,n){var o=this.elements,a=t.set(o[0],o[1],o[2]).length(),s=t.set(o[4],o[5],o[6]).length(),c=t.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],e.copy(this);var h=1/a,l=1/s,u=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,i.setFromRotationMatrix(e),n.x=a,n.y=s,n.z=c,this}}(),makePerspective:function(t,e,r,i,n,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,s=2*n/(e-t),c=2*n/(r-i),h=(e+t)/(e-t),l=(r+i)/(r-i),u=-(o+n)/(o-n),p=-2*o*n/(o-n);return a[0]=s,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=c,a[9]=l,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=1/(e-t),c=1/(r-i),h=1/(o-n),l=(e+t)*s,u=(r+i)*c,p=(o+n)*h;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-l,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*h,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,r=t.elements,i=0;i<16;i++)if(e[i]!==r[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var r=0;r<16;r++)this.elements[r]=t[r+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}}),Object.assign(_e,{slerp:function(t,e,r,i){return r.copy(t).slerp(e,i)},slerpFlat:function(t,e,r,i,n,o,a){var s=r[i+0],c=r[i+1],h=r[i+2],l=r[i+3],u=n[o+0],p=n[o+1],d=n[o+2],f=n[o+3];if(l!==f||s!==u||c!==p||h!==d){var m=1-a,v=s*u+c*p+h*d+l*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,v*g);m=Math.sin(m*b)/x,a=Math.sin(a*b)/x}var _=a*g;if(s=s*m+u*_,c=c*m+p*_,h=h*m+d*_,l=l*m+f*_,m===1-a){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),Object.defineProperties(_e.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(_e.prototype,{set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var r=t._x,i=t._y,n=t._z,o=t.order,a=Math.cos,s=Math.sin,c=a(r/2),h=a(i/2),l=a(n/2),u=s(r/2),p=s(i/2),d=s(n/2);return"XYZ"===o?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):"YXZ"===o?(this._x=u*h*l+c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):"ZXY"===o?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l-u*p*d):"ZYX"===o?(this._x=u*h*l-c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l+u*p*d):"YZX"===o?(this._x=u*h*l+c*p*d,this._y=c*p*l+u*h*d,this._z=c*h*d-u*p*l,this._w=c*h*l-u*p*d):"XZY"===o&&(this._x=u*h*l-c*p*d,this._y=c*p*l-u*h*d,this._z=c*h*d+u*p*l,this._w=c*h*l+u*p*d),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],c=r[9],h=r[2],l=r[6],u=r[10],p=i+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(l-c)*e,this._y=(o-h)*e,this._z=(a-n)*e):i>s&&i>u?(e=2*Math.sqrt(1+i-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(o+h)/e):s>u?(e=2*Math.sqrt(1+s-i-u),this._w=(o-h)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-i-s),this._w=(a-n)/e,this._x=(o+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new we;return function(r,i){return void 0===e&&(e=new we),(t=r.dot(i)+1)<1e-6?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,i),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,c=e._z,h=e._w;return this._x=r*h+o*a+i*c-n*s,this._y=i*h+o*s+n*a-r*c,this._z=n*h+o*c+r*s-i*a,this._w=o*h-r*a-i*s-n*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.sqrt(1-a*a);if(Math.abs(s)<.001)return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;var c=Math.atan2(s,a),h=Math.sin((1-e)*c)/s,l=Math.sin(e*c)/s;return this._w=o*h+this._w*l,this._x=r*h+this._x*l,this._y=i*h+this._y*l,this._z=n*h+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(we.prototype,{isVector3:!0,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new _e;return function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new _e;return function(e,r){return this.applyQuaternion(t.setFromAxisAngle(e,r))}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,o=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*o,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*o,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*o,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z,s=t.w,c=s*e+o*i-a*r,h=s*r+a*e-n*i,l=s*i+n*r-o*e,u=-n*e-o*r-a*i;return this.x=c*s+u*-n+h*-a-l*-o,this.y=h*s+u*-o+l*-n-c*-a,this.z=l*s+u*-a+c*-o-h*-n,this},project:function(){var t=new be;return function(e){return t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new be;return function(e){return t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new we,e=new we;return function(r,i){return t.set(r,r,r),e.set(i,i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new we;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new we;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(ye.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),r=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=r,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(Me.prototype,{isMatrix3:!0,set:function(t,e,r,i,n,o,a,s,c){var h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=n,h[5]=s,h[6]=r,h[7]=o,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new we;return function(e){for(var r=0,i=e.count;r<i;r++)t.x=e.getX(r),t.y=e.getY(r),t.z=e.getZ(r),t.applyMatrix3(this),e.setXYZ(r,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[3],s=r[6],c=r[1],h=r[4],l=r[7],u=r[2],p=r[5],d=r[8],f=i[0],m=i[3],v=i[6],g=i[1],y=i[4],x=i[7],b=i[2],_=i[5],w=i[8];return n[0]=o*f+a*g+s*b,n[3]=o*m+a*y+s*_,n[6]=o*v+a*x+s*w,n[1]=c*f+h*g+l*b,n[4]=c*m+h*y+l*_,n[7]=c*v+h*x+l*w,n[2]=u*f+p*g+d*b,n[5]=u*m+p*y+d*_,n[8]=u*v+p*x+d*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-r*n*h+r*a*s+i*n*c-i*o*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var r=t.elements,i=this.elements,n=r[0],o=r[1],a=r[2],s=r[3],c=r[4],h=r[5],l=r[6],u=r[7],p=r[8],d=p*c-h*u,f=h*l-p*s,m=u*s-c*l,v=n*d+o*f+a*m;if(0===v){var g="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(g);return console.warn(g),this.identity()}var y=1/v;return i[0]=d*y,i[1]=(a*u-p*o)*y,i[2]=(h*o-a*c)*y,i[3]=f*y,i[4]=(p*n-a*l)*y,i[5]=(a*s-h*n)*y,i[6]=m*y,i[7]=(o*l-u*n)*y,i[8]=(c*n-o*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,r,i,n,o,a){var s=Math.cos(n),c=Math.sin(n);this.set(r*s,r*c,-r*(s*o+c*a)+o+t,-i*c,i*s,-i*(-c*o+s*a)+a+e,0,0,1)},scale:function(t,e){var r=this.elements;return r[0]*=t,r[3]*=t,r[6]*=t,r[1]*=e,r[4]*=e,r[7]*=e,this},rotate:function(t){var e=Math.cos(t),r=Math.sin(t),i=this.elements,n=i[0],o=i[3],a=i[6],s=i[1],c=i[4],h=i[7];return i[0]=e*n+r*s,i[3]=e*o+r*c,i[6]=e*a+r*h,i[1]=-r*n+e*s,i[4]=-r*o+e*c,i[7]=-r*a+e*h,this},translate:function(t,e){var r=this.elements;return r[0]+=t*r[2],r[3]+=t*r[5],r[6]+=t*r[8],r[1]+=e*r[2],r[4]+=e*r[5],r[7]+=e*r[8],this},equals:function(t){for(var e=this.elements,r=t.elements,i=0;i<9;i++)if(e[i]!==r[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var r=0;r<9;r++)this.elements[r]=t[r+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t}});var Ee=0;function Te(t,e,r,i,n,o,a,s,c,h){Object.defineProperty(this,"id",{value:Ee++}),this.uuid=ye.generateUUID(),this.name="",this.image=void 0!==t?t:Te.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:Te.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:dt,this.wrapT=void 0!==i?i:dt,this.magFilter=void 0!==n?n:yt,this.minFilter=void 0!==o?o:bt,this.anisotropy=void 0!==c?c:1,this.format=void 0!==a?a:Nt,this.type=void 0!==s?s:_t,this.offset=new xe(0,0),this.repeat=new xe(1,1),this.center=new xe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Me,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==h?h:ce,this.version=0,this.onUpdate=null}function Se(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1}function Ae(t,e,r){this.uuid=ye.generateUUID(),this.width=t,this.height=e,this.scissor=new Se(0,0,t,e),this.scissorTest=!1,this.viewport=new Se(0,0,t,e),void 0===(r=r||{}).minFilter&&(r.minFilter=yt),this.texture=new Te(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function Re(t,e,r){Ae.call(this,t,e,r),this.activeCubeFace=0,this.activeMipMapLevel=0}function Le(t,e,r,i,n,o,a,s,c,h,l,u){Te.call(this,null,o,a,s,c,h,i,n,l,u),this.image={data:t,width:e,height:r},this.magFilter=void 0!==c?c:mt,this.minFilter=void 0!==h?h:mt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function Pe(t,e,r,i,n,o,a,s,c,h){t=void 0!==t?t:[],e=void 0!==e?e:ot,Te.call(this,t,e,r,i,n,o,a,s,c,h),this.flipY=!1}Te.DEFAULT_IMAGE=void 0,Te.DEFAULT_MAPPING=nt,Te.prototype=Object.assign(Object.create(t.prototype),{constructor:Te,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var i=this.image;void 0===i.uuid&&(i.uuid=ye.generateUUID()),e||void 0!==t.images[i.uuid]||(t.images[i.uuid]={uuid:i.uuid,url:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=t.width,e.height=t.height;var r=e.getContext("2d");t instanceof ImageData?r.putImageData(t,0,0):r.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(i)}),r.image=i.uuid}return e||(t.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping===nt){if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case pt:t.x=t.x-Math.floor(t.x);break;case dt:t.x=t.x<0?0:1;break;case ft:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case pt:t.y=t.y-Math.floor(t.y);break;case dt:t.y=t.y<0?0:1;break;case ft:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}}),Object.defineProperty(Te.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Se.prototype,{isVector4:!0,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*e+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*e+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*e+o[7]*r+o[11]*i+o[15]*n,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n,o=t.elements,a=o[0],s=o[4],c=o[8],h=o[1],l=o[5],u=o[9],p=o[2],d=o[6],f=o[10];if(Math.abs(s-h)<.01&&Math.abs(c-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(s+h)<.1&&Math.abs(c+p)<.1&&Math.abs(u+d)<.1&&Math.abs(a+l+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(a+1)/2,v=(l+1)/2,g=(f+1)/2,y=(s+h)/4,x=(c+p)/4,b=(u+d)/4;return m>v&&m>g?m<.01?(r=0,i=.707106781,n=.707106781):(i=y/(r=Math.sqrt(m)),n=x/r):v>g?v<.01?(r=.707106781,i=0,n=.707106781):(r=y/(i=Math.sqrt(v)),n=b/i):g<.01?(r=.707106781,i=.707106781,n=0):(r=x/(n=Math.sqrt(g)),i=b/n),this.set(r,i,n,e),this}var _=Math.sqrt((d-u)*(d-u)+(c-p)*(c-p)+(h-s)*(h-s));return Math.abs(_)<.001&&(_=1),this.x=(d-u)/_,this.y=(c-p)/_,this.z=(h-s)/_,this.w=Math.acos((a+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new Se,e=new Se),t.set(r,r,r,r),e.set(i,i,i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Ae.prototype=Object.assign(Object.create(t.prototype),{constructor:Ae,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Re.prototype=Object.create(Ae.prototype),Re.prototype.constructor=Re,Re.prototype.isWebGLRenderTargetCube=!0,Le.prototype=Object.create(Te.prototype),Le.prototype.constructor=Le,Le.prototype.isDataTexture=!0,Pe.prototype=Object.create(Te.prototype),Pe.prototype.constructor=Pe,Pe.prototype.isCubeTexture=!0,Object.defineProperty(Pe.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});var Ce=new Te,Ie=new Pe;function Oe(){this.seq=[],this.map={}}var Ue=[],Ne=[],De=new Float32Array(16),Fe=new Float32Array(9);function Be(t,e,r){var i=t[0];if(i<=0||i>0)return t;var n=e*r,o=Ue[n];if(void 0===o&&(o=new Float32Array(n),Ue[n]=o),0!==e){i.toArray(o,0);for(var a=1,s=0;a!==e;++a)s+=r,t[a].toArray(o,s)}return o}function ze(t,e){var r=Ne[e];void 0===r&&(r=new Int32Array(e),Ne[e]=r);for(var i=0;i!==e;++i)r[i]=t.allocTextureUnit();return r}function Ge(t,e){t.uniform1f(this.addr,e)}function He(t,e){t.uniform1i(this.addr,e)}function Ve(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function ke(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function je(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function We(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function Xe(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(Fe.set(e.elements),t.uniformMatrix3fv(this.addr,!1,Fe))}function qe(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(De.set(e.elements),t.uniformMatrix4fv(this.addr,!1,De))}function Ye(t,e,r){var i=r.allocTextureUnit();t.uniform1i(this.addr,i),r.setTexture2D(e||Ce,i)}function Ze(t,e,r){var i=r.allocTextureUnit();t.uniform1i(this.addr,i),r.setTextureCube(e||Ie,i)}function Je(t,e){t.uniform2iv(this.addr,e)}function Qe(t,e){t.uniform3iv(this.addr,e)}function Ke(t,e){t.uniform4iv(this.addr,e)}function $e(t){switch(t){case 5126:return Ge;case 35664:return Ve;case 35665:return ke;case 35666:return je;case 35674:return We;case 35675:return Xe;case 35676:return qe;case 35678:case 36198:return Ye;case 35680:return Ze;case 5124:case 35670:return He;case 35667:case 35671:return Je;case 35668:case 35672:return Qe;case 35669:case 35673:return Ke}}function tr(t,e){t.uniform1fv(this.addr,e)}function er(t,e){t.uniform1iv(this.addr,e)}function rr(t,e){t.uniform2fv(this.addr,Be(e,this.size,2))}function ir(t,e){t.uniform3fv(this.addr,Be(e,this.size,3))}function nr(t,e){t.uniform4fv(this.addr,Be(e,this.size,4))}function or(t,e){t.uniformMatrix2fv(this.addr,!1,Be(e,this.size,4))}function ar(t,e){t.uniformMatrix3fv(this.addr,!1,Be(e,this.size,9))}function sr(t,e){t.uniformMatrix4fv(this.addr,!1,Be(e,this.size,16))}function cr(t,e,r){var i=e.length,n=ze(r,i);t.uniform1iv(this.addr,n);for(var o=0;o!==i;++o)r.setTexture2D(e[o]||Ce,n[o])}function hr(t,e,r){var i=e.length,n=ze(r,i);t.uniform1iv(this.addr,n);for(var o=0;o!==i;++o)r.setTextureCube(e[o]||Ie,n[o])}function lr(t){switch(t){case 5126:return tr;case 35664:return rr;case 35665:return ir;case 35666:return nr;case 35674:return or;case 35675:return ar;case 35676:return sr;case 35678:return cr;case 35680:return hr;case 5124:case 35670:return er;case 35667:case 35671:return Je;case 35668:case 35672:return Qe;case 35669:case 35673:return Ke}}function ur(t,e,r){this.id=t,this.addr=r,this.setValue=$e(e.type)}function pr(t,e,r){this.id=t,this.addr=r,this.size=e.size,this.setValue=lr(e.type)}function dr(t){this.id=t,Oe.call(this)}dr.prototype.setValue=function(t,e){for(var r=this.seq,i=0,n=r.length;i!==n;++i){var o=r[i];o.setValue(t,e[o.id])}};var fr=/([\w\d_]+)(\])?(\[|\.)?/g;function mr(t,e){t.seq.push(e),t.map[e.id]=e}function vr(t,e,r){var i=t.name,n=i.length;for(fr.lastIndex=0;;){var o=fr.exec(i),a=fr.lastIndex,s=o[1],c="]"===o[2],h=o[3];if(c&&(s|=0),void 0===h||"["===h&&a+2===n){mr(r,void 0===h?new ur(s,t,e):new pr(s,t,e));break}var l=r.map[s];void 0===l&&mr(r,l=new dr(s)),r=l}}function gr(t,e,r){Oe.call(this),this.renderer=r;for(var i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),n=0;n<i;++n){var o=t.getActiveUniform(e,n),a=o.name;vr(o,t.getUniformLocation(e,a),this)}}gr.prototype.setValue=function(t,e,r){var i=this.map[e];void 0!==i&&i.setValue(t,r,this.renderer)},gr.prototype.setOptional=function(t,e,r){var i=e[r];void 0!==i&&this.setValue(t,r,i)},gr.upload=function(t,e,r,i){for(var n=0,o=e.length;n!==o;++n){var a=e[n],s=r[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}},gr.seqWithValue=function(t,e){for(var r=[],i=0,n=t.length;i!==n;++i){var o=t[i];o.id in e&&r.push(o)}return r};var yr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function xr(t,e,r){return void 0===e&&void 0===r?this.set(t):this.setRGB(t,e,r)}Object.assign(xr.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(){function t(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t}return function(e,r,i){if(e=ye.euclideanModulo(e,1),r=ye.clamp(r,0,1),i=ye.clamp(i,0,1),0===r)this.r=this.g=this.b=i;else{var n=i<=.5?i*(1+r):i+r-i*r,o=2*i-n;this.r=t(o,n,e+1/3),this.g=t(o,n,e),this.b=t(o,n,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,n=r[1],o=r[2];switch(n){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var a=parseFloat(i[1])/360,s=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(a,s,c)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(t)){var h,l=(h=r[1]).length;if(3===l)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}t&&t.length>0&&(void 0!==(h=yr[t])?this.setHex(h):console.warn("THREE.Color: Unknown color "+t));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var r=e>0?1/e:1;return this.r=Math.pow(t.r,r),this.g=Math.pow(t.g,r),this.b=Math.pow(t.b,r),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,r,i=t||{h:0,s:0,l:0},n=this.r,o=this.g,a=this.b,s=Math.max(n,o,a),c=Math.min(n,o,a),h=(c+s)/2;if(c===s)e=0,r=0;else{var l=s-c;switch(r=h<=.5?l/(s+c):l/(2-s-c),s){case n:e=(o-a)/l+(o<a?6:0);break;case o:e=(a-n)/l+2;break;case a:e=(n-o)/l+4}e/=6}return i.h=e,i.s=r,i.l=h,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var br={common:{diffuse:{value:new xr(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Me},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new xe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new xr(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new xr(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new Me}}};exports.UniformsLib=br;var _r={merge:function(t){for(var e={},r=0;r<t.length;r++){var i=this.clone(t[r]);for(var n in i)e[n]=i[n]}return e},clone:function(t){var e={};for(var r in t)for(var i in e[r]={},t[r]){var n=t[r][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture)?e[r][i]=n.clone():Array.isArray(n)?e[r][i]=n.slice():e[r][i]=n}return e}};exports.UniformsUtils=_r;var wr="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",Mr="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",Er="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",Tr="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",Sr="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",Ar="\nvec3 transformed = vec3( position );\n",Rr="\nvec3 objectNormal = vec3( normal );\n",Lr="float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",Pr="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",Cr="#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",Ir="#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",Or="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",Ur="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",Nr="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",Dr="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",Fr="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",Br="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",zr="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",Gr="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",Hr="vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",Vr="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",kr="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",jr="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",Wr="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",Xr="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",qr="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",Yr="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",Zr="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",Jr="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",Qr="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",Kr="\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",$r="#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",ti="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",ei="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",ri="#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",ii="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",ni="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",oi="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",ai="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",si="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",ci="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",hi="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",li="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",ui="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",pi="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",di="#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",fi="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",mi="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",vi="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",gi="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",yi="#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",xi="#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",bi="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",_i="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",wi="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",Mi="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",Ei="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",Ti="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",Si="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",Ai="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",Ri="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",Li="vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",Pi="#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",Ci="#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",Ii="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",Oi="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",Ui="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",Ni="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",Di="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",Fi="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",Bi="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",zi="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",Gi="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",Hi="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",Vi="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",ki="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",ji="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",Wi="#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",Xi="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",qi="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",Yi="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",Zi="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",Ji="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",Qi="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",Ki="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",$i="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",tn="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",en="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",rn="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",nn="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",on="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",an="uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",sn="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",cn="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",hn="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",ln="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",un="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",pn="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",dn="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",fn="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",mn="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",vn="#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",gn="#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",yn="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",xn="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",bn="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",_n="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",wn="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",Mn="#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",En={alphamap_fragment:wr,alphamap_pars_fragment:Mr,alphatest_fragment:Er,aomap_fragment:Tr,aomap_pars_fragment:Sr,begin_vertex:Ar,beginnormal_vertex:Rr,bsdfs:Lr,bumpmap_pars_fragment:Pr,clipping_planes_fragment:Cr,clipping_planes_pars_fragment:Ir,clipping_planes_pars_vertex:Or,clipping_planes_vertex:Ur,color_fragment:Nr,color_pars_fragment:Dr,color_pars_vertex:Fr,color_vertex:Br,common:zr,cube_uv_reflection_fragment:Gr,defaultnormal_vertex:Hr,displacementmap_pars_vertex:Vr,displacementmap_vertex:kr,emissivemap_fragment:jr,emissivemap_pars_fragment:Wr,encodings_fragment:Xr,encodings_pars_fragment:qr,envmap_fragment:Yr,envmap_pars_fragment:Zr,envmap_pars_vertex:Jr,envmap_vertex:Qr,fog_vertex:Kr,fog_pars_vertex:$r,fog_fragment:ti,fog_pars_fragment:ei,gradientmap_pars_fragment:ri,lightmap_fragment:ii,lightmap_pars_fragment:ni,lights_lambert_vertex:oi,lights_pars:ai,lights_phong_fragment:si,lights_phong_pars_fragment:ci,lights_physical_fragment:hi,lights_physical_pars_fragment:li,lights_template:ui,logdepthbuf_fragment:pi,logdepthbuf_pars_fragment:di,logdepthbuf_pars_vertex:fi,logdepthbuf_vertex:mi,map_fragment:vi,map_pars_fragment:gi,map_particle_fragment:yi,map_particle_pars_fragment:xi,metalnessmap_fragment:bi,metalnessmap_pars_fragment:_i,morphnormal_vertex:wi,morphtarget_pars_vertex:Mi,morphtarget_vertex:Ei,normal_fragment:Ti,normalmap_pars_fragment:Si,packing:Ai,premultiplied_alpha_fragment:Ri,project_vertex:Li,dithering_fragment:Pi,dithering_pars_fragment:Ci,roughnessmap_fragment:Ii,roughnessmap_pars_fragment:Oi,shadowmap_pars_fragment:Ui,shadowmap_pars_vertex:Ni,shadowmap_vertex:Di,shadowmask_pars_fragment:Fi,skinbase_vertex:Bi,skinning_pars_vertex:zi,skinning_vertex:Gi,skinnormal_vertex:Hi,specularmap_fragment:Vi,specularmap_pars_fragment:ki,tonemapping_fragment:ji,tonemapping_pars_fragment:Wi,uv_pars_fragment:Xi,uv_pars_vertex:qi,uv_vertex:Yi,uv2_pars_fragment:Zi,uv2_pars_vertex:Ji,uv2_vertex:Qi,worldpos_vertex:Ki,cube_frag:$i,cube_vert:tn,depth_frag:en,depth_vert:rn,distanceRGBA_frag:nn,distanceRGBA_vert:on,equirect_frag:an,equirect_vert:sn,linedashed_frag:cn,linedashed_vert:hn,meshbasic_frag:ln,meshbasic_vert:un,meshlambert_frag:pn,meshlambert_vert:dn,meshphong_frag:fn,meshphong_vert:mn,meshphysical_frag:vn,meshphysical_vert:gn,normal_frag:yn,normal_vert:xn,points_frag:bn,points_vert:_n,shadow_frag:wn,shadow_vert:Mn};exports.ShaderChunk=En;var Tn={basic:{uniforms:_r.merge([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.fog]),vertexShader:En.meshbasic_vert,fragmentShader:En.meshbasic_frag},lambert:{uniforms:_r.merge([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.fog,br.lights,{emissive:{value:new xr(0)}}]),vertexShader:En.meshlambert_vert,fragmentShader:En.meshlambert_frag},phong:{uniforms:_r.merge([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.gradientmap,br.fog,br.lights,{emissive:{value:new xr(0)},specular:{value:new xr(1118481)},shininess:{value:30}}]),vertexShader:En.meshphong_vert,fragmentShader:En.meshphong_frag},standard:{uniforms:_r.merge([br.common,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.roughnessmap,br.metalnessmap,br.fog,br.lights,{emissive:{value:new xr(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:En.meshphysical_vert,fragmentShader:En.meshphysical_frag},points:{uniforms:_r.merge([br.points,br.fog]),vertexShader:En.points_vert,fragmentShader:En.points_frag},dashed:{uniforms:_r.merge([br.common,br.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:En.linedashed_vert,fragmentShader:En.linedashed_frag},depth:{uniforms:_r.merge([br.common,br.displacementmap]),vertexShader:En.depth_vert,fragmentShader:En.depth_frag},normal:{uniforms:_r.merge([br.common,br.bumpmap,br.normalmap,br.displacementmap,{opacity:{value:1}}]),vertexShader:En.normal_vert,fragmentShader:En.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:En.cube_vert,fragmentShader:En.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:En.equirect_vert,fragmentShader:En.equirect_frag},distanceRGBA:{uniforms:_r.merge([br.common,br.displacementmap,{referencePosition:{value:new we},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:En.distanceRGBA_vert,fragmentShader:En.distanceRGBA_frag},shadow:{uniforms:_r.merge([br.lights,br.fog,{color:{value:new xr(0)},opacity:{value:1}}]),vertexShader:En.shadow_vert,fragmentShader:En.shadow_frag}};function Sn(t,e){this.min=void 0!==t?t:new xe(1/0,1/0),this.max=void 0!==e?e:new xe(-1/0,-1/0)}function An(t,e,r,i,n){var o,a,s,c,h,l,u,p;function d(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),i=new Uint16Array([0,1,2,0,2,3]);o=e.createBuffer(),a=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,o),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),u=e.createTexture(),p=e.createTexture(),r.bindTexture(e.TEXTURE_2D,u),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),r.bindTexture(e.TEXTURE_2D,p),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),s={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position;","\tif ( renderType == 2 ) {","\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\t\tvVisibility =        visibility.r / 9.0;","\t\tvVisibility *= 1.0 - visibility.g / 9.0;","\t\tvVisibility *=       visibility.b / 9.0;","\t\tvVisibility *= 1.0 - visibility.a / 9.0;","\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","\t}","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tif ( renderType == 0 ) {","\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","\t} else if ( renderType == 1 ) {","\t\tgl_FragColor = texture2D( map, vUV );","\t} else {","\t\tvec4 texture = texture2D( map, vUV );","\t\ttexture.a *= opacity * vVisibility;","\t\tgl_FragColor = texture;","\t\tgl_FragColor.rgb *= color;","\t}","}"].join("\n")},c=function(t){var r=e.createProgram(),i=e.createShader(e.FRAGMENT_SHADER),o=e.createShader(e.VERTEX_SHADER),a="precision "+n.precision+" float;\n";return e.shaderSource(i,a+t.fragmentShader),e.shaderSource(o,a+t.vertexShader),e.compileShader(i),e.compileShader(o),e.attachShader(r,i),e.attachShader(r,o),e.linkProgram(r),r}(s),h={vertex:e.getAttribLocation(c,"position"),uv:e.getAttribLocation(c,"uv")},l={renderType:e.getUniformLocation(c,"renderType"),map:e.getUniformLocation(c,"map"),occlusionMap:e.getUniformLocation(c,"occlusionMap"),opacity:e.getUniformLocation(c,"opacity"),color:e.getUniformLocation(c,"color"),scale:e.getUniformLocation(c,"scale"),rotation:e.getUniformLocation(c,"rotation"),screenPosition:e.getUniformLocation(c,"screenPosition")}}this.render=function(t,n,s,f){if(0!==t.length){var m=new we,v=f.w/f.z,g=.5*f.z,y=.5*f.w,x=16/f.w,b=new xe(x*v,x),_=new we(1,1,0),w=new xe(1,1),M=new Sn;M.min.set(f.x,f.y),M.max.set(f.x+(f.z-16),f.y+(f.w-16)),void 0===c&&d(),r.useProgram(c),r.initAttributes(),r.enableAttribute(h.vertex),r.enableAttribute(h.uv),r.disableUnusedAttributes(),e.uniform1i(l.occlusionMap,0),e.uniform1i(l.map,1),e.bindBuffer(e.ARRAY_BUFFER,o),e.vertexAttribPointer(h.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(h.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),r.disable(e.CULL_FACE),r.buffers.depth.setMask(!1);for(var E=0,T=t.length;E<T;E++){x=16/f.w,b.set(x*v,x);var S=t[E];if(m.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),m.applyMatrix4(s.matrixWorldInverse),m.applyMatrix4(s.projectionMatrix),_.copy(m),w.x=f.x+_.x*g+g-8,w.y=f.y+_.y*y+y-8,!0===M.containsPoint(w)){r.activeTexture(e.TEXTURE0),r.bindTexture(e.TEXTURE_2D,null),r.activeTexture(e.TEXTURE1),r.bindTexture(e.TEXTURE_2D,u),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,w.x,w.y,16,16,0),e.uniform1i(l.renderType,0),e.uniform2f(l.scale,b.x,b.y),e.uniform3f(l.screenPosition,_.x,_.y,_.z),r.disable(e.BLEND),r.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),r.activeTexture(e.TEXTURE0),r.bindTexture(e.TEXTURE_2D,p),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,w.x,w.y,16,16,0),e.uniform1i(l.renderType,1),r.disable(e.DEPTH_TEST),r.activeTexture(e.TEXTURE1),r.bindTexture(e.TEXTURE_2D,u),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),S.positionScreen.copy(_),S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares(),e.uniform1i(l.renderType,2),r.enable(e.BLEND);for(var A=0,R=S.lensFlares.length;A<R;A++){var L=S.lensFlares[A];L.opacity>.001&&L.scale>.001&&(_.x=L.x,_.y=L.y,_.z=L.z,x=L.size*L.scale/f.w,b.x=x*v,b.y=x,e.uniform3f(l.screenPosition,_.x,_.y,_.z),e.uniform2f(l.scale,b.x,b.y),e.uniform1f(l.rotation,L.rotation),e.uniform1f(l.opacity,L.opacity),e.uniform3f(l.color,L.color.r,L.color.g,L.color.b),r.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst),i.setTexture2D(L.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}r.enable(e.CULL_FACE),r.enable(e.DEPTH_TEST),r.buffers.depth.setMask(!0),r.reset()}}}function Rn(t,e,r,i,n,o,a,s,c){Te.call(this,t,e,r,i,n,o,a,s,c),this.needsUpdate=!0}function Ln(t,e,r,i,n){var o,a,s,c,h,l,u=new we,p=new _e,d=new we;function f(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),r=new Uint16Array([0,1,2,0,2,3]);o=e.createBuffer(),a=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,o),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),e.bufferData(e.ELEMENT_ARRAY_BUFFER,r,e.STATIC_DRAW),s=function(){var t=e.createProgram(),r=e.createShader(e.VERTEX_SHADER),i=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(r,["precision "+n.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = position * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),e.shaderSource(i,["precision "+n.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),e.compileShader(r),e.compileShader(i),e.attachShader(t,r),e.attachShader(t,i),e.linkProgram(t),t}(),c={position:e.getAttribLocation(s,"position"),uv:e.getAttribLocation(s,"uv")},h={uvOffset:e.getUniformLocation(s,"uvOffset"),uvScale:e.getUniformLocation(s,"uvScale"),rotation:e.getUniformLocation(s,"rotation"),scale:e.getUniformLocation(s,"scale"),color:e.getUniformLocation(s,"color"),map:e.getUniformLocation(s,"map"),opacity:e.getUniformLocation(s,"opacity"),modelViewMatrix:e.getUniformLocation(s,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(s,"projectionMatrix"),fogType:e.getUniformLocation(s,"fogType"),fogDensity:e.getUniformLocation(s,"fogDensity"),fogNear:e.getUniformLocation(s,"fogNear"),fogFar:e.getUniformLocation(s,"fogFar"),fogColor:e.getUniformLocation(s,"fogColor"),fogDepth:e.getUniformLocation(s,"fogDepth"),alphaTest:e.getUniformLocation(s,"alphaTest")};var i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");i.width=8,i.height=8;var u=i.getContext("2d");u.fillStyle="white",u.fillRect(0,0,8,8),l=new Rn(i)}function m(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}this.render=function(n,v,g){if(0!==n.length){void 0===s&&f(),r.useProgram(s),r.initAttributes(),r.enableAttribute(c.position),r.enableAttribute(c.uv),r.disableUnusedAttributes(),r.disable(e.CULL_FACE),r.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,o),e.vertexAttribPointer(c.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(c.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a),e.uniformMatrix4fv(h.projectionMatrix,!1,g.projectionMatrix.elements),r.activeTexture(e.TEXTURE0),e.uniform1i(h.map,0);var y=0,x=0,b=v.fog;b?(e.uniform3f(h.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(e.uniform1f(h.fogNear,b.near),e.uniform1f(h.fogFar,b.far),e.uniform1i(h.fogType,1),y=1,x=1):b.isFogExp2&&(e.uniform1f(h.fogDensity,b.density),e.uniform1i(h.fogType,2),y=2,x=2)):(e.uniform1i(h.fogType,0),y=0,x=0);for(var _=0,w=n.length;_<w;_++){(E=n[_]).modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,E.matrixWorld),E.z=-E.modelViewMatrix.elements[14]}n.sort(m);var M=[];for(_=0,w=n.length;_<w;_++){var E,T=(E=n[_]).material;if(!1!==T.visible){E.onBeforeRender(t,v,g,void 0,T,void 0),e.uniform1f(h.alphaTest,T.alphaTest),e.uniformMatrix4fv(h.modelViewMatrix,!1,E.modelViewMatrix.elements),E.matrixWorld.decompose(u,p,d),M[0]=d.x,M[1]=d.y;var S=0;v.fog&&T.fog&&(S=x),y!==S&&(e.uniform1i(h.fogType,S),y=S),null!==T.map?(e.uniform2f(h.uvOffset,T.map.offset.x,T.map.offset.y),e.uniform2f(h.uvScale,T.map.repeat.x,T.map.repeat.y)):(e.uniform2f(h.uvOffset,0,0),e.uniform2f(h.uvScale,1,1)),e.uniform1f(h.opacity,T.opacity),e.uniform3f(h.color,T.color.r,T.color.g,T.color.b),e.uniform1f(h.rotation,T.rotation),e.uniform2fv(h.scale,M),r.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),r.buffers.depth.setTest(T.depthTest),r.buffers.depth.setMask(T.depthWrite),r.buffers.color.setMask(T.colorWrite),i.setTexture2D(T.map||l,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),E.onAfterRender(t,v,g,void 0,T,void 0)}}r.enable(e.CULL_FACE),r.reset()}}}exports.ShaderLib=Tn,Tn.physical={uniforms:_r.merge([Tn.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:En.meshphysical_vert,fragmentShader:En.meshphysical_frag},Object.assign(Sn.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new xe;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new xe;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new xe;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new xe).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new xe).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new xe;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Rn.prototype=Object.create(Te.prototype),Rn.prototype.constructor=Rn;var Pn=0;function Cn(){Object.defineProperty(this,"id",{value:Pn++}),this.uuid=ye.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=_,this.side=p,this.flatShading=!1,this.vertexColors=g,this.opacity=1,this.transparent=!1,this.blendSrc=N,this.blendDst=D,this.blendEquation=S,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=W,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function In(t){Cn.call(this),this.type="MeshDepthMaterial",this.depthPacking=ve,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function On(t){Cn.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new we,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}function Un(t,e){this.min=void 0!==t?t:new we(1/0,1/0,1/0),this.max=void 0!==e?e:new we(-1/0,-1/0,-1/0)}function Nn(t,e){this.center=void 0!==t?t:new we,this.radius=void 0!==e?e:0}function Dn(t,e){this.normal=void 0!==t?t:new we(1,0,0),this.constant=void 0!==e?e:0}function Fn(t,e,r,i,n,o){this.planes=[void 0!==t?t:new Dn,void 0!==e?e:new Dn,void 0!==r?r:new Dn,void 0!==i?i:new Dn,void 0!==n?n:new Dn,void 0!==o?o:new Dn]}function Bn(t,e,r){for(var i=new Fn,n=new be,o=new xe,a=new xe(r,r),s=new we,c=new we,h=1,u=2,m=1+(h|u),v=new Array(m),g=new Array(m),y={},x=[new we(1,0,0),new we(-1,0,0),new we(0,0,1),new we(0,0,-1),new we(0,1,0),new we(0,-1,0)],b=[new we(0,1,0),new we(0,1,0),new we(0,1,0),new we(0,1,0),new we(0,0,1),new we(0,0,-1)],_=[new Se,new Se,new Se,new Se,new Se,new Se],w=0;w!==m;++w){var M=0!=(w&h),E=0!=(w&u),T=new In({depthPacking:ge,morphTargets:M,skinning:E});v[w]=T;var S=new On({morphTargets:M,skinning:E});g[w]=S}var A=this;function R(e,r,i,n,o,a){var s=e.geometry,c=null,l=v,m=e.customDepthMaterial;if(i&&(l=g,m=e.customDistanceMaterial),m)c=m;else{var x=!1;r.morphTargets&&(s&&s.isBufferGeometry?x=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(x=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&!1===r.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var b=e.isSkinnedMesh&&r.skinning,_=0;x&&(_|=h),b&&(_|=u),c=l[_]}if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var w=c.uuid,M=r.uuid,E=y[w];void 0===E&&(E={},y[w]=E);var T=E[M];void 0===T&&(T=c.clone(),E[M]=T),c=T}c.visible=r.visible,c.wireframe=r.wireframe;var S=r.side;return A.renderSingleSided&&S==f&&(S=p),A.renderReverseSided&&(S===p?S=d:S===d&&(S=p)),c.side=S,c.clipShadows=r.clipShadows,c.clippingPlanes=r.clippingPlanes,c.clipIntersection=r.clipIntersection,c.wireframeLinewidth=r.wireframeLinewidth,c.linewidth=r.linewidth,i&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(n),c.nearDistance=o,c.farDistance=a),c}function L(r,n,o,a){if(!1!==r.visible){if(r.layers.test(n.layers)&&(r.isMesh||r.isLine||r.isPoints)&&r.castShadow&&(!r.frustumCulled||i.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,r.matrixWorld);var s=e.update(r),h=r.material;if(Array.isArray(h))for(var l=s.groups,u=0,p=l.length;u<p;u++){var d=l[u],f=h[d.materialIndex];if(f&&f.visible){var m=R(r,f,a,c,o.near,o.far);t.renderBufferDirect(o,null,s,m,r,d)}}else if(h.visible){m=R(r,h,a,c,o.near,o.far);t.renderBufferDirect(o,null,s,m,r,null)}}for(var v=r.children,g=0,y=v.length;g<y;g++)L(v[g],n,o,a)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=l,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,r,h){if(!1!==A.enabled&&(!1!==A.autoUpdate||!1!==A.needsUpdate)&&0!==e.length){var l,u=t.context,p=t.state;p.disable(u.BLEND),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(var d=0,f=e.length;d<f;d++){var m=e[d],v=m.shadow,g=m&&m.isPointLight;if(void 0!==v){var y=v.camera;if(o.copy(v.mapSize),o.min(a),g){var w=o.x,M=o.y;_[0].set(2*w,M,w,M),_[1].set(0,M,w,M),_[2].set(3*w,M,w,M),_[3].set(w,M,w,M),_[4].set(3*w,0,w,M),_[5].set(w,0,w,M),o.x*=4,o.y*=2}if(null===v.map){var E={minFilter:mt,magFilter:mt,format:Nt};v.map=new Ae(o.x,o.y,E),v.map.texture.name=m.name+".shadowMap",y.updateProjectionMatrix()}v.isSpotLightShadow&&v.update(m);var T=v.map,S=v.matrix;c.setFromMatrixPosition(m.matrixWorld),y.position.copy(c),g?(l=6,S.makeTranslation(-c.x,-c.y,-c.z)):(l=1,s.setFromMatrixPosition(m.target.matrixWorld),y.lookAt(s),y.updateMatrixWorld(),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiply(y.projectionMatrix),S.multiply(y.matrixWorldInverse)),t.setRenderTarget(T),t.clear();for(var R=0;R<l;R++){if(g){s.copy(y.position),s.add(x[R]),y.up.copy(b[R]),y.lookAt(s),y.updateMatrixWorld();var P=_[R];p.viewport(P)}n.multiplyMatrices(y.projectionMatrix,y.matrixWorldInverse),i.setFromMatrix(n),L(r,h,y,g)}}else console.warn("THREE.WebGLShadowMap:",m,"has no shadow.")}A.needsUpdate=!1}}}function zn(t){var e={};return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e[t.uuid]},remove:function(r){r.isInterleavedBufferAttribute&&(r=r.data);var i=e[r.uuid];i&&(t.deleteBuffer(i.buffer),delete e[r.uuid])},update:function(r,i){r.isInterleavedBufferAttribute&&(r=r.data);var n=e[r.uuid];void 0===n?e[r.uuid]=function(e,r){var i=e.array,n=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,o=t.createBuffer();t.bindBuffer(r,o),t.bufferData(r,i,n),e.onUploadCallback();var a=t.FLOAT;return i instanceof Float32Array?a=t.FLOAT:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?a=t.UNSIGNED_SHORT:i instanceof Int16Array?a=t.SHORT:i instanceof Uint32Array?a=t.UNSIGNED_INT:i instanceof Int32Array?a=t.INT:i instanceof Int8Array?a=t.BYTE:i instanceof Uint8Array&&(a=t.UNSIGNED_BYTE),{buffer:o,type:a,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(r,i):n.version<r.version&&(function(e,r,i){var n=r.array,o=r.updateRange;t.bindBuffer(i,e),!1===r.dynamic?t.bufferData(i,n,t.STATIC_DRAW):-1===o.count?t.bufferSubData(i,0,n):0===o.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(i,o.offset*n.BYTES_PER_ELEMENT,n.subarray(o.offset,o.offset+o.count)),o.count=-1)}(n.buffer,r,i),n.version=r.version)}}}function Gn(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||Gn.DefaultOrder}function Hn(){this.mask=1}Cn.prototype=Object.assign(Object.create(t.prototype),{constructor:Cn,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0!==r)if("shading"!==e){var i=this[e];void 0!==i?i&&i.isColor?i.set(r):i&&i.isVector3&&r&&r.isVector3?i.copy(r):this[e]="overdraw"===e?Number(r):r:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===m;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(t){var e=[];for(var r in t){var i=t[r];delete i.metadata,e.push(i)}return e}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearCoat&&(r.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(r.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(t).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(t).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(t).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(t).uuid,r.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==_&&(r.blending=this.blending),!0===this.flatShading&&(r.flatShading=this.flatShading),this.side!==p&&(r.side=this.side),this.vertexColors!==g&&(r.vertexColors=this.vertexColors),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,0!==this.rotation&&(r.rotation=this.rotation),1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.skinning&&(r.skinning=!0),!1===this.visible&&(r.visible=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),e){var n=i(t.textures),o=i(t.images);n.length>0&&(r.textures=n),o.length>0&&(r.images=o)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,r=null;if(null!==e){var i=e.length;r=new Array(i);for(var n=0;n!==i;++n)r[n]=e[n].clone()}return this.clippingPlanes=r,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),In.prototype=Object.create(Cn.prototype),In.prototype.constructor=In,In.prototype.isMeshDepthMaterial=!0,In.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},On.prototype=Object.create(Cn.prototype),On.prototype.constructor=On,On.prototype.isMeshDistanceMaterial=!0,On.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Object.assign(Un.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,r=1/0,i=1/0,n=-1/0,o=-1/0,a=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<r&&(r=l),u<i&&(i=u),h>n&&(n=h),l>o&&(o=l),u>a&&(a=u)}return this.min.set(e,r,i),this.max.set(n,o,a),this},setFromBufferAttribute:function(t){for(var e=1/0,r=1/0,i=1/0,n=-1/0,o=-1/0,a=-1/0,s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<r&&(r=l),u<i&&(i=u),h>n&&(n=h),l>o&&(o=l),u>a&&(a=u)}return this.min.set(e,r,i),this.max.set(n,o,a),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new we;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new we;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new we;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t,e,r,i=new we;function n(n){var o=n.geometry;if(void 0!==o)if(o.isGeometry){var a=o.vertices;for(e=0,r=a.length;e<r;e++)i.copy(a[e]),i.applyMatrix4(n.matrixWorld),t.expandByPoint(i)}else if(o.isBufferGeometry){var s=o.attributes.position;if(void 0!==s)for(e=0,r=s.count;e<r;e++)i.fromBufferAttribute(s,e).applyMatrix4(n.matrixWorld),t.expandByPoint(i)}}return function(e){return t=this,e.updateMatrixWorld(!0),e.traverse(n),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new we).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new we;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,r;return t.normal.x>0?(e=t.normal.x*this.min.x,r=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,r=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=t.constant&&r>=t.constant},clampPoint:function(t,e){return(e||new we).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new we;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new we;return function(e){var r=e||new Nn;return this.getCenter(r.center),r.radius=.5*this.getSize(t).length(),r}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new we,new we,new we,new we,new we,new we,new we,new we];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(Nn.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new Un;return function(e,r){var i=this.center;void 0!==r?i.copy(r):t.setFromPoints(e).getCenter(i);for(var n=0,o=0,a=e.length;o<a;o++)n=Math.max(n,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new we;return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){var e=t||new Un;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(Dn.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new we,e=new we;return function(r,i,n){var o=t.subVectors(n,i).cross(e.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new we).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new we;return function(e,r){var i=r||new we,n=e.delta(t),o=this.normal.dot(n);if(0===o)return 0===this.distanceToPoint(e.start)?i.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/o;return a<0||a>1?void 0:i.copy(n).multiplyScalar(a).add(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),r=this.distanceToPoint(t.end);return e<0&&r>0||r<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new we).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new we,e=new Me;return function(r,i){var n=i||e.getNormalMatrix(r),o=this.coplanarPoint(t).applyMatrix4(r),a=this.normal.applyMatrix3(n).normalize();return this.constant=-o.dot(a),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(Fn.prototype,{set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],c=r[5],h=r[6],l=r[7],u=r[8],p=r[9],d=r[10],f=r[11],m=r[12],v=r[13],g=r[14],y=r[15];return e[0].setComponents(a-i,l-s,f-u,y-m).normalize(),e[1].setComponents(a+i,l+s,f+u,y+m).normalize(),e[2].setComponents(a+n,l+c,f+p,y+v).normalize(),e[3].setComponents(a-n,l-c,f-p,y-v).normalize(),e[4].setComponents(a-o,l-h,f-d,y-g).normalize(),e[5].setComponents(a+o,l+h,f+d,y+g).normalize(),this},intersectsObject:function(){var t=new Nn;return function(e){var r=e.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),t.copy(r.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new Nn;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++){if(e[n].distanceToPoint(r)<i)return!1}return!0},intersectsBox:function(){var t=new we,e=new we;return function(r){for(var i=this.planes,n=0;n<6;n++){var o=i[n];t.x=o.normal.x>0?r.min.x:r.max.x,e.x=o.normal.x>0?r.max.x:r.min.x,t.y=o.normal.y>0?r.min.y:r.max.y,e.y=o.normal.y>0?r.max.y:r.min.y,t.z=o.normal.z>0?r.min.z:r.max.z,e.z=o.normal.z>0?r.max.z:r.min.z;var a=o.distanceToPoint(t),s=o.distanceToPoint(e);if(a<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0}}),Gn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Gn.DefaultOrder="XYZ",Object.defineProperties(Gn.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(Gn.prototype,{isEuler:!0,set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,r){var i=ye.clamp,n=t.elements,o=n[0],a=n[4],s=n[8],c=n[1],h=n[5],l=n[9],u=n[2],p=n[6],d=n[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(p,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,o),this._z=0)):"ZXY"===e?(this._x=Math.asin(i(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(c,o))):"ZYX"===e?(this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===e?(this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===e?(this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(p,h),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new be;return function(e,r,i){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,r,i)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new _e;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new we(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(Hn.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});var Vn=0;function kn(){Object.defineProperty(this,"id",{value:Vn++}),this.uuid=ye.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=kn.DefaultUp.clone();var t=new we,e=new Gn,r=new _e,i=new we(1,1,1);e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i},modelViewMatrix:{value:new be},normalMatrix:{value:new Me}}),this.matrix=new be,this.matrixWorld=new be,this.matrixAutoUpdate=kn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Hn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function jn(){kn.call(this),this.type="Camera",this.matrixWorldInverse=new be,this.projectionMatrix=new be}function Wn(t,e,r,i,n,o){jn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function Xn(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i&&i.isVector3?i:new we,this.vertexNormals=Array.isArray(i)?i:[],this.color=n&&n.isColor?n:new xr,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0!==o?o:0}kn.DefaultUp=new we(0,1,0),kn.DefaultMatrixAutoUpdate=!0,kn.prototype=Object.assign(Object.create(t.prototype),{constructor:kn,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new _e;return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new _e;return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new we(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new we(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new we(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new we;return function(e,r){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(r)),this}}(),translateX:function(){var t=new we(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new we(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new we(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new be;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new be,e=new we;return function(r,i,n){r.isVector3?e.copy(r):e.set(r,i,n),this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var r=this.children.indexOf(t);return-1!==r&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(r,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(t,e);if(void 0!==n)return n}},getWorldPosition:function(t){var e=t||new we;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new we,e=new we;return function(r){var i=r||new _e;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,i,e),i}}(),getWorldRotation:function(){var t=new _e;return function(e){var r=e||new Gn;return this.getWorldQuaternion(t),r.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new we,e=new _e;return function(r){var i=r||new we;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,i),i}}(),getWorldDirection:function(){var t=new _e;return function(e){var r=e||new we;return this.getWorldQuaternion(t),r.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].updateMatrixWorld(t)},toJSON:function(t){var e=void 0===t||"string"==typeof t,r={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var i={};function n(e,r){return void 0===e[r.uuid]&&(e[r.uuid]=r.toJSON(t)),r.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.matrix=this.matrix.toArray(),void 0!==this.geometry){i.geometry=n(t.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var a=o.shapes;if(Array.isArray(a))for(var s=0,c=a.length;s<c;s++){var h=a[s];n(t.shapes,h)}else n(t.shapes,a)}}if(void 0!==this.material)if(Array.isArray(this.material)){var l=[];for(s=0,c=this.material.length;s<c;s++)l.push(n(t.materials,this.material[s]));i.material=l}else i.material=n(t.materials,this.material);if(this.children.length>0){i.children=[];for(s=0;s<this.children.length;s++)i.children.push(this.children[s].toJSON(t).object)}if(e){var u=m(t.geometries),p=m(t.materials),d=m(t.textures),f=m(t.images);a=m(t.shapes);u.length>0&&(r.geometries=u),p.length>0&&(r.materials=p),d.length>0&&(r.textures=d),f.length>0&&(r.images=f),a.length>0&&(r.shapes=a)}return r.object=i,r;function m(t){var e=[];for(var r in t){var i=t[r];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var r=0;r<t.children.length;r++){var i=t.children[r];this.add(i.clone())}return this}}),jn.prototype=Object.assign(Object.create(kn.prototype),{constructor:jn,isCamera:!0,copy:function(t,e){return kn.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new _e;return function(e){var r=e||new we;return this.getWorldQuaternion(t),r.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){kn.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),Wn.prototype=Object.assign(Object.create(jn.prototype),{constructor:Wn,isOrthographicCamera:!0,copy:function(t,e){return jn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,r,i,n,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2,n=r-t,o=r+t,a=i+e,s=i-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;o=(n+=l*(this.view.offsetX/c))+l*(this.view.width/c),s=(a-=u*(this.view.offsetY/h))-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(n,o,a,s,this.near,this.far)},toJSON:function(t){var e=kn.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Object.assign(Xn.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,r=t.vertexNormals.length;e<r;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,r=t.vertexColors.length;e<r;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var qn=0;function Yn(){Object.defineProperty(this,"id",{value:qn+=2}),this.uuid=ye.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function Zn(t,e,r){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=ye.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function Jn(t,e,r){Zn.call(this,new Int8Array(t),e,r)}function Qn(t,e,r){Zn.call(this,new Uint8Array(t),e,r)}function Kn(t,e,r){Zn.call(this,new Uint8ClampedArray(t),e,r)}function $n(t,e,r){Zn.call(this,new Int16Array(t),e,r)}function to(t,e,r){Zn.call(this,new Uint16Array(t),e,r)}function eo(t,e,r){Zn.call(this,new Int32Array(t),e,r)}function ro(t,e,r){Zn.call(this,new Uint32Array(t),e,r)}function io(t,e,r){Zn.call(this,new Float32Array(t),e,r)}function no(t,e,r){Zn.call(this,new Float64Array(t),e,r)}function oo(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function ao(t){if(0===t.length)return-1/0;for(var e=t[0],r=1,i=t.length;r<i;++r)t[r]>e&&(e=t[r]);return e}Yn.prototype=Object.assign(Object.create(t.prototype),{constructor:Yn,isGeometry:!0,applyMatrix:function(t){for(var e=(new Me).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++){this.vertices[r].applyMatrix4(t)}for(r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];n.normal.applyMatrix3(e).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new be;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new be;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new be;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new be;return function(e,r,i){return t.makeTranslation(e,r,i),this.applyMatrix(t),this}}(),scale:function(){var t=new be;return function(e,r,i){return t.makeScale(e,r,i),this.applyMatrix(t),this}}(),lookAt:function(){var t=new kn;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){var e=this,r=null!==t.index?t.index.array:void 0,i=t.attributes,n=i.position.array,o=void 0!==i.normal?i.normal.array:void 0,a=void 0!==i.color?i.color.array:void 0,s=void 0!==i.uv?i.uv.array:void 0,c=void 0!==i.uv2?i.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var h=[],l=[],u=[],p=0,d=0;p<n.length;p+=3,d+=2)e.vertices.push(new we(n[p],n[p+1],n[p+2])),void 0!==o&&h.push(new we(o[p],o[p+1],o[p+2])),void 0!==a&&e.colors.push(new xr(a[p],a[p+1],a[p+2])),void 0!==s&&l.push(new xe(s[d],s[d+1])),void 0!==c&&u.push(new xe(c[d],c[d+1]));function f(t,r,i,n){var p=new Xn(t,r,i,void 0!==o?[h[t].clone(),h[r].clone(),h[i].clone()]:[],void 0!==a?[e.colors[t].clone(),e.colors[r].clone(),e.colors[i].clone()]:[],n);e.faces.push(p),void 0!==s&&e.faceVertexUvs[0].push([l[t].clone(),l[r].clone(),l[i].clone()]),void 0!==c&&e.faceVertexUvs[1].push([u[t].clone(),u[r].clone(),u[i].clone()])}var m=t.groups;if(m.length>0)for(p=0;p<m.length;p++)for(var v=m[p],g=v.start,y=(d=g,g+v.count);d<y;d+=3)void 0!==r?f(r[d],r[d+1],r[d+2],v.materialIndex):f(d,d+1,d+2,v.materialIndex);else if(void 0!==r)for(p=0;p<r.length;p+=3)f(r[p],r[p+1],r[p+2]);else for(p=0;p<n.length/3;p+=3)f(p,p+1,p+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,r=0===e?1:1/e,i=new be;return i.set(r,0,0,-r*t.x,0,r,0,-r*t.y,0,0,r,-r*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new we,e=new we,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i,n,o,a;for(void 0===t&&(t=!0),a=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)a[e]=new we;if(t){var s,c,h,l=new we,u=new we;for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],s=this.vertices[o.a],c=this.vertices[o.b],h=this.vertices[o.c],l.subVectors(h,c),u.subVectors(s,c),l.cross(u),a[o.a].add(l),a[o.b].add(l),a[o.c].add(l)}else for(this.computeFaceNormals(),i=0,n=this.faces.length;i<n;i++)a[(o=this.faces[i]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,r=this.vertices.length;e<r;e++)a[e].normalize();for(i=0,n=this.faces.length;i<n;i++){var p=(o=this.faces[i]).vertexNormals;3===p.length?(p[0].copy(a[o.a]),p[1].copy(a[o.b]),p[2].copy(a[o.c])):(p[0]=a[o.a].clone(),p[1]=a[o.b].clone(),p[2]=a[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,r;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var i=(r=this.faces[t]).vertexNormals;3===i.length?(i[0].copy(r.normal),i[1].copy(r.normal),i[2].copy(r.normal)):(i[0]=r.normal.clone(),i[1]=r.normal.clone(),i[2]=r.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for((n=this.faces[r]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new Yn;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)c=new we,h={a:new we,b:new we,c:new we},a.push(c),s.push(h)}var c,h,l=this.morphNormals[t];for(o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)n=this.faces[r],c=l.faceNormals[r],h=l.vertexNormals[r],c.copy(n.normal),h.a.copy(n.vertexNormals[0]),h.b.copy(n.vertexNormals[1]),h.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)(n=this.faces[r]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)r>0&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Un),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Nn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t&&t.isGeometry){var i,n=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,c=t.faces,h=this.faceVertexUvs[0],l=t.faceVertexUvs[0],u=this.colors,p=t.colors;void 0===r&&(r=0),void 0!==e&&(i=(new Me).getNormalMatrix(e));for(var d=0,f=a.length;d<f;d++){var m=a[d].clone();void 0!==e&&m.applyMatrix4(e),o.push(m)}for(d=0,f=p.length;d<f;d++)u.push(p[d].clone());for(d=0,f=c.length;d<f;d++){var v,g,y,x=c[d],b=x.vertexNormals,_=x.vertexColors;(v=new Xn(x.a+n,x.b+n,x.c+n)).normal.copy(x.normal),void 0!==i&&v.normal.applyMatrix3(i).normalize();for(var w=0,M=b.length;w<M;w++)g=b[w].clone(),void 0!==i&&g.applyMatrix3(i).normalize(),v.vertexNormals.push(g);v.color.copy(x.color);for(w=0,M=_.length;w<M;w++)y=_[w],v.vertexColors.push(y.clone());v.materialIndex=x.materialIndex+r,s.push(v)}for(d=0,f=l.length;d<f;d++){var E=l[d],T=[];if(void 0!==E){for(w=0,M=E.length;w<M;w++)T.push(E[w].clone());h.push(T)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,r,i,n,o,a,s,c={},h=[],l=[],u=Math.pow(10,4);for(r=0,i=this.vertices.length;r<i;r++)t=this.vertices[r],void 0===c[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(c[e]=r,h.push(this.vertices[r]),l[r]=h.length-1):l[r]=l[c[e]];var p=[];for(r=0,i=this.faces.length;r<i;r++){(n=this.faces[r]).a=l[n.a],n.b=l[n.b],n.c=l[n.c],o=[n.a,n.b,n.c];for(var d=0;d<3;d++)if(o[d]===o[(d+1)%3]){p.push(r);break}}for(r=p.length-1;r>=0;r--){var f=p[r];for(this.faces.splice(f,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(f,1)}var m=this.vertices.length-h.length;return this.vertices=h,m},setFromPoints:function(t){this.vertices=[];for(var e=0,r=t.length;e<r;e++){var i=t[e];this.vertices.push(new we(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,r=0;r<e;r++)t[r]._id=r;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var i,n,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];o&&o.length===e&&(i=[]),a&&a.length===e&&(n=[]);for(r=0;r<e;r++){var s=t[r]._id;i&&i.push(o[s]),n&&n.push(a[s])}i&&(this.faceVertexUvs[0]=i),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}for(var i=[],n=0;n<this.vertices.length;n++){var o=this.vertices[n];i.push(o.x,o.y,o.z)}var a=[],s=[],c={},h=[],l={},u=[],p={};for(n=0;n<this.faces.length;n++){var d=this.faces[n],f=void 0!==this.faceVertexUvs[0][n],m=d.normal.length()>0,v=d.vertexNormals.length>0,g=1!==d.color.r||1!==d.color.g||1!==d.color.b,y=d.vertexColors.length>0,x=0;if(x=M(x,0,0),x=M(x,1,!0),x=M(x,2,!1),x=M(x,3,f),x=M(x,4,m),x=M(x,5,v),x=M(x,6,g),x=M(x,7,y),a.push(x),a.push(d.a,d.b,d.c),a.push(d.materialIndex),f){var b=this.faceVertexUvs[0][n];a.push(S(b[0]),S(b[1]),S(b[2]))}if(m&&a.push(E(d.normal)),v){var _=d.vertexNormals;a.push(E(_[0]),E(_[1]),E(_[2]))}if(g&&a.push(T(d.color)),y){var w=d.vertexColors;a.push(T(w[0]),T(w[1]),T(w[2]))}}function M(t,e,r){return r?t|1<<e:t&~(1<<e)}function E(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==c[e]?c[e]:(c[e]=s.length/3,s.push(t.x,t.y,t.z),c[e])}function T(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==l[e]?l[e]:(l[e]=h.length,h.push(t.getHex()),l[e])}function S(t){var e=t.x.toString()+t.y.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/2,u.push(t.x,t.y),p[e])}return t.data={},t.data.vertices=i,t.data.normals=s,h.length>0&&(t.data.colors=h),u.length>0&&(t.data.uvs=[u]),t.data.faces=a,t},clone:function(){return(new Yn).copy(this)},copy:function(t){var e,r,i,n,o,a;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,r=s.length;e<r;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,r=c.length;e<r;e++)this.colors.push(c[e].clone());var h=t.faces;for(e=0,r=h.length;e<r;e++)this.faces.push(h[e].clone());for(e=0,r=t.faceVertexUvs.length;e<r;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),i=0,n=l.length;i<n;i++){var u=l[i],p=[];for(o=0,a=u.length;o<a;o++){var d=u[o];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,r=f.length;e<r;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],i=0,n=f[e].vertices.length;i<n;i++)m.vertices.push(f[e].vertices[i].clone());if(void 0!==f[e].normals)for(m.normals=[],i=0,n=f[e].normals.length;i<n;i++)m.normals.push(f[e].normals[i].clone());this.morphTargets.push(m)}var v=t.morphNormals;for(e=0,r=v.length;e<r;e++){var g={};if(void 0!==v[e].vertexNormals)for(g.vertexNormals=[],i=0,n=v[e].vertexNormals.length;i<n;i++){var y=v[e].vertexNormals[i],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),g.vertexNormals.push(x)}if(void 0!==v[e].faceNormals)for(g.faceNormals=[],i=0,n=v[e].faceNormals.length;i<n;i++)g.faceNormals.push(v[e].faceNormals[i].clone());this.morphNormals.push(g)}var b=t.skinWeights;for(e=0,r=b.length;e<r;e++)this.skinWeights.push(b[e].clone());var _=t.skinIndices;for(e=0,r=_.length;e<r;e++)this.skinIndices.push(_[e].clone());var w=t.lineDistances;for(e=0,r=w.length;e<r;e++)this.lineDistances.push(w[e]);var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());var E=t.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Zn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Zn.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.itemSize,r*=e.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[t+i]=e.array[r+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new xr),e[r++]=o.r,e[r++]=o.g,e[r++]=o.b}return this},copyIndicesArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];e[r++]=o.a,e[r++]=o.b,e[r++]=o.c}return this},copyVector2sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new xe),e[r++]=o.x,e[r++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new we),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Se),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z,e[r++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),Jn.prototype=Object.create(Zn.prototype),Jn.prototype.constructor=Jn,Qn.prototype=Object.create(Zn.prototype),Qn.prototype.constructor=Qn,Kn.prototype=Object.create(Zn.prototype),Kn.prototype.constructor=Kn,$n.prototype=Object.create(Zn.prototype),$n.prototype.constructor=$n,to.prototype=Object.create(Zn.prototype),to.prototype.constructor=to,eo.prototype=Object.create(Zn.prototype),eo.prototype.constructor=eo,ro.prototype=Object.create(Zn.prototype),ro.prototype.constructor=ro,io.prototype=Object.create(Zn.prototype),io.prototype.constructor=io,no.prototype=Object.create(Zn.prototype),no.prototype.constructor=no,Object.assign(oo.prototype,{computeGroups:function(t){for(var e,r=[],i=void 0,n=t.faces,o=0;o<n.length;o++){var a=n[o];a.materialIndex!==i&&(i=a.materialIndex,void 0!==e&&(e.count=3*o-e.start,r.push(e)),e={start:3*o,materialIndex:i})}void 0!==e&&(e.count=3*o-e.start,r.push(e)),this.groups=r},fromGeometry:function(t){var e,r=t.faces,i=t.vertices,n=t.faceVertexUvs,o=n[0]&&n[0].length>0,a=n[1]&&n[1].length>0,s=t.morphTargets,c=s.length;if(c>0){e=[];for(var h=0;h<c;h++)e[h]=[];this.morphTargets.position=e}var l,u=t.morphNormals,p=u.length;if(p>0){l=[];for(h=0;h<p;h++)l[h]=[];this.morphTargets.normal=l}var d=t.skinIndices,f=t.skinWeights,m=d.length===i.length,v=f.length===i.length;for(h=0;h<r.length;h++){var g=r[h];this.vertices.push(i[g.a],i[g.b],i[g.c]);var y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=g.normal;this.normals.push(x,x,x)}var b,_=g.vertexColors;if(3===_.length)this.colors.push(_[0],_[1],_[2]);else{var w=g.color;this.colors.push(w,w,w)}if(!0===o)void 0!==(b=n[0][h])?this.uvs.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",h),this.uvs.push(new xe,new xe,new xe));if(!0===a)void 0!==(b=n[1][h])?this.uvs2.push(b[0],b[1],b[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",h),this.uvs2.push(new xe,new xe,new xe));for(var M=0;M<c;M++){var E=s[M].vertices;e[M].push(E[g.a],E[g.b],E[g.c])}for(M=0;M<p;M++){var T=u[M].vertexNormals[h];l[M].push(T.a,T.b,T.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),v&&this.skinWeights.push(f[g.a],f[g.b],f[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var so=1;function co(){Object.defineProperty(this,"id",{value:so+=2}),this.uuid=ye.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function ho(t,e,r,i,n,o){Yn.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.fromBufferGeometry(new lo(t,e,r,i,n,o)),this.mergeVertices()}function lo(t,e,r,i,n,o){co.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o};var a=this;t=t||1,e=e||1,r=r||1,i=Math.floor(i)||1,n=Math.floor(n)||1,o=Math.floor(o)||1;var s=[],c=[],h=[],l=[],u=0,p=0;function d(t,e,r,i,n,o,d,f,m,v,g){var y,x,b=o/m,_=d/v,w=o/2,M=d/2,E=f/2,T=m+1,S=v+1,A=0,R=0,L=new we;for(x=0;x<S;x++){var P=x*_-M;for(y=0;y<T;y++){var C=y*b-w;L[t]=C*i,L[e]=P*n,L[r]=E,c.push(L.x,L.y,L.z),L[t]=0,L[e]=0,L[r]=f>0?1:-1,h.push(L.x,L.y,L.z),l.push(y/m),l.push(1-x/v),A+=1}}for(x=0;x<v;x++)for(y=0;y<m;y++){var I=u+y+T*x,O=u+y+T*(x+1),U=u+(y+1)+T*(x+1),N=u+(y+1)+T*x;s.push(I,O,N),s.push(O,U,N),R+=6}a.addGroup(p,R,g),p+=R,u+=A}d("z","y","x",-1,-1,r,e,t,o,n,0),d("z","y","x",1,-1,r,e,-t,o,n,1),d("x","z","y",1,1,t,r,e,i,o,2),d("x","z","y",1,-1,t,r,-e,i,o,3),d("x","y","z",1,-1,t,e,r,i,n,4),d("x","y","z",-1,-1,t,e,-r,i,n,5),this.setIndex(s),this.addAttribute("position",new io(c,3)),this.addAttribute("normal",new io(h,3)),this.addAttribute("uv",new io(l,2))}function uo(t,e,r,i){Yn.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i},this.fromBufferGeometry(new po(t,e,r,i)),this.mergeVertices()}function po(t,e,r,i){co.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};var n,o,a=(t=t||1)/2,s=(e=e||1)/2,c=Math.floor(r)||1,h=Math.floor(i)||1,l=c+1,u=h+1,p=t/c,d=e/h,f=[],m=[],v=[],g=[];for(o=0;o<u;o++){var y=o*d-s;for(n=0;n<l;n++){var x=n*p-a;m.push(x,-y,0),v.push(0,0,1),g.push(n/c),g.push(1-o/h)}}for(o=0;o<h;o++)for(n=0;n<c;n++){var b=n+l*o,_=n+l*(o+1),w=n+1+l*(o+1),M=n+1+l*o;f.push(b,_,M),f.push(_,w,M)}this.setIndex(f),this.addAttribute("position",new io(m,3)),this.addAttribute("normal",new io(v,3)),this.addAttribute("uv",new io(g,2))}function fo(t){Cn.call(this),this.type="MeshBasicMaterial",this.color=new xr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function mo(t){Cn.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function vo(t,e){this.origin=void 0!==t?t:new we,this.direction=void 0!==e?e:new we}function go(t,e){this.start=void 0!==t?t:new we,this.end=void 0!==e?e:new we}function yo(t,e,r){this.a=void 0!==t?t:new we,this.b=void 0!==e?e:new we,this.c=void 0!==r?r:new we}function xo(t,e){kn.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new co,this.material=void 0!==e?e:new fo({color:16777215*Math.random()}),this.drawMode=oe,this.updateMorphTargets()}function bo(t,e,r,i){var n,o,a,s=new xr(0),c=0;function h(t,r){e.buffers.color.setClear(t.r,t.g,t.b,r,i)}return{getClearColor:function(){return s},setClearColor:function(t,e){s.set(t),h(s,c=void 0!==e?e:1)},getClearAlpha:function(){return c},setClearAlpha:function(t){h(s,c=t)},render:function(e,i,l,u){var p=i.background;null===p?h(s,c):p&&p.isColor&&(h(p,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&p.isCubeTexture?(void 0===a&&((a=new xo(new lo(1,1,1),new mo({uniforms:Tn.cube.uniforms,vertexShader:Tn.cube.vertexShader,fragmentShader:Tn.cube.fragmentShader,side:d,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),a.geometry.removeAttribute("uv"),a.onBeforeRender=function(t,e,r){this.matrixWorld.copyPosition(r.matrixWorld)},r.update(a.geometry)),a.material.uniforms.tCube.value=p,e.push(a,a.geometry,a.material,0,null)):p&&p.isTexture&&(void 0===n&&(n=new Wn(-1,1,1,-1,0,1),o=new xo(new po(2,2),new fo({depthTest:!1,depthWrite:!1,fog:!1})),r.update(o.geometry)),o.material.map=p,t.renderBufferDirect(n,null,o.geometry,o.material,o,null))}}}function _o(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function wo(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Mo(){var t=[],e=0,r=[],i=[];return{opaque:r,transparent:i,init:function(){e=0,r.length=0,i.length=0},push:function(n,o,a,s,c){var h=t[e];void 0===h?(h={id:n.id,object:n,geometry:o,material:a,program:a.program,renderOrder:n.renderOrder,z:s,group:c},t[e]=h):(h.id=n.id,h.object=n,h.geometry=o,h.material=a,h.program=a.program,h.renderOrder=n.renderOrder,h.z=s,h.group=c),(!0===a.transparent?i:r).push(h),e++},sort:function(){r.length>1&&r.sort(_o),i.length>1&&i.sort(wo)}}}function Eo(){var t={};return{get:function(e,r){var i=e.id+","+r.id,n=t[i];return void 0===n&&(n=new Mo,t[i]=n),n},dispose:function(){t={}}}}function To(t,e){return Math.abs(e[1])-Math.abs(t[1])}function So(t){var e={},r=new Float32Array(8);return{update:function(i,n,o,a){var s=i.morphTargetInfluences,c=s.length,h=e[n.id];if(void 0===h){h=[];for(var l=0;l<c;l++)h[l]=[l,0];e[n.id]=h}var u=o.morphTargets&&n.morphAttributes.position,p=o.morphNormals&&n.morphAttributes.normal;for(l=0;l<c;l++)0!==(d=h[l])[1]&&(u&&n.removeAttribute("morphTarget"+l),p&&n.removeAttribute("morphNormal"+l));for(l=0;l<c;l++)(d=h[l])[0]=l,d[1]=s[l];for(h.sort(To),l=0;l<8;l++){var d;if(d=h[l]){var f=d[0],m=d[1];if(m){u&&n.addAttribute("morphTarget"+l,u[f]),p&&n.addAttribute("morphNormal"+l,p[f]),r[l]=m;continue}}r[l]=0}a.getUniforms().setValue(t,"morphTargetInfluences",r)}}}function Ao(t,e,r){var i,n,o;this.setMode=function(t){i=t},this.setIndex=function(t){n=t.type,o=t.bytesPerElement},this.render=function(e,a){t.drawElements(i,a,n,e*o),r.calls++,r.vertices+=a,i===t.TRIANGLES?r.faces+=a/3:i===t.POINTS&&(r.points+=a)},this.renderInstances=function(a,s,c){var h=e.get("ANGLE_instanced_arrays");null!==h?(h.drawElementsInstancedANGLE(i,c,n,s*o,a.maxInstancedCount),r.calls++,r.vertices+=c*a.maxInstancedCount,i===t.TRIANGLES?r.faces+=a.maxInstancedCount*c/3:i===t.POINTS&&(r.points+=a.maxInstancedCount*c)):console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}function Ro(t,e,r){var i;this.setMode=function(t){i=t},this.render=function(e,n){t.drawArrays(i,e,n),r.calls++,r.vertices+=n,i===t.TRIANGLES?r.faces+=n/3:i===t.POINTS&&(r.points+=n)},this.renderInstances=function(n,o,a){var s=e.get("ANGLE_instanced_arrays");if(null!==s){var c=n.attributes.position;c.isInterleavedBufferAttribute?(a=c.data.count,s.drawArraysInstancedANGLE(i,0,a,n.maxInstancedCount)):s.drawArraysInstancedANGLE(i,o,a,n.maxInstancedCount),r.calls++,r.vertices+=a*n.maxInstancedCount,i===t.TRIANGLES?r.faces+=n.maxInstancedCount*a/3:i===t.POINTS&&(r.points+=n.maxInstancedCount*a)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}function Lo(t,e,r){var i={},n={};function o(t){var a=t.target,s=i[a.id];for(var c in null!==s.index&&e.remove(s.index),s.attributes)e.remove(s.attributes[c]);a.removeEventListener("dispose",o),delete i[a.id];var h=n[a.id];h&&(e.remove(h),delete n[a.id]),(h=n[s.id])&&(e.remove(h),delete n[s.id]),r.geometries--}return{get:function(t,e){var n=i[e.id];return n||(e.addEventListener("dispose",o),e.isBufferGeometry?n=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new co).setFromObject(t)),n=e._bufferGeometry),i[e.id]=n,r.geometries++,n)},update:function(r){var i=r.index,n=r.attributes;for(var o in null!==i&&e.update(i,t.ELEMENT_ARRAY_BUFFER),n)e.update(n[o],t.ARRAY_BUFFER);var a=r.morphAttributes;for(var o in a)for(var s=a[o],c=0,h=s.length;c<h;c++)e.update(s[c],t.ARRAY_BUFFER)},getWireframeAttribute:function(r){var i=n[r.id];if(i)return i;var o,a=[],s=r.index,c=r.attributes;if(null!==s)for(var h=0,l=(o=s.array).length;h<l;h+=3){var u=o[h+0],p=o[h+1],d=o[h+2];a.push(u,p,p,d,d,u)}else for(h=0,l=(o=c.position.array).length/3-1;h<l;h+=3)u=h+0,p=h+1,d=h+2,a.push(u,p,p,d,d,u);return i=new(ao(a)>65535?ro:to)(a,1),e.update(i,t.ELEMENT_ARRAY_BUFFER),n[r.id]=i,i}}}function Po(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var r;switch(e.type){case"DirectionalLight":r={direction:new we,color:new xr,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"SpotLight":r={position:new we,direction:new we,color:new xr,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new xe};break;case"PointLight":r={position:new we,color:new xr,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new xe,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":r={direction:new we,skyColor:new xr,groundColor:new xr};break;case"RectAreaLight":r={color:new xr,position:new we,halfWidth:new we,halfHeight:new we}}return t[e.id]=r,r}}}function Co(){var t=new Po,e={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},r=new we,i=new be,n=new be;return{setup:function(o,a,s){for(var c=0,h=0,l=0,u=0,p=0,d=0,f=0,m=0,v=s.matrixWorldInverse,g=0,y=o.length;g<y;g++){var x=o[g],b=x.color,_=x.intensity,w=x.distance,M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,h+=b.g*_,l+=b.b*_;else if(x.isDirectionalLight){if((T=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.shadow=x.castShadow,x.castShadow){var E=x.shadow;T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize}e.directionalShadowMap[u]=M,e.directionalShadowMatrix[u]=x.shadow.matrix,e.directional[u]=T,u++}else if(x.isSpotLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),T.color.copy(b).multiplyScalar(_),T.distance=w,T.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),e.spotShadowMap[d]=M,e.spotShadowMatrix[d]=x.shadow.matrix,e.spot[d]=T,d++;else if(x.isRectAreaLight)(T=t.get(x)).color.copy(b).multiplyScalar(_/(x.width*x.height)),T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),n.identity(),i.copy(x.matrixWorld),i.premultiply(v),n.extractRotation(i),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(n),T.halfHeight.applyMatrix4(n),e.rectArea[f]=T,f++;else if(x.isPointLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize,T.shadowCameraNear=E.camera.near,T.shadowCameraFar=E.camera.far),e.pointShadowMap[p]=M,e.pointShadowMatrix[p]=x.shadow.matrix,e.point[p]=T,p++;else if(x.isHemisphereLight){var T;(T=t.get(x)).direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(v),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(_),T.groundColor.copy(x.groundColor).multiplyScalar(_),e.hemi[m]=T,m++}}e.ambient[0]=c,e.ambient[1]=h,e.ambient[2]=l,e.directional.length=u,e.spot.length=d,e.rectArea.length=f,e.point.length=p,e.hemi.length=m,e.hash=u+","+p+","+d+","+f+","+m+","+a.length},state:e}}function Io(t,e){var r={};return{update:function(i){var n=e.frame,o=i.geometry,a=t.get(i,o);return r[a.id]!==n&&(o.isGeometry&&a.updateFromObject(i),t.update(a),r[a.id]=n),a},clear:function(){r={}}}}function Oo(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")}function Uo(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),!1===t.getShaderParameter(i,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),Oo(r)),i}co.prototype=Object.assign(Object.create(t.prototype),{constructor:co,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(ao(t)>65535?ro:to)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new Zn(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new Me).getNormalMatrix(t).applyToBufferAttribute(r),r.needsUpdate=!0);return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new be;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new be;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new be;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new be;return function(e,r,i){return t.makeTranslation(e,r,i),this.applyMatrix(t),this}}(),scale:function(){var t=new be;return function(e,r,i){return t.makeScale(e,r,i),this.applyMatrix(t),this}}(),lookAt:function(){var t=new kn;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var r=new io(3*e.vertices.length,3),i=new io(3*e.colors.length,3);if(this.addAttribute("position",r.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var n=new io(e.lineDistances.length,1);this.addAttribute("lineDistance",n.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r];e.push(n.x,n.y,n.z||0)}return this.addAttribute("position",new io(e,3)),this},updateFromObject:function(t){var e,r=t.geometry;if(t.isMesh){var i=r.__directGeometry;if(!0===r.elementsNeedUpdate&&(i=void 0,r.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(r);i.verticesNeedUpdate=r.verticesNeedUpdate,i.normalsNeedUpdate=r.normalsNeedUpdate,i.colorsNeedUpdate=r.colorsNeedUpdate,i.uvsNeedUpdate=r.uvsNeedUpdate,i.groupsNeedUpdate=r.groupsNeedUpdate,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=i}return!0===r.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(r.vertices),e.needsUpdate=!0),r.verticesNeedUpdate=!1),!0===r.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(r.normals),e.needsUpdate=!0),r.normalsNeedUpdate=!1),!0===r.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(r.colors),e.needsUpdate=!0),r.colorsNeedUpdate=!1),r.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(r.uvs),e.needsUpdate=!0),r.uvsNeedUpdate=!1),r.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(r.lineDistances),e.needsUpdate=!0),r.lineDistancesNeedUpdate=!1),r.groupsNeedUpdate&&(r.computeGroups(t.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new oo).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new Zn(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var r=new Float32Array(3*t.normals.length);this.addAttribute("normal",new Zn(r,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(3*t.colors.length);this.addAttribute("color",new Zn(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var n=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new Zn(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var o=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new Zn(o,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var a=new(ao(t.indices)>65535?Uint32Array:Uint16Array)(3*t.indices.length);this.setIndex(new Zn(a,1).copyIndicesArray(t.indices))}for(var s in this.groups=t.groups,t.morphTargets){for(var c=[],h=t.morphTargets[s],l=0,u=h.length;l<u;l++){var p=h[l],d=new io(3*p.length,3);c.push(d.copyVector3sArray(p))}this.morphAttributes[s]=c}if(t.skinIndices.length>0){var f=new io(4*t.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new io(4*t.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Un);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new Un,e=new we;return function(){null===this.boundingSphere&&(this.boundingSphere=new Nn);var r=this.attributes.position;if(r){var i=this.boundingSphere.center;t.setFromBufferAttribute(r),t.getCenter(i);for(var n=0,o=0,a=r.count;o<a;o++)e.x=r.getX(o),e.y=r.getY(o),e.z=r.getZ(o),n=Math.max(n,i.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,r=this.groups;if(e.position){var i=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new Zn(new Float32Array(i.length),3));else for(var n=e.normal.array,o=0,a=n.length;o<a;o++)n[o]=0;var s,c,h,l=e.normal.array,u=new we,p=new we,d=new we,f=new we,m=new we;if(t){var v=t.array;0===r.length&&this.addGroup(0,v.length);for(var g=0,y=r.length;g<y;++g){var x=r[g],b=x.start;for(o=b,a=b+x.count;o<a;o+=3)s=3*v[o+0],c=3*v[o+1],h=3*v[o+2],u.fromArray(i,s),p.fromArray(i,c),d.fromArray(i,h),f.subVectors(d,p),m.subVectors(u,p),f.cross(m),l[s]+=f.x,l[s+1]+=f.y,l[s+2]+=f.z,l[c]+=f.x,l[c+1]+=f.y,l[c+2]+=f.z,l[h]+=f.x,l[h+1]+=f.y,l[h+2]+=f.z}}else for(o=0,a=i.length;o<a;o+=9)u.fromArray(i,o),p.fromArray(i,o+3),d.fromArray(i,o+6),f.subVectors(d,p),m.subVectors(u,p),f.cross(m),l[o]=f.x,l[o+1]=f.y,l[o+2]=f.z,l[o+3]=f.x,l[o+4]=f.y,l[o+5]=f.z,l[o+6]=f.x,l[o+7]=f.y,l[o+8]=f.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var r=this.attributes;for(var i in r)if(void 0!==t.attributes[i])for(var n=r[i].array,o=t.attributes[i],a=o.array,s=0,c=o.itemSize*e;s<a.length;s++,c++)n[c]=a[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new we;return function(){for(var e=this.attributes.normal,r=0,i=e.count;r<i;r++)t.x=e.getX(r),t.y=e.getY(r),t.z=e.getZ(r),t.normalize(),e.setXYZ(r,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new co,e=this.index.array,r=this.attributes;for(var i in r){for(var n=r[i],o=n.array,a=n.itemSize,s=new o.constructor(e.length*a),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*a;for(var p=0;p<a;p++)s[h++]=o[c++]}t.addAttribute(i,new Zn(s,a))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}t.data={attributes:{}};var i=this.index;if(null!==i){var n=Array.prototype.slice.call(i.array);t.data.index={type:i.array.constructor.name,array:n}}var o=this.attributes;for(var r in o){var a=o[r];n=Array.prototype.slice.call(a.array);t.data.attributes[r]={itemSize:a.itemSize,type:a.array.constructor.name,array:n,normalized:a.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){return(new co).copy(this)},copy:function(t){var e,r,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var n=t.index;null!==n&&this.setIndex(n.clone());var o=t.attributes;for(e in o){var a=o[e];this.addAttribute(e,a.clone())}var s=t.morphAttributes;for(e in s){var c=[],h=s[e];for(r=0,i=h.length;r<i;r++)c.push(h[r].clone());this.morphAttributes[e]=c}var l=t.groups;for(r=0,i=l.length;r<i;r++){var u=l[r];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),ho.prototype=Object.create(Yn.prototype),ho.prototype.constructor=ho,lo.prototype=Object.create(co.prototype),lo.prototype.constructor=lo,uo.prototype=Object.create(Yn.prototype),uo.prototype.constructor=uo,po.prototype=Object.create(co.prototype),po.prototype.constructor=po,fo.prototype=Object.create(Cn.prototype),fo.prototype.constructor=fo,fo.prototype.isMeshBasicMaterial=!0,fo.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},mo.prototype=Object.create(Cn.prototype),mo.prototype.constructor=mo,mo.prototype.isShaderMaterial=!0,mo.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=_r.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},mo.prototype.toJSON=function(t){var e=Cn.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},Object.assign(vo.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new we).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new we;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var r=e||new we;r.subVectors(t,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new we;return function(e){var r=t.subVectors(e,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(r).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new we,e=new we,r=new we;return function(i,n,o,a){t.copy(i).add(n).multiplyScalar(.5),e.copy(n).sub(i).normalize(),r.copy(this.origin).sub(t);var s,c,h,l,u=.5*i.distanceTo(n),p=-this.direction.dot(e),d=r.dot(this.direction),f=-r.dot(e),m=r.lengthSq(),v=Math.abs(1-p*p);if(v>0)if(c=p*d-f,l=u*v,(s=p*f-d)>=0)if(c>=-l)if(c<=l){var g=1/v;h=(s*=g)*(s+p*(c*=g)+2*d)+c*(p*s+c+2*f)+m}else c=u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c=-u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;else c<=-l?h=-(s=Math.max(0,-(-p*u+d)))*s+(c=s>0?-u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m:c<=l?(s=0,h=(c=Math.min(Math.max(-u,-f),u))*(c+2*f)+m):h=-(s=Math.max(0,-(p*u+d)))*s+(c=s>0?u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m;else c=p>0?-u:u,h=-(s=Math.max(0,-(p*c+d)))*s+c*(c+2*f)+m;return o&&o.copy(this.direction).multiplyScalar(s).add(this.origin),a&&a.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new we;return function(e,r){t.subVectors(e.center,this.origin);var i=t.dot(this.direction),n=t.dot(t)-i*i,o=e.radius*e.radius;if(n>o)return null;var a=Math.sqrt(o-n),s=i-a,c=i+a;return s<0&&c<0?null:s<0?this.at(c,r):this.at(s,r)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(t.normal)+t.constant)/e;return r>=0?r:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var r,i,n,o,a,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;return c>=0?(r=(t.min.x-u.x)*c,i=(t.max.x-u.x)*c):(r=(t.max.x-u.x)*c,i=(t.min.x-u.x)*c),h>=0?(n=(t.min.y-u.y)*h,o=(t.max.y-u.y)*h):(n=(t.max.y-u.y)*h,o=(t.min.y-u.y)*h),r>o||n>i?null:((n>r||r!=r)&&(r=n),(o<i||i!=i)&&(i=o),l>=0?(a=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(a=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),r>s||a>i?null:((a>r||r!=r)&&(r=a),(s<i||i!=i)&&(i=s),i<0?null:this.at(r>=0?r:i,e)))},intersectsBox:function(){var t=new we;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new we,e=new we,r=new we,i=new we;return function(n,o,a,s,c){e.subVectors(o,n),r.subVectors(a,n),i.crossVectors(e,r);var h,l=this.direction.dot(i);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,n);var u=h*this.direction.dot(r.crossVectors(t,r));if(u<0)return null;var p=h*this.direction.dot(e.cross(t));if(p<0)return null;if(u+p>l)return null;var d=-h*t.dot(i);return d<0?null:this.at(d/l,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(go.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return(t||new we).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new we).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new we;return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new we,e=new we;return function(r,i){t.subVectors(r,this.start),e.subVectors(this.end,this.start);var n=e.dot(e),o=e.dot(t)/n;return i&&(o=ye.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,r){var i=this.closestPointToPointParameter(t,e),n=r||new we;return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Object.assign(yo,{normal:function(){var t=new we;return function(e,r,i,n){var o=n||new we;o.subVectors(i,r),t.subVectors(e,r),o.cross(t);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}}(),barycoordFromPoint:function(){var t=new we,e=new we,r=new we;return function(i,n,o,a,s){t.subVectors(a,n),e.subVectors(o,n),r.subVectors(i,n);var c=t.dot(t),h=t.dot(e),l=t.dot(r),u=e.dot(e),p=e.dot(r),d=c*u-h*h,f=s||new we;if(0===d)return f.set(-2,-1,-1);var m=1/d,v=(u*l-h*p)*m,g=(c*p-h*l)*m;return f.set(1-v-g,g,v)}}(),containsPoint:function(){var t=new we;return function(e,r,i,n){var o=yo.barycoordFromPoint(e,r,i,n,t);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}()}),Object.assign(yo.prototype,{set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new we,e=new we;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new we).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return yo.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new Dn).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return yo.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return yo.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t=new Dn,e=[new go,new go,new go],r=new we,i=new we;return function(n,o){var a=o||new we,s=1/0;if(t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(n,r),!0===this.containsPoint(r))a.copy(r);else{e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var c=0;c<e.length;c++){e[c].closestPointToPoint(r,!0,i);var h=r.distanceToSquared(i);h<s&&(s=h,a.copy(i))}}return a}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),xo.prototype=Object.assign(Object.create(kn.prototype),{constructor:xo,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return kn.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,r,i=this.geometry;if(i.isBufferGeometry){var n=i.morphAttributes,o=Object.keys(n);if(o.length>0){var a=n[o[0]];if(void 0!==a)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=a.length;t<e;t++)r=a[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}else{var s=i.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)r=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}},raycast:function(){var t=new be,e=new vo,r=new Nn,i=new we,n=new we,o=new we,a=new we,s=new we,c=new we,h=new xe,l=new xe,u=new xe,p=new we,m=new we,v=new we;function g(t,e,r,i,n,o,a){return yo.barycoordFromPoint(t,e,r,i,p),n.multiplyScalar(p.x),o.multiplyScalar(p.y),a.multiplyScalar(p.z),n.add(o).add(a),n.clone()}function y(t,e,r,i,n,o,a,s){if(null===(e.side===d?i.intersectTriangle(a,o,n,!0,s):i.intersectTriangle(n,o,a,e.side!==f,s)))return null;v.copy(s),v.applyMatrix4(t.matrixWorld);var c=r.ray.origin.distanceTo(v);return c<r.near||c>r.far?null:{distance:c,point:v.clone(),object:t}}function x(t,e,r,a,s,c,p,d){i.fromBufferAttribute(a,c),n.fromBufferAttribute(a,p),o.fromBufferAttribute(a,d);var f=y(t,t.material,e,r,i,n,o,m);return f&&(s&&(h.fromBufferAttribute(s,c),l.fromBufferAttribute(s,p),u.fromBufferAttribute(s,d),f.uv=g(m,i,n,o,h,l,u)),f.face=new Xn(c,p,d,yo.normal(i,n,o)),f.faceIndex=c),f}return function(p,d){var f,v=this.geometry,b=this.material,_=this.matrixWorld;if(void 0!==b&&(null===v.boundingSphere&&v.computeBoundingSphere(),r.copy(v.boundingSphere),r.applyMatrix4(_),!1!==p.ray.intersectsSphere(r)&&(t.getInverse(_),e.copy(p.ray).applyMatrix4(t),null===v.boundingBox||!1!==e.intersectsBox(v.boundingBox))))if(v.isBufferGeometry){var w,M,E,T,S,A=v.index,R=v.attributes.position,L=v.attributes.uv;if(null!==A)for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),M=A.getX(T+1),E=A.getX(T+2),(f=x(this,p,e,R,L,w,M,E))&&(f.faceIndex=Math.floor(T/3),d.push(f));else if(void 0!==R)for(T=0,S=R.count;T<S;T+=3)(f=x(this,p,e,R,L,w=T,M=T+1,E=T+2))&&(f.index=w,d.push(f))}else if(v.isGeometry){var P,C,I,O,U=Array.isArray(b),N=v.vertices,D=v.faces,F=v.faceVertexUvs[0];F.length>0&&(O=F);for(var B=0,z=D.length;B<z;B++){var G=D[B],H=U?b[G.materialIndex]:b;if(void 0!==H){if(P=N[G.a],C=N[G.b],I=N[G.c],!0===H.morphTargets){var V=v.morphTargets,k=this.morphTargetInfluences;i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var j=0,W=V.length;j<W;j++){var X=k[j];if(0!==X){var q=V[j].vertices;i.addScaledVector(a.subVectors(q[G.a],P),X),n.addScaledVector(s.subVectors(q[G.b],C),X),o.addScaledVector(c.subVectors(q[G.c],I),X)}}i.add(P),n.add(C),o.add(I),P=i,C=n,I=o}if(f=y(this,H,p,e,P,C,I,m)){if(O&&O[B]){var Y=O[B];h.copy(Y[0]),l.copy(Y[1]),u.copy(Y[2]),f.uv=g(m,P,C,I,h,l,u)}f.face=G,f.faceIndex=B,d.push(f)}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var No=0;function Do(t){switch(t){case ce:return["Linear","( value )"];case he:return["sRGB","( value )"];case ue:return["RGBE","( value )"];case de:return["RGBM","( value, 7.0 )"];case fe:return["RGBM","( value, 16.0 )"];case me:return["RGBD","( value, 256.0 )"];case le:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Fo(t,e){var r=Do(e);return"vec4 "+t+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function Bo(t,e){var r=Do(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function zo(t,e){var r;switch(e){case tt:r="Linear";break;case et:r="Reinhard";break;case rt:r="Uncharted2";break;case it:r="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function Go(t,e,r){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&r.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&r.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&r.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ko).join("\n")}function Ho(t){var e=[];for(var r in t){var i=t[r];!1!==i&&e.push("#define "+r+" "+i)}return e.join("\n")}function Vo(t,e){for(var r={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),n=0;n<i;n++){var o=t.getActiveAttrib(e,n).name;r[o]=t.getAttribLocation(e,o)}return r}function ko(t){return""!==t}function jo(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Wo(t){return t.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,function(t,e){var r=En[e];if(void 0===r)throw new Error("Can not resolve #include <"+e+">");return Wo(r)})}function Xo(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,r,i){for(var n="",o=parseInt(e);o<parseInt(r);o++)n+=i.replace(/\[ i \]/g,"[ "+o+" ]");return n})}function qo(t,e,r,i,n,o){var a=t.context,s=i.defines,c=n.vertexShader,h=n.fragmentShader,p="SHADOWMAP_TYPE_BASIC";o.shadowMapType===l?p="SHADOWMAP_TYPE_PCF":o.shadowMapType===u&&(p="SHADOWMAP_TYPE_PCF_SOFT");var d="ENVMAP_TYPE_CUBE",f="ENVMAP_MODE_REFLECTION",m="ENVMAP_BLENDING_MULTIPLY";if(o.envMap){switch(i.envMap.mapping){case ot:case at:d="ENVMAP_TYPE_CUBE";break;case lt:case ut:d="ENVMAP_TYPE_CUBE_UV";break;case st:case ct:d="ENVMAP_TYPE_EQUIREC";break;case ht:d="ENVMAP_TYPE_SPHERE"}switch(i.envMap.mapping){case at:case ct:f="ENVMAP_MODE_REFRACTION"}switch(i.combine){case J:m="ENVMAP_BLENDING_MULTIPLY";break;case Q:m="ENVMAP_BLENDING_MIX";break;case K:m="ENVMAP_BLENDING_ADD"}}var v,g,y=t.gammaFactor>0?t.gammaFactor:1,x=Go(i.extensions,o,e),b=Ho(s),_=a.createProgram();i.isRawShaderMaterial?((v=[b].filter(ko).join("\n")).length>0&&(v+="\n"),(g=[x,b].filter(ko).join("\n")).length>0&&(g+="\n")):(v=["precision "+o.precision+" float;","precision "+o.precision+" int;","#define SHADER_NAME "+n.name,b,o.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+y,"#define MAX_BONES "+o.maxBones,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+f:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.displacementMap&&o.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals&&!1===o.flatShading?"#define USE_MORPHNORMALS":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+o.numClippingPlanes,o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+p:"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ko).join("\n"),g=[x,"precision "+o.precision+" float;","precision "+o.precision+" int;","#define SHADER_NAME "+n.name,b,o.alphaTest?"#define ALPHATEST "+o.alphaTest:"","#define GAMMA_FACTOR "+y,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+d:"",o.envMap?"#define "+f:"",o.envMap?"#define "+m:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.roughnessMap?"#define USE_ROUGHNESSMAP":"",o.metalnessMap?"#define USE_METALNESSMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.gradientMap?"#define USE_GRADIENTMAP":"",o.flatShading?"#define FLAT_SHADED":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+o.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(o.numClippingPlanes-o.numClipIntersection),o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+p:"",o.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",o.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",o.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",o.toneMapping!==$?"#define TONE_MAPPING":"",o.toneMapping!==$?En.tonemapping_pars_fragment:"",o.toneMapping!==$?zo("toneMapping",o.toneMapping):"",o.dithering?"#define DITHERING":"",o.outputEncoding||o.mapEncoding||o.envMapEncoding||o.emissiveMapEncoding?En.encodings_pars_fragment:"",o.mapEncoding?Fo("mapTexelToLinear",o.mapEncoding):"",o.envMapEncoding?Fo("envMapTexelToLinear",o.envMapEncoding):"",o.emissiveMapEncoding?Fo("emissiveMapTexelToLinear",o.emissiveMapEncoding):"",o.outputEncoding?Bo("linearToOutputTexel",o.outputEncoding):"",o.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(ko).join("\n")),c=jo(c=Wo(c),o),h=jo(h=Wo(h),o),i.isShaderMaterial||(c=Xo(c),h=Xo(h));var w=v+c,M=g+h,E=Uo(a,a.VERTEX_SHADER,w),T=Uo(a,a.FRAGMENT_SHADER,M);a.attachShader(_,E),a.attachShader(_,T),void 0!==i.index0AttributeName?a.bindAttribLocation(_,0,i.index0AttributeName):!0===o.morphTargets&&a.bindAttribLocation(_,0,"position"),a.linkProgram(_);var S,A,R=a.getProgramInfoLog(_),L=a.getShaderInfoLog(E),P=a.getShaderInfoLog(T),C=!0,I=!0;return!1===a.getProgramParameter(_,a.LINK_STATUS)?(C=!1,console.error("THREE.WebGLProgram: shader error: ",a.getError(),"gl.VALIDATE_STATUS",a.getProgramParameter(_,a.VALIDATE_STATUS),"gl.getProgramInfoLog",R,L,P)):""!==R?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",R):""!==L&&""!==P||(I=!1),I&&(this.diagnostics={runnable:C,material:i,programLog:R,vertexShader:{log:L,prefix:v},fragmentShader:{log:P,prefix:g}}),a.deleteShader(E),a.deleteShader(T),this.getUniforms=function(){return void 0===S&&(S=new gr(a,_,t)),S},this.getAttributes=function(){return void 0===A&&(A=Vo(a,_)),A},this.destroy=function(){a.deleteProgram(_),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=No++,this.code=r,this.usedTimes=1,this.program=_,this.vertexShader=E,this.fragmentShader=T,this}function Yo(t,e,r){var i=[],n={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];function a(t,e){var r;return t?t.isTexture?r=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),r=t.texture.encoding):r=ce,r===ce&&e&&(r=le),r}this.getParameters=function(e,i,o,s,c,h,l){var u=n[e.type],p=l.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(r.floatVertexTextures)return 1024;var i=r.maxVertexUniforms,n=Math.floor((i-20)/4),o=Math.min(n,e.length);return o<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+o+"."),0):o}(l):0,m=r.precision;null!==e.precision&&(m=r.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",m,"instead.");var v=t.getRenderTarget();return{shaderID:u,precision:m,supportsVertexTextures:r.vertexTextures,outputEncoding:a(v?v.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:a(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:a(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===lt||e.envMap.mapping===ut),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:a(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:r.logarithmicDepthBuffer,skinning:e.skinning&&p>0,maxBones:p,useVertexTexture:r.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numClippingPlanes:c,numClipIntersection:h,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&l.receiveShadow&&o.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===f,flipSided:e.side===d,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,r){var i=[];if(r.shaderID?i.push(r.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(var n in e.defines)i.push(n),i.push(e.defines[n]);for(var a=0;a<o.length;a++)i.push(r[o[a]]);return i.push(e.onBeforeCompile.toString()),i.push(t.gammaOutput),i.join()},this.acquireProgram=function(r,n,o,a){for(var s,c=0,h=i.length;c<h;c++){var l=i[c];if(l.code===a){++(s=l).usedTimes;break}}return void 0===s&&(s=new qo(t,e,a,r,n,o),i.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=i.indexOf(t);i[e]=i[i.length-1],i.pop(),t.destroy()}},this.programs=i}function Zo(t,e,r,i,n,o,a){var s="undefined"!=typeof WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext,c={};function h(t,e){if(t.width>e||t.height>e){var r=e/Math.max(t.width,t.height),i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(t.width*r),i.height=Math.floor(t.height*r),i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i.width,i.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+i.width+"x"+i.height,t),i}return t}function l(t){return ye.isPowerOfTwo(t.width)&&ye.isPowerOfTwo(t.height)}function u(t,e){return t.generateMipmaps&&e&&t.minFilter!==mt&&t.minFilter!==yt}function p(e){return e===mt||e===vt||e===gt?t.NEAREST:t.LINEAR}function d(e){var r=e.target;r.removeEventListener("dispose",d),function(e){var r=i.get(e);if(e.image&&r.__image__webglTextureCube)t.deleteTexture(r.__image__webglTextureCube);else{if(void 0===r.__webglInit)return;t.deleteTexture(r.__webglTexture)}i.remove(e)}(r),r.isVideoTexture&&delete c[r.id],a.textures--}function f(e){var r=e.target;r.removeEventListener("dispose",f),function(e){var r=i.get(e),n=i.get(e.texture);if(!e)return;void 0!==n.__webglTexture&&t.deleteTexture(n.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var o=0;o<6;o++)t.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[o]);else t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer);i.remove(e.texture),i.remove(e)}(r),a.textures--}function m(e,p){var f=i.get(e);if(e.version>0&&f.__version!==e.version){var m=e.image;if(void 0===m)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(!1!==m.complete)return void function(e,i,p){void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",d),e.__webglTexture=t.createTexture(),i.isVideoTexture&&(c[i.id]=i),a.textures++);r.activeTexture(t.TEXTURE0+p),r.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,i.unpackAlignment);var f=h(i.image,n.maxTextureSize);(function(t){return t.wrapS!==dt||t.wrapT!==dt||t.minFilter!==mt&&t.minFilter!==yt})(i)&&!1===l(f)&&(f=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageBitmap){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.width=ye.floorPowerOfTwo(t.width),e.height=ye.floorPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(f));var m=l(f),g=o.convert(i.format),y=o.convert(i.type);v(t.TEXTURE_2D,i,m);var x,b=i.mipmaps;if(i.isDepthTexture){var _=t.DEPTH_COMPONENT;if(i.type===At){if(!s)throw new Error("Float Depth Texture only supported in WebGL2.0");_=t.DEPTH_COMPONENT32F}else s&&(_=t.DEPTH_COMPONENT16);i.format===zt&&_===t.DEPTH_COMPONENT&&i.type!==Et&&i.type!==St&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=Et,y=o.convert(i.type)),i.format===Gt&&(_=t.DEPTH_STENCIL,i.type!==It&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=It,y=o.convert(i.type))),r.texImage2D(t.TEXTURE_2D,0,_,f.width,f.height,0,g,y,null)}else if(i.isDataTexture)if(b.length>0&&m){for(var w=0,M=b.length;w<M;w++)x=b[w],r.texImage2D(t.TEXTURE_2D,w,g,x.width,x.height,0,g,y,x.data);i.generateMipmaps=!1}else r.texImage2D(t.TEXTURE_2D,0,g,f.width,f.height,0,g,y,f.data);else if(i.isCompressedTexture)for(var w=0,M=b.length;w<M;w++)x=b[w],i.format!==Nt&&i.format!==Ut?r.getCompressedTextureFormats().indexOf(g)>-1?r.compressedTexImage2D(t.TEXTURE_2D,w,g,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(t.TEXTURE_2D,w,g,x.width,x.height,0,g,y,x.data);else if(b.length>0&&m){for(var w=0,M=b.length;w<M;w++)x=b[w],r.texImage2D(t.TEXTURE_2D,w,g,g,y,x);i.generateMipmaps=!1}else r.texImage2D(t.TEXTURE_2D,0,g,g,y,f);u(i,m)&&t.generateMipmap(t.TEXTURE_2D);e.__version=i.version,i.onUpdate&&i.onUpdate(i)}(f,e,p);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}}r.activeTexture(t.TEXTURE0+p),r.bindTexture(t.TEXTURE_2D,f.__webglTexture)}function v(r,a,s){var c;if(s?(t.texParameteri(r,t.TEXTURE_WRAP_S,o.convert(a.wrapS)),t.texParameteri(r,t.TEXTURE_WRAP_T,o.convert(a.wrapT)),t.texParameteri(r,t.TEXTURE_MAG_FILTER,o.convert(a.magFilter)),t.texParameteri(r,t.TEXTURE_MIN_FILTER,o.convert(a.minFilter))):(t.texParameteri(r,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(r,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),a.wrapS===dt&&a.wrapT===dt||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",a),t.texParameteri(r,t.TEXTURE_MAG_FILTER,p(a.magFilter)),t.texParameteri(r,t.TEXTURE_MIN_FILTER,p(a.minFilter)),a.minFilter!==mt&&a.minFilter!==yt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",a)),c=e.get("EXT_texture_filter_anisotropic")){if(a.type===At&&null===e.get("OES_texture_float_linear"))return;if(a.type===Rt&&null===e.get("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(t.texParameterf(r,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function g(e,n,a,s){var c=o.convert(n.texture.format),h=o.convert(n.texture.type);r.texImage2D(s,0,c,n.width,n.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,a,s,i.get(n.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function y(e,r){t.bindRenderbuffer(t.RENDERBUFFER,e),r.depthBuffer&&!r.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,r.width,r.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):r.depthBuffer&&r.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,r.width,r.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,r.width,r.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function x(e){var r=i.get(e),n=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(n)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),m(r.depthTexture,0);var n=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===zt)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,n,0);else{if(r.depthTexture.format!==Gt)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,n,0)}}(r.__webglFramebuffer,e)}else if(n){r.__webglDepthbuffer=[];for(var o=0;o<6;o++)t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=t.createRenderbuffer(),y(r.__webglDepthbuffer[o],e)}else t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),y(r.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}this.setTexture2D=m,this.setTextureCube=function(e,s){var c=i.get(e);if(6===e.image.length)if(e.version>0&&c.__version!==e.version){c.__image__webglTextureCube||(e.addEventListener("dispose",d),c.__image__webglTextureCube=t.createTexture(),a.textures++),r.activeTexture(t.TEXTURE0+s),r.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var p=e&&e.isCompressedTexture,f=e.image[0]&&e.image[0].isDataTexture,m=[],g=0;g<6;g++)m[g]=p||f?f?e.image[g].image:e.image[g]:h(e.image[g],n.maxCubemapSize);var y=l(m[0]),x=o.convert(e.format),b=o.convert(e.type);for(v(t.TEXTURE_CUBE_MAP,e,y),g=0;g<6;g++)if(p)for(var _,w=m[g].mipmaps,M=0,E=w.length;M<E;M++)_=w[M],e.format!==Nt&&e.format!==Ut?r.getCompressedTextureFormats().indexOf(x)>-1?r.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,M,x,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,M,x,_.width,_.height,0,x,b,_.data);else f?r.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,m[g].width,m[g].height,0,x,b,m[g].data):r.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,x,b,m[g]);u(e,y)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),c.__version=e.version,e.onUpdate&&e.onUpdate(e)}else r.activeTexture(t.TEXTURE0+s),r.bindTexture(t.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,n){r.activeTexture(t.TEXTURE0+n),r.bindTexture(t.TEXTURE_CUBE_MAP,i.get(e).__webglTexture)},this.setupRenderTarget=function(e){var n=i.get(e),o=i.get(e.texture);e.addEventListener("dispose",f),o.__webglTexture=t.createTexture(),a.textures++;var s=!0===e.isWebGLRenderTargetCube,c=l(e);if(s){n.__webglFramebuffer=[];for(var h=0;h<6;h++)n.__webglFramebuffer[h]=t.createFramebuffer()}else n.__webglFramebuffer=t.createFramebuffer();if(s){for(r.bindTexture(t.TEXTURE_CUBE_MAP,o.__webglTexture),v(t.TEXTURE_CUBE_MAP,e.texture,c),h=0;h<6;h++)g(n.__webglFramebuffer[h],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+h);u(e.texture,c)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),r.bindTexture(t.TEXTURE_CUBE_MAP,null)}else r.bindTexture(t.TEXTURE_2D,o.__webglTexture),v(t.TEXTURE_2D,e.texture,c),g(n.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),u(e.texture,c)&&t.generateMipmap(t.TEXTURE_2D),r.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&x(e)},this.updateRenderTargetMipmap=function(e){var n=e.texture;if(u(n,l(e))){var o=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,a=i.get(n).__webglTexture;r.bindTexture(o,a),t.generateMipmap(o),r.bindTexture(o,null)}},this.updateVideoTextures=function(){for(var t in c)c[t].update()}}function Jo(){var t={};return{get:function(e){var r=e.uuid,i=t[r];return void 0===i&&(i={},t[r]=i),i},remove:function(e){delete t[e.uuid]},clear:function(){t={}}}}function Qo(t,e,r){var a=new function(){var e=!1,r=new Se,i=null,n=new Se(0,0,0,0);return{setMask:function(r){i===r||e||(t.colorMask(r,r,r,r),i=r)},setLocked:function(t){e=t},setClear:function(e,i,o,a,s){!0===s&&(e*=a,i*=a,o*=a),r.set(e,i,o,a),!1===n.equals(r)&&(t.clearColor(e,i,o,a),n.copy(r))},reset:function(){e=!1,i=null,n.set(-1,0,0,0)}}},s=new function(){var e=!1,r=null,i=null,n=null;return{setTest:function(e){e?tt(t.DEPTH_TEST):et(t.DEPTH_TEST)},setMask:function(i){r===i||e||(t.depthMask(i),r=i)},setFunc:function(e){if(i!==e){if(e)switch(e){case V:t.depthFunc(t.NEVER);break;case k:t.depthFunc(t.ALWAYS);break;case j:t.depthFunc(t.LESS);break;case W:t.depthFunc(t.LEQUAL);break;case X:t.depthFunc(t.EQUAL);break;case q:t.depthFunc(t.GEQUAL);break;case Y:t.depthFunc(t.GREATER);break;case Z:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);i=e}},setLocked:function(t){e=t},setClear:function(e){n!==e&&(t.clearDepth(e),n=e)},reset:function(){e=!1,r=null,i=null,n=null}}},c=new function(){var e=!1,r=null,i=null,n=null,o=null,a=null,s=null,c=null,h=null;return{setTest:function(e){e?tt(t.STENCIL_TEST):et(t.STENCIL_TEST)},setMask:function(i){r===i||e||(t.stencilMask(i),r=i)},setFunc:function(e,r,a){i===e&&n===r&&o===a||(t.stencilFunc(e,r,a),i=e,n=r,o=a)},setOp:function(e,r,i){a===e&&s===r&&c===i||(t.stencilOp(e,r,i),a=e,s=r,c=i)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,r=null,i=null,n=null,o=null,a=null,s=null,c=null,h=null}}},h=t.getParameter(t.MAX_VERTEX_ATTRIBS),l=new Uint8Array(h),u=new Uint8Array(h),p=new Uint8Array(h),m={},v=null,g=null,y=null,x=null,S=null,A=null,R=null,L=null,P=null,C=!1,I=null,O=null,U=null,N=null,D=null,F=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),B=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),z=parseFloat(B)>=1,G=null,H={},J=new Se,Q=new Se;function K(e,r,i){var n=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var a=0;a<i;a++)t.texImage2D(r+a,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,n);return o}var $={};function tt(e){!0!==m[e]&&(t.enable(e),m[e]=!0)}function et(e){!1!==m[e]&&(t.disable(e),m[e]=!1)}function rt(e,i,n,o,a,s,c,h){if(e!==b?tt(t.BLEND):et(t.BLEND),e!==T){if(e!==y||h!==C)switch(e){case w:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case M:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case E:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}x=null,S=null,A=null,R=null,L=null,P=null}else a=a||i,s=s||n,c=c||o,i===x&&a===R||(t.blendEquationSeparate(r.convert(i),r.convert(a)),x=i,R=a),n===S&&o===A&&s===L&&c===P||(t.blendFuncSeparate(r.convert(n),r.convert(o),r.convert(s),r.convert(c)),S=n,A=o,L=s,P=c);y=e,C=h}function it(e){I!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),I=e)}function nt(e){e!==i?(tt(t.CULL_FACE),e!==O&&(e===n?t.cullFace(t.BACK):e===o?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):et(t.CULL_FACE),O=e}function ot(e,r,i){e?(tt(t.POLYGON_OFFSET_FILL),N===r&&D===i||(t.polygonOffset(r,i),N=r,D=i)):et(t.POLYGON_OFFSET_FILL)}function at(e){void 0===e&&(e=t.TEXTURE0+F-1),G!==e&&(t.activeTexture(e),G=e)}return $[t.TEXTURE_2D]=K(t.TEXTURE_2D,t.TEXTURE_2D,1),$[t.TEXTURE_CUBE_MAP]=K(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),s.setClear(1),c.setClear(0),tt(t.DEPTH_TEST),s.setFunc(W),it(!1),nt(n),tt(t.CULL_FACE),tt(t.BLEND),rt(_),{buffers:{color:a,depth:s,stencil:c},initAttributes:function(){for(var t=0,e=l.length;t<e;t++)l[t]=0},enableAttribute:function(r){l[r]=1,0===u[r]&&(t.enableVertexAttribArray(r),u[r]=1),0!==p[r]&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(r,0),p[r]=0)},enableAttributeAndDivisor:function(r,i){l[r]=1,0===u[r]&&(t.enableVertexAttribArray(r),u[r]=1),p[r]!==i&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(r,i),p[r]=i)},disableUnusedAttributes:function(){for(var e=0,r=u.length;e!==r;++e)u[e]!==l[e]&&(t.disableVertexAttribArray(e),u[e]=0)},enable:tt,disable:et,getCompressedTextureFormats:function(){if(null===v&&(v=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var r=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),i=0;i<r.length;i++)v.push(r[i]);return v},useProgram:function(e){return g!==e&&(t.useProgram(e),g=e,!0)},setBlending:rt,setMaterial:function(e,r){e.side===f?et(t.CULL_FACE):tt(t.CULL_FACE);var i=e.side===d;r&&(i=!i),it(i),!0===e.transparent?rt(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):rt(b),s.setFunc(e.depthFunc),s.setTest(e.depthTest),s.setMask(e.depthWrite),a.setMask(e.colorWrite),ot(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:it,setCullFace:nt,setLineWidth:function(e){e!==U&&(z&&t.lineWidth(e),U=e)},setPolygonOffset:ot,setScissorTest:function(e){e?tt(t.SCISSOR_TEST):et(t.SCISSOR_TEST)},activeTexture:at,bindTexture:function(e,r){null===G&&at();var i=H[G];void 0===i&&(i={type:void 0,texture:void 0},H[G]=i),i.type===e&&i.texture===r||(t.bindTexture(e,r||$[e]),i.type=e,i.texture=r)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===J.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),J.copy(e))},viewport:function(e){!1===Q.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),Q.copy(e))},reset:function(){for(var e=0;e<u.length;e++)1===u[e]&&(t.disableVertexAttribArray(e),u[e]=0);m={},v=null,G=null,H={},g=null,y=null,I=null,O=null,a.reset(),s.reset(),c.reset()}}}function Ko(t,e,r){var i;function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var o=void 0!==r.precision?r.precision:"highp",a=n(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);var s=!0===r.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_TEXTURE_SIZE),u=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),d=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),m=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=h>0,g=!!e.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==i)return i;var r=e.get("EXT_texture_filter_anisotropic");return i=null!==r?t.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:n,precision:o,logarithmicDepthBuffer:s,maxTextures:c,maxVertexTextures:h,maxTextureSize:l,maxCubemapSize:u,maxAttributes:p,maxVertexUniforms:d,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:v,floatFragmentTextures:g,floatVertexTextures:v&&g}}function $o(t,e,r,i){jn.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ta(t){$o.call(this),this.cameras=t||[]}function ea(t){var e=this,r=null,i=null,n=null;"undefined"!=typeof window&&"VRFrameData"in window&&(i=new window.VRFrameData);var o=new be,a=new $o;a.bounds=new Se(0,0,.5,1),a.layers.enable(1);var s=new $o;s.bounds=new Se(.5,0,.5,1),s.layers.enable(2);var c,h,l=new ta([a,s]);function u(){if(null!==r&&r.isPresenting){var i=r.getEyeParameters("left"),n=i.renderWidth,o=i.renderHeight;h=t.getPixelRatio(),c=t.getSize(),t.setDrawingBufferSize(2*n,o,1)}else e.enabled&&t.setDrawingBufferSize(c.width,c.height,h)}l.layers.enable(1),l.layers.enable(2),"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",u,!1),this.enabled=!1,this.getDevice=function(){return r},this.setDevice=function(t){void 0!==t&&(r=t)},this.setPoseTarget=function(t){void 0!==t&&(n=t)},this.getCamera=function(t){if(null===r)return t;r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(i);var e=i.pose,c=null!==n?n:t;if(null!==e.position?c.position.fromArray(e.position):c.position.set(0,0,0),null!==e.orientation&&c.quaternion.fromArray(e.orientation),c.updateMatrixWorld(),!1===r.isPresenting)return t;a.near=t.near,s.near=t.near,a.far=t.far,s.far=t.far,l.matrixWorld.copy(t.matrixWorld),l.matrixWorldInverse.copy(t.matrixWorldInverse),a.matrixWorldInverse.fromArray(i.leftViewMatrix),s.matrixWorldInverse.fromArray(i.rightViewMatrix);var h=c.parent;null!==h&&(o.getInverse(h.matrixWorld),a.matrixWorldInverse.multiply(o),s.matrixWorldInverse.multiply(o)),a.matrixWorld.getInverse(a.matrixWorldInverse),s.matrixWorld.getInverse(s.matrixWorldInverse),a.projectionMatrix.fromArray(i.leftProjectionMatrix),s.projectionMatrix.fromArray(i.rightProjectionMatrix),l.projectionMatrix.copy(a.projectionMatrix);var u=r.getLayers();if(u.length){var p=u[0];null!==p.leftBounds&&4===p.leftBounds.length&&a.bounds.fromArray(p.leftBounds),null!==p.rightBounds&&4===p.rightBounds.length&&s.bounds.fromArray(p.rightBounds)}return l},this.submitFrame=function(){r&&r.isPresenting&&r.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",u)}}function ra(t){var e={};return{get:function(r){if(void 0!==e[r])return e[r];var i;switch(r){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":i=t.getExtension("WEBGL_compressed_texture_etc1");break;default:i=t.getExtension(r)}return null===i&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),e[r]=i,i}}}function ia(){var t=this,e=null,r=0,i=!1,n=!1,o=new Dn,a=new Me,s={value:null,needsUpdate:!1};function c(){s.value!==e&&(s.value=e,s.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function h(e,r,i,n){var c=null!==e?e.length:0,h=null;if(0!==c){if(h=s.value,!0!==n||null===h){var l=i+4*c,u=r.matrixWorldInverse;a.getNormalMatrix(u),(null===h||h.length<l)&&(h=new Float32Array(l));for(var p=0,d=i;p!==c;++p,d+=4)o.copy(e[p]).applyMatrix4(u,a),o.normal.toArray(h,d),h[d+3]=o.constant}s.value=h,s.needsUpdate=!0}return t.numPlanes=c,h}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(t,n,o){var a=0!==t.length||n||0!==r||i;return i=n,e=h(t,o,0),r=t.length,a},this.beginShadows=function(){n=!0,h(null)},this.endShadows=function(){n=!1,c()},this.setState=function(t,o,a,l,u,p){if(!i||null===t||0===t.length||n&&!a)n?h(null):c();else{var d=n?0:r,f=4*d,m=u.clippingState||null;s.value=m,m=h(t,l,f,p);for(var v=0;v!==f;++v)m[v]=e[v];u.clippingState=m,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=d}}}function na(t,e){return{convert:function(r){var i;if(r===pt)return t.REPEAT;if(r===dt)return t.CLAMP_TO_EDGE;if(r===ft)return t.MIRRORED_REPEAT;if(r===mt)return t.NEAREST;if(r===vt)return t.NEAREST_MIPMAP_NEAREST;if(r===gt)return t.NEAREST_MIPMAP_LINEAR;if(r===yt)return t.LINEAR;if(r===xt)return t.LINEAR_MIPMAP_NEAREST;if(r===bt)return t.LINEAR_MIPMAP_LINEAR;if(r===_t)return t.UNSIGNED_BYTE;if(r===Lt)return t.UNSIGNED_SHORT_4_4_4_4;if(r===Pt)return t.UNSIGNED_SHORT_5_5_5_1;if(r===Ct)return t.UNSIGNED_SHORT_5_6_5;if(r===wt)return t.BYTE;if(r===Mt)return t.SHORT;if(r===Et)return t.UNSIGNED_SHORT;if(r===Tt)return t.INT;if(r===St)return t.UNSIGNED_INT;if(r===At)return t.FLOAT;if(r===Rt&&null!==(i=e.get("OES_texture_half_float")))return i.HALF_FLOAT_OES;if(r===Ot)return t.ALPHA;if(r===Ut)return t.RGB;if(r===Nt)return t.RGBA;if(r===Dt)return t.LUMINANCE;if(r===Ft)return t.LUMINANCE_ALPHA;if(r===zt)return t.DEPTH_COMPONENT;if(r===Gt)return t.DEPTH_STENCIL;if(r===S)return t.FUNC_ADD;if(r===A)return t.FUNC_SUBTRACT;if(r===R)return t.FUNC_REVERSE_SUBTRACT;if(r===C)return t.ZERO;if(r===I)return t.ONE;if(r===O)return t.SRC_COLOR;if(r===U)return t.ONE_MINUS_SRC_COLOR;if(r===N)return t.SRC_ALPHA;if(r===D)return t.ONE_MINUS_SRC_ALPHA;if(r===F)return t.DST_ALPHA;if(r===B)return t.ONE_MINUS_DST_ALPHA;if(r===z)return t.DST_COLOR;if(r===G)return t.ONE_MINUS_DST_COLOR;if(r===H)return t.SRC_ALPHA_SATURATE;if((r===Ht||r===Vt||r===kt||r===jt)&&null!==(i=e.get("WEBGL_compressed_texture_s3tc"))){if(r===Ht)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Vt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===kt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===jt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((r===Wt||r===Xt||r===qt||r===Yt)&&null!==(i=e.get("WEBGL_compressed_texture_pvrtc"))){if(r===Wt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Xt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===qt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Yt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(r===Zt&&null!==(i=e.get("WEBGL_compressed_texture_etc1")))return i.COMPRESSED_RGB_ETC1_WEBGL;if((r===L||r===P)&&null!==(i=e.get("EXT_blend_minmax"))){if(r===L)return i.MIN_EXT;if(r===P)return i.MAX_EXT}return r===It&&null!==(i=e.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:0}}}function oa(t){console.log("THREE.WebGLRenderer",e);var r=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),i=void 0!==t.context?t.context:null,n=void 0!==t.alpha&&t.alpha,o=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,c=void 0!==t.antialias&&t.antialias,h=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,u=void 0!==t.powerPreference?t.powerPreference:"default",p=[],d=[],f=null,m=[],v=[];this.domElement=r,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=tt,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var y,x,b,_,w,M,E,T,S,A,R,L,P,C,I,O,U,N,D,F=this,B=!1,z=null,G=null,H=-1,V="",k=null,j=null,W=new Se,X=new Se,q=null,Y=0,Z=r.width,J=r.height,Q=1,K=new Se(0,0,Z,J),$=new Se(0,0,Z,J),et=!1,rt=new Fn,it=new ia,nt=!1,ot=!1,at=new be,st=new we,ct={geometries:0,textures:0},ht={frame:0,calls:0,vertices:0,faces:0,points:0};function lt(){return null===z?Q:1}this.info={render:ht,memory:ct,programs:null};try{var ut={alpha:n,depth:o,stencil:a,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:l,powerPreference:u};if(r.addEventListener("webglcontextlost",mt,!1),r.addEventListener("webglcontextrestored",vt,!1),null===(y=i||r.getContext("webgl",ut)||r.getContext("experimental-webgl",ut)))throw null!==r.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===y.getShaderPrecisionFormat&&(y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Ot){console.error("THREE.WebGLRenderer: "+Ot.message)}function pt(){(x=new ra(y)).get("WEBGL_depth_texture"),x.get("OES_texture_float"),x.get("OES_texture_float_linear"),x.get("OES_texture_half_float"),x.get("OES_texture_half_float_linear"),x.get("OES_standard_derivatives"),x.get("OES_element_index_uint"),x.get("ANGLE_instanced_arrays"),D=new na(y,x),b=new Ko(y,x,t),(_=new Qo(y,x,D)).scissor(X.copy($).multiplyScalar(Q)),_.viewport(W.copy(K).multiplyScalar(Q)),w=new Jo,M=new Zo(y,x,_,w,b,D,ct),E=new zn(y),T=new Lo(y,E,ct),S=new Io(T,ht),C=new So(y),R=new Yo(F,x,b),A=new Co,L=new Eo,P=new bo(F,_,T,h),I=new Ro(y,x,ht),O=new Ao(y,x,ht),U=new An(F,y,_,M,b),N=new Ln(F,y,_,M,b),F.info.programs=R.programs,F.context=y,F.capabilities=b,F.extensions=x,F.properties=w,F.renderLists=L,F.state=_}pt();var dt=new ea(F);this.vr=dt;var ft=new Bn(F,S,b.maxTextureSize);function mt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),B=!0}function vt(){console.log("THREE.WebGLRenderer: Context Restored."),B=!1,pt()}function gt(t){var e=t.target;e.removeEventListener("dispose",gt),function(t){yt(t),w.remove(t)}(e)}function yt(t){var e=w.get(t).program;t.program=void 0,void 0!==e&&R.releaseProgram(e)}this.shadowMap=ft,this.getContext=function(){return y},this.getContextAttributes=function(){return y.getContextAttributes()},this.forceContextLoss=function(){var t=x.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=x.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Q},this.setPixelRatio=function(t){void 0!==t&&(Q=t,this.setSize(Z,J,!1))},this.getSize=function(){return{width:Z,height:J}},this.setSize=function(t,e,i){var n=dt.getDevice();n&&n.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(Z=t,J=e,r.width=t*Q,r.height=e*Q,!1!==i&&(r.style.width=t+"px",r.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(){return{width:Z*Q,height:J*Q}},this.setDrawingBufferSize=function(t,e,i){Z=t,J=e,Q=i,r.width=t*i,r.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){K.set(t,J-e-i,r,i),_.viewport(W.copy(K).multiplyScalar(Q))},this.setScissor=function(t,e,r,i){$.set(t,J-e-i,r,i),_.scissor(X.copy($).multiplyScalar(Q))},this.setScissorTest=function(t){_.setScissorTest(et=t)},this.getClearColor=function(){return P.getClearColor()},this.setClearColor=function(){P.setClearColor.apply(P,arguments)},this.getClearAlpha=function(){return P.getClearAlpha()},this.setClearAlpha=function(){P.setClearAlpha.apply(P,arguments)},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=y.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=y.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=y.STENCIL_BUFFER_BIT),y.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.dispose=function(){r.removeEventListener("webglcontextlost",mt,!1),r.removeEventListener("webglcontextrestored",vt,!1),L.dispose(),dt.dispose()},this.renderBufferImmediate=function(t,e,r){_.initAttributes();var i=w.get(t);t.hasPositions&&!i.position&&(i.position=y.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=y.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=y.createBuffer()),t.hasColors&&!i.color&&(i.color=y.createBuffer());var n=e.getAttributes();if(t.hasPositions&&(y.bindBuffer(y.ARRAY_BUFFER,i.position),y.bufferData(y.ARRAY_BUFFER,t.positionArray,y.DYNAMIC_DRAW),_.enableAttribute(n.position),y.vertexAttribPointer(n.position,3,y.FLOAT,!1,0,0)),t.hasNormals){if(y.bindBuffer(y.ARRAY_BUFFER,i.normal),!r.isMeshPhongMaterial&&!r.isMeshStandardMaterial&&!r.isMeshNormalMaterial&&!0===r.flatShading)for(var o=0,a=3*t.count;o<a;o+=9){var s=t.normalArray,c=(s[o+0]+s[o+3]+s[o+6])/3,h=(s[o+1]+s[o+4]+s[o+7])/3,l=(s[o+2]+s[o+5]+s[o+8])/3;s[o+0]=c,s[o+1]=h,s[o+2]=l,s[o+3]=c,s[o+4]=h,s[o+5]=l,s[o+6]=c,s[o+7]=h,s[o+8]=l}y.bufferData(y.ARRAY_BUFFER,t.normalArray,y.DYNAMIC_DRAW),_.enableAttribute(n.normal),y.vertexAttribPointer(n.normal,3,y.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(y.bindBuffer(y.ARRAY_BUFFER,i.uv),y.bufferData(y.ARRAY_BUFFER,t.uvArray,y.DYNAMIC_DRAW),_.enableAttribute(n.uv),y.vertexAttribPointer(n.uv,2,y.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==g&&(y.bindBuffer(y.ARRAY_BUFFER,i.color),y.bufferData(y.ARRAY_BUFFER,t.colorArray,y.DYNAMIC_DRAW),_.enableAttribute(n.color),y.vertexAttribPointer(n.color,3,y.FLOAT,!1,0,0)),_.disableUnusedAttributes(),y.drawArrays(y.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,o){var a=n.isMesh&&n.matrixWorld.determinant()<0;_.setMaterial(i,a);var s=Lt(t,e,i,n),c=r.id+"_"+s.id+"_"+(!0===i.wireframe),h=!1;c!==V&&(V=c,h=!0),n.morphTargetInfluences&&(C.update(n,r,i,s),h=!0);var l,u=r.index,p=r.attributes.position,d=1;!0===i.wireframe&&(u=T.getWireframeAttribute(r),d=2);var f=I;null!==u&&(l=E.get(u),(f=O).setIndex(l)),h&&(!function(t,e,r,i){if(r&&r.isInstancedBufferGeometry&&null===x.get("ANGLE_instanced_arrays"))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===i&&(i=0);_.initAttributes();var n=r.attributes,o=e.getAttributes(),a=t.defaultAttributeValues;for(var s in o){var c=o[s];if(c>=0){var h=n[s];if(void 0!==h){var l=h.normalized,u=h.itemSize,p=E.get(h);if(void 0===p)continue;var d=p.buffer,f=p.type,m=p.bytesPerElement;if(h.isInterleavedBufferAttribute){var v=h.data,g=v.stride,b=h.offset;v&&v.isInstancedInterleavedBuffer?(_.enableAttributeAndDivisor(c,v.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=v.meshPerAttribute*v.count)):_.enableAttribute(c),y.bindBuffer(y.ARRAY_BUFFER,d),y.vertexAttribPointer(c,u,f,l,g*m,(i*g+b)*m)}else h.isInstancedBufferAttribute?(_.enableAttributeAndDivisor(c,h.meshPerAttribute),void 0===r.maxInstancedCount&&(r.maxInstancedCount=h.meshPerAttribute*h.count)):_.enableAttribute(c),y.bindBuffer(y.ARRAY_BUFFER,d),y.vertexAttribPointer(c,u,f,l,0,i*u*m)}else if(void 0!==a){var w=a[s];if(void 0!==w)switch(w.length){case 2:y.vertexAttrib2fv(c,w);break;case 3:y.vertexAttrib3fv(c,w);break;case 4:y.vertexAttrib4fv(c,w);break;default:y.vertexAttrib1fv(c,w)}}}}_.disableUnusedAttributes()}(i,s,r),null!==u&&y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,l.buffer));var m=0;null!==u?m=u.count:void 0!==p&&(m=p.count);var v=r.drawRange.start*d,g=r.drawRange.count*d,b=null!==o?o.start*d:0,w=null!==o?o.count*d:1/0,M=Math.max(v,b),S=Math.min(m,v+g,b+w)-1,A=Math.max(0,S-M+1);if(0!==A){if(n.isMesh)if(!0===i.wireframe)_.setLineWidth(i.wireframeLinewidth*lt()),f.setMode(y.LINES);else switch(n.drawMode){case oe:f.setMode(y.TRIANGLES);break;case ae:f.setMode(y.TRIANGLE_STRIP);break;case se:f.setMode(y.TRIANGLE_FAN)}else if(n.isLine){var R=i.linewidth;void 0===R&&(R=1),_.setLineWidth(R*lt()),n.isLineSegments?f.setMode(y.LINES):n.isLineLoop?f.setMode(y.LINE_LOOP):f.setMode(y.LINE_STRIP)}else n.isPoints&&f.setMode(y.POINTS);r&&r.isInstancedBufferGeometry?r.maxInstancedCount>0&&f.renderInstances(r,M,A):f.render(M,A)}},this.compile=function(t,e){p.length=0,d.length=0,t.traverse(function(t){t.isLight&&(p.push(t),t.castShadow&&d.push(t))}),A.setup(p,d,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var r=0;r<e.material.length;r++)St(e.material[r],t.fog,e);else St(e.material,t.fog,e)})};var xt,bt=!1,wt=null;function Mt(t){null!==wt&&wt(t);var e=dt.getDevice();e&&e.isPresenting?e.requestAnimationFrame(Mt):window.requestAnimationFrame(Mt)}function Et(t,e,r,i){for(var n=0,o=t.length;n<o;n++){var a=t[n],s=a.object,c=a.geometry,h=void 0===i?a.material:i,l=a.group;if(r.isArrayCamera){j=r;for(var u=r.cameras,p=0,d=u.length;p<d;p++){var f=u[p];if(s.layers.test(f.layers)){var m=f.bounds,v=m.x*Z,g=m.y*J,y=m.z*Z,x=m.w*J;_.viewport(W.set(v,g,y,x).multiplyScalar(Q)),Tt(s,e,f,c,h,l)}}}else j=null,Tt(s,e,r,c,h,l)}}function Tt(t,e,r,i,n,o){if(t.onBeforeRender(F,e,r,i,n,o),t.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){var a=t.isMesh&&t.matrixWorld.determinant()<0;_.setMaterial(n,a);var s=Lt(r,e.fog,n,t);V="",function(t,e,r){t.render(function(t){F.renderBufferImmediate(t,e,r)})}(t,s,n)}else F.renderBufferDirect(r,e.fog,i,n,t,o);t.onAfterRender(F,e,r,i,n,o)}function St(t,e,r){var i=w.get(t),n=R.getParameters(t,A.state,d,e,it.numPlanes,it.numIntersection,r),o=R.getProgramCode(t,n),a=i.program,s=!0;if(void 0===a)t.addEventListener("dispose",gt);else if(a.code!==o)yt(t);else{if(void 0!==n.shaderID)return;s=!1}if(s){if(n.shaderID){var c=Tn[n.shaderID];i.shader={name:t.type,uniforms:_r.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else i.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(i.shader),a=R.acquireProgram(t,i.shader,n,o),i.program=a,t.program=a}var h=a.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var l=0;l<F.maxMorphTargets;l++)h["morphTarget"+l]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(l=0;l<F.maxMorphNormals;l++)h["morphNormal"+l]>=0&&t.numSupportedMorphNormals++}var u=i.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(i.numClippingPlanes=it.numPlanes,i.numIntersection=it.numIntersection,u.clippingPlanes=it.uniform),i.fog=e,i.lightsHash=A.state.hash,t.lights&&(u.ambientLightColor.value=A.state.ambient,u.directionalLights.value=A.state.directional,u.spotLights.value=A.state.spot,u.rectAreaLights.value=A.state.rectArea,u.pointLights.value=A.state.point,u.hemisphereLights.value=A.state.hemi,u.directionalShadowMap.value=A.state.directionalShadowMap,u.directionalShadowMatrix.value=A.state.directionalShadowMatrix,u.spotShadowMap.value=A.state.spotShadowMap,u.spotShadowMatrix.value=A.state.spotShadowMatrix,u.pointShadowMap.value=A.state.pointShadowMap,u.pointShadowMatrix.value=A.state.pointShadowMatrix);var p=i.program.getUniforms(),f=gr.seqWithValue(p.seq,u);i.uniformsList=f}function Lt(t,e,r,i){Y=0;var n=w.get(r);if(nt&&(ot||t!==k)){var o=t===k&&r.id===H;it.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,t,n,o)}!1===r.needsUpdate&&(void 0===n.program?r.needsUpdate=!0:r.fog&&n.fog!==e?r.needsUpdate=!0:r.lights&&n.lightsHash!==A.state.hash?r.needsUpdate=!0:void 0===n.numClippingPlanes||n.numClippingPlanes===it.numPlanes&&n.numIntersection===it.numIntersection||(r.needsUpdate=!0)),r.needsUpdate&&(St(r,e,i),r.needsUpdate=!1);var a,s,c=!1,h=!1,l=!1,u=n.program,p=u.getUniforms(),d=n.shader.uniforms;if(_.useProgram(u.program)&&(c=!0,h=!0,l=!0),r.id!==H&&(H=r.id,h=!0),c||t!==k){if(p.setValue(y,"projectionMatrix",t.projectionMatrix),b.logarithmicDepthBuffer&&p.setValue(y,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),k!==(j||t)&&(k=j||t,h=!0,l=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.envMap){var f=p.map.cameraPosition;void 0!==f&&f.setValue(y,st.setFromMatrixPosition(t.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&p.setValue(y,"viewMatrix",t.matrixWorldInverse)}if(r.skinning){p.setOptional(y,i,"bindMatrix"),p.setOptional(y,i,"bindMatrixInverse");var m=i.skeleton;if(m){var v=m.bones;if(b.floatVertexTextures){if(void 0===m.boneTexture){var g=Math.sqrt(4*v.length);g=ye.ceilPowerOfTwo(g),g=Math.max(g,4);var x=new Float32Array(g*g*4);x.set(m.boneMatrices);var M=new Le(x,g,g,Nt,At);m.boneMatrices=x,m.boneTexture=M,m.boneTextureSize=g}p.setValue(y,"boneTexture",m.boneTexture),p.setValue(y,"boneTextureSize",m.boneTextureSize)}else p.setOptional(y,m,"boneMatrices")}}return h&&(p.setValue(y,"toneMappingExposure",F.toneMappingExposure),p.setValue(y,"toneMappingWhitePoint",F.toneMappingWhitePoint),r.lights&&(s=l,(a=d).ambientLightColor.needsUpdate=s,a.directionalLights.needsUpdate=s,a.pointLights.needsUpdate=s,a.spotLights.needsUpdate=s,a.rectAreaLights.needsUpdate=s,a.hemisphereLights.needsUpdate=s),e&&r.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(d,e),r.isMeshBasicMaterial?Pt(d,r):r.isMeshLambertMaterial?(Pt(d,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(d,r)):r.isMeshPhongMaterial?(Pt(d,r),r.isMeshToonMaterial?function(t,e){Ct(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(d,r):Ct(d,r)):r.isMeshStandardMaterial?(Pt(d,r),r.isMeshPhysicalMaterial?function(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,It(t,e)}(d,r):It(d,r)):r.isMeshDepthMaterial?(Pt(d,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,r)):r.isMeshDistanceMaterial?(Pt(d,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(d,r)):r.isMeshNormalMaterial?(Pt(d,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(d,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(d,r)):r.isPointsMaterial?function(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*Q,t.scale.value=.5*J,t.map.value=e.map,null!==e.map){if(!0===e.map.matrixAutoUpdate){var r=e.map.offset,i=e.map.repeat,n=e.map.rotation,o=e.map.center;e.map.matrix.setUvTransform(r.x,r.y,i.x,i.y,n,o.x,o.y)}t.uvTransform.value.copy(e.map.matrix)}}(d,r):r.isShadowMaterial&&(d.color.value=r.color,d.opacity.value=r.opacity),void 0!==d.ltcMat&&(d.ltcMat.value=br.LTC_MAT_TEXTURE),void 0!==d.ltcMag&&(d.ltcMag.value=br.LTC_MAG_TEXTURE),gr.upload(y,n.uniformsList,d,F)),p.setValue(y,"modelViewMatrix",i.modelViewMatrix),p.setValue(y,"normalMatrix",i.normalMatrix),p.setValue(y,"modelMatrix",i.matrixWorld),u}function Pt(t,e){var r;if(t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map?r=e.map:e.specularMap?r=e.specularMap:e.displacementMap?r=e.displacementMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.roughnessMap?r=e.roughnessMap:e.metalnessMap?r=e.metalnessMap:e.alphaMap?r=e.alphaMap:e.emissiveMap&&(r=e.emissiveMap),void 0!==r){if(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate){var i=r.offset,n=r.repeat,o=r.rotation,a=r.center;r.matrix.setUvTransform(i.x,i.y,n.x,n.y,o,a.x,a.y)}t.uvTransform.value.copy(r.matrix)}}function Ct(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function It(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}this.animate=function(t){wt=t,function(){if(!bt){var t=dt.getDevice();t&&t.isPresenting?t.requestAnimationFrame(Mt):window.requestAnimationFrame(Mt),bt=!0}}()},this.render=function(t,e,r,i){if(e&&e.isCamera){if(!B){V="",H=-1,k=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),dt.enabled&&(e=dt.getCamera(e)),at.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),rt.setFromMatrix(at),p.length=0,d.length=0,m.length=0,v.length=0,ot=this.localClippingEnabled,nt=it.init(this.clippingPlanes,ot,e),(f=L.get(t,e)).init(),function t(e,r,i){if(!1===e.visible)return;var n=e.layers.test(r.layers);if(n)if(e.isLight)p.push(e),e.castShadow&&d.push(e);else if(e.isSprite)e.frustumCulled&&!rt.intersectsSprite(e)||m.push(e);else if(e.isLensFlare)v.push(e);else if(e.isImmediateRenderObject)i&&st.setFromMatrixPosition(e.matrixWorld).applyMatrix4(at),f.push(e,null,e.material,st.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!e.frustumCulled||rt.intersectsObject(e))){i&&st.setFromMatrixPosition(e.matrixWorld).applyMatrix4(at);var o=S.update(e),a=e.material;if(Array.isArray(a))for(var s=o.groups,c=0,h=s.length;c<h;c++){var l=s[c],u=a[l.materialIndex];u&&u.visible&&f.push(e,o,u,st.z,l)}else a.visible&&f.push(e,o,a,st.z,null)}var g=e.children;for(var c=0,h=g.length;c<h;c++)t(g[c],r,i)}(t,e,F.sortObjects),!0===F.sortObjects&&f.sort(),M.updateVideoTextures(),nt&&it.beginShadows(),ft.render(d,t,e),A.setup(p,d,e),nt&&it.endShadows(),ht.frame++,ht.calls=0,ht.vertices=0,ht.faces=0,ht.points=0,void 0===r&&(r=null),this.setRenderTarget(r),P.render(f,t,e,i);var n=f.opaque,o=f.transparent;if(t.overrideMaterial){var a=t.overrideMaterial;n.length&&Et(n,t,e,a),o.length&&Et(o,t,e,a)}else n.length&&Et(n,t,e),o.length&&Et(o,t,e);N.render(m,t,e),U.render(v,t,e,W),r&&M.updateRenderTargetMipmap(r),_.buffers.depth.setTest(!0),_.buffers.depth.setMask(!0),_.buffers.color.setMask(!0),_.setPolygonOffset(!1),dt.enabled&&dt.submitFrame()}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFaceCulling=function(t,e){_.setCullFace(t),_.setFlipSided(e===s)},this.allocTextureUnit=function(){var t=Y;return t>=b.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+b.maxTextures),Y+=1,t},this.setTexture2D=(xt=!1,function(t,e){t&&t.isWebGLRenderTarget&&(xt||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),xt=!0),t=t.texture),M.setTexture2D(t,e)}),this.setTexture=function(){var t=!1;return function(e,r){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),M.setTexture2D(e,r)}}(),this.setTextureCube=function(){var t=!1;return function(e,r){e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?M.setTextureCube(e,r):M.setTextureCubeDynamic(e,r)}}(),this.getRenderTarget=function(){return z},this.setRenderTarget=function(t){z=t,t&&void 0===w.get(t).__webglFramebuffer&&M.setupRenderTarget(t);var e=null,r=!1;if(t){var i=w.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=i[t.activeCubeFace],r=!0):e=i,W.copy(t.viewport),X.copy(t.scissor),q=t.scissorTest}else W.copy(K).multiplyScalar(Q),X.copy($).multiplyScalar(Q),q=et;if(G!==e&&(y.bindFramebuffer(y.FRAMEBUFFER,e),G=e),_.viewport(W),_.scissor(X),_.setScissorTest(q),r){var n=w.get(t.texture);y.framebufferTexture2D(y.FRAMEBUFFER,y.COLOR_ATTACHMENT0,y.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,n.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,r,i,n,o){if(t&&t.isWebGLRenderTarget){var a=w.get(t).__webglFramebuffer;if(a){var s=!1;a!==G&&(y.bindFramebuffer(y.FRAMEBUFFER,a),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==Nt&&D.convert(h)!==y.getParameter(y.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===_t||D.convert(l)===y.getParameter(y.IMPLEMENTATION_COLOR_READ_TYPE)||l===At&&(x.get("OES_texture_float")||x.get("WEBGL_color_buffer_float"))||l===Rt&&x.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");y.checkFramebufferStatus(y.FRAMEBUFFER)===y.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-i&&r>=0&&r<=t.height-n&&y.readPixels(e,r,i,n,D.convert(h),D.convert(l),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&y.bindFramebuffer(y.FRAMEBUFFER,G)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}}function aa(t,e){this.name="",this.color=new xr(t),this.density=void 0!==e?e:25e-5}function sa(t,e,r){this.name="",this.color=new xr(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3}function ca(){kn.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function ha(t,e,r,i,n){kn.call(this),this.lensFlares=[],this.positionScreen=new we,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,r,i,n)}function la(t){Cn.call(this),this.type="SpriteMaterial",this.color=new xr(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}function ua(t){kn.call(this),this.type="Sprite",this.material=void 0!==t?t:new la}function pa(){kn.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function da(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var r=0,i=this.bones.length;r<i;r++)this.boneInverses.push(new be)}}function fa(){kn.call(this),this.type="Bone"}function ma(t,e){xo.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new be,this.bindMatrixInverse=new be;var r=new da(this.initBones());this.bind(r,this.matrixWorld),this.normalizeSkinWeights()}function va(t){Cn.call(this),this.type="LineBasicMaterial",this.color=new xr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}function ga(t,e,r){if(1===r)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new ya(t,e);kn.call(this),this.type="Line",this.geometry=void 0!==t?t:new co,this.material=void 0!==e?e:new va({color:16777215*Math.random()})}function ya(t,e){ga.call(this,t,e),this.type="LineSegments"}function xa(t,e){ga.call(this,t,e),this.type="LineLoop"}function ba(t){Cn.call(this),this.type="PointsMaterial",this.color=new xr(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}function _a(t,e){kn.call(this),this.type="Points",this.geometry=void 0!==t?t:new co,this.material=void 0!==e?e:new ba({color:16777215*Math.random()})}function wa(){kn.call(this),this.type="Group"}function Ma(t,e,r,i,n,o,a,s,c){Te.call(this,t,e,r,i,n,o,a,s,c),this.generateMipmaps=!1;var h=this;t.addEventListener("loadeddata",function e(){t.removeEventListener("loadeddata",e,!1),h.needsUpdate=!0},!1)}function Ea(t,e,r,i,n,o,a,s,c,h,l,u){Te.call(this,null,o,a,s,c,h,i,n,l,u),this.image={width:e,height:r},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function Ta(t,e,r,i,n,o,a,s,c,h){if((h=void 0!==h?h:zt)!==zt&&h!==Gt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&h===zt&&(r=Et),void 0===r&&h===Gt&&(r=It),Te.call(this,null,i,n,o,a,s,h,r,c),this.image={width:t,height:e},this.magFilter=void 0!==a?a:mt,this.minFilter=void 0!==s?s:mt,this.flipY=!1,this.generateMipmaps=!1}function Sa(t){co.call(this),this.type="WireframeGeometry";var e,r,i,n,o,a,s,c,h,l,u=[],p=[0,0],d={},f=["a","b","c"];if(t&&t.isGeometry){var m=t.faces;for(e=0,i=m.length;e<i;e++){var v=m[e];for(r=0;r<3;r++)s=v[f[r]],c=v[f[(r+1)%3]],p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[h=p[0]+","+p[1]]&&(d[h]={index1:p[0],index2:p[1]})}for(h in d)a=d[h],l=t.vertices[a.index1],u.push(l.x,l.y,l.z),l=t.vertices[a.index2],u.push(l.x,l.y,l.z)}else if(t&&t.isBufferGeometry){var g,y,x,b,_,w,M;if(l=new we,null!==t.index){for(g=t.attributes.position,y=t.index,0===(x=t.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),n=0,o=x.length;n<o;++n)for(e=_=(b=x[n]).start,i=_+b.count;e<i;e+=3)for(r=0;r<3;r++)s=y.getX(e+r),c=y.getX(e+(r+1)%3),p[0]=Math.min(s,c),p[1]=Math.max(s,c),void 0===d[h=p[0]+","+p[1]]&&(d[h]={index1:p[0],index2:p[1]});for(h in d)a=d[h],l.fromBufferAttribute(g,a.index1),u.push(l.x,l.y,l.z),l.fromBufferAttribute(g,a.index2),u.push(l.x,l.y,l.z)}else for(e=0,i=(g=t.attributes.position).count/3;e<i;e++)for(r=0;r<3;r++)w=3*e+r,l.fromBufferAttribute(g,w),u.push(l.x,l.y,l.z),M=3*e+(r+1)%3,l.fromBufferAttribute(g,M),u.push(l.x,l.y,l.z)}this.addAttribute("position",new io(u,3))}function Aa(t,e,r){Yn.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:r},this.fromBufferGeometry(new Ra(t,e,r)),this.mergeVertices()}function Ra(t,e,r){co.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:r};var i,n,o=[],a=[],s=[],c=[],h=new we,l=new we,u=new we,p=new we,d=new we,f=e+1;for(i=0;i<=r;i++){var m=i/r;for(n=0;n<=e;n++){var v=n/e;l=t(v,m,l),a.push(l.x,l.y,l.z),v-1e-5>=0?(u=t(v-1e-5,m,u),p.subVectors(l,u)):(u=t(v+1e-5,m,u),p.subVectors(u,l)),m-1e-5>=0?(u=t(v,m-1e-5,u),d.subVectors(l,u)):(u=t(v,m+1e-5,u),d.subVectors(u,l)),h.crossVectors(p,d).normalize(),s.push(h.x,h.y,h.z),c.push(v,m)}}for(i=0;i<r;i++)for(n=0;n<e;n++){var g=i*f+n,y=i*f+n+1,x=(i+1)*f+n+1,b=(i+1)*f+n;o.push(g,y,b),o.push(y,x,b)}this.setIndex(o),this.addAttribute("position",new io(a,3)),this.addAttribute("normal",new io(s,3)),this.addAttribute("uv",new io(c,2))}function La(t,e,r,i){Yn.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:i},this.fromBufferGeometry(new Pa(t,e,r,i)),this.mergeVertices()}function Pa(t,e,r,i){co.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:i},r=r||1;var n=[],o=[];function a(t,e,r,i){var n,o,a=Math.pow(2,i),c=[];for(n=0;n<=a;n++){c[n]=[];var h=t.clone().lerp(r,n/a),l=e.clone().lerp(r,n/a),u=a-n;for(o=0;o<=u;o++)c[n][o]=0===o&&n===a?h:h.clone().lerp(l,o/u)}for(n=0;n<a;n++)for(o=0;o<2*(a-n)-1;o++){var p=Math.floor(o/2);o%2==0?(s(c[n][p+1]),s(c[n+1][p]),s(c[n][p])):(s(c[n][p+1]),s(c[n+1][p+1]),s(c[n+1][p]))}}function s(t){n.push(t.x,t.y,t.z)}function c(e,r){var i=3*e;r.x=t[i+0],r.y=t[i+1],r.z=t[i+2]}function h(t,e,r,i){i<0&&1===t.x&&(o[e]=t.x-1),0===r.x&&0===r.z&&(o[e]=i/2/Math.PI+.5)}function l(t){return Math.atan2(t.z,-t.x)}!function(t){for(var r=new we,i=new we,n=new we,o=0;o<e.length;o+=3)c(e[o+0],r),c(e[o+1],i),c(e[o+2],n),a(r,i,n,t)}(i=i||0),function(t){for(var e=new we,r=0;r<n.length;r+=3)e.x=n[r+0],e.y=n[r+1],e.z=n[r+2],e.normalize().multiplyScalar(t),n[r+0]=e.x,n[r+1]=e.y,n[r+2]=e.z}(r),function(){for(var t=new we,e=0;e<n.length;e+=3){t.x=n[e+0],t.y=n[e+1],t.z=n[e+2];var r=l(t)/2/Math.PI+.5,i=(a=t,Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5);o.push(r,1-i)}var a;(function(){for(var t=new we,e=new we,r=new we,i=new we,a=new xe,s=new xe,c=new xe,u=0,p=0;u<n.length;u+=9,p+=6){t.set(n[u+0],n[u+1],n[u+2]),e.set(n[u+3],n[u+4],n[u+5]),r.set(n[u+6],n[u+7],n[u+8]),a.set(o[p+0],o[p+1]),s.set(o[p+2],o[p+3]),c.set(o[p+4],o[p+5]),i.copy(t).add(e).add(r).divideScalar(3);var d=l(i);h(a,p+0,t,d),h(s,p+2,e,d),h(c,p+4,r,d)}})(),function(){for(var t=0;t<o.length;t+=6){var e=o[t+0],r=o[t+2],i=o[t+4],n=Math.max(e,r,i),a=Math.min(e,r,i);n>.9&&a<.1&&(e<.2&&(o[t+0]+=1),r<.2&&(o[t+2]+=1),i<.2&&(o[t+4]+=1))}}()}(),this.addAttribute("position",new io(n,3)),this.addAttribute("normal",new io(n.slice(),3)),this.addAttribute("uv",new io(o,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}function Ca(t,e){Yn.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ia(t,e)),this.mergeVertices()}function Ia(t,e){Pa.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Oa(t,e){Yn.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ua(t,e)),this.mergeVertices()}function Ua(t,e){Pa.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Na(t,e){Yn.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Da(t,e)),this.mergeVertices()}function Da(t,e){var r=(1+Math.sqrt(5))/2,i=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];Pa.call(this,i,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Fa(t,e){Yn.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ba(t,e)),this.mergeVertices()}function Ba(t,e){var r=(1+Math.sqrt(5))/2,i=1/r,n=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i];Pa.call(this,n,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function za(t,e,r,i,n,o){Yn.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:i,closed:n},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new Ga(t,e,r,i,n);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}function Ga(t,e,r,i,n){co.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:i,closed:n},e=e||64,r=r||1,i=i||8,n=n||!1;var o=t.computeFrenetFrames(e,n);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;var a,s,c=new we,h=new we,l=new xe,u=new we,p=[],d=[],f=[],m=[];function v(n){u=t.getPointAt(n/e,u);var a=o.normals[n],l=o.binormals[n];for(s=0;s<=i;s++){var f=s/i*Math.PI*2,m=Math.sin(f),v=-Math.cos(f);h.x=v*a.x+m*l.x,h.y=v*a.y+m*l.y,h.z=v*a.z+m*l.z,h.normalize(),d.push(h.x,h.y,h.z),c.x=u.x+r*h.x,c.y=u.y+r*h.y,c.z=u.z+r*h.z,p.push(c.x,c.y,c.z)}}!function(){for(a=0;a<e;a++)v(a);v(!1===n?e:0),function(){for(a=0;a<=e;a++)for(s=0;s<=i;s++)l.x=a/e,l.y=s/i,f.push(l.x,l.y)}(),function(){for(s=1;s<=e;s++)for(a=1;a<=i;a++){var t=(i+1)*(s-1)+(a-1),r=(i+1)*s+(a-1),n=(i+1)*s+a,o=(i+1)*(s-1)+a;m.push(t,r,o),m.push(r,n,o)}}()}(),this.setIndex(m),this.addAttribute("position",new io(p,3)),this.addAttribute("normal",new io(d,3)),this.addAttribute("uv",new io(f,2))}function Ha(t,e,r,i,n,o,a){Yn.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:i,p:n,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Va(t,e,r,i,n,o)),this.mergeVertices()}function Va(t,e,r,i,n,o){co.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:i,p:n,q:o},t=t||1,e=e||.4,r=Math.floor(r)||64,i=Math.floor(i)||8,n=n||2,o=o||3;var a,s,c=[],h=[],l=[],u=[],p=new we,d=new we,f=new we,m=new we,v=new we,g=new we,y=new we;for(a=0;a<=r;++a){var x=a/r*n*Math.PI*2;for(A(x,n,o,t,f),A(x+.01,n,o,t,m),g.subVectors(m,f),y.addVectors(m,f),v.crossVectors(g,y),y.crossVectors(v,g),v.normalize(),y.normalize(),s=0;s<=i;++s){var b=s/i*Math.PI*2,_=-e*Math.cos(b),w=e*Math.sin(b);p.x=f.x+(_*y.x+w*v.x),p.y=f.y+(_*y.y+w*v.y),p.z=f.z+(_*y.z+w*v.z),h.push(p.x,p.y,p.z),d.subVectors(p,f).normalize(),l.push(d.x,d.y,d.z),u.push(a/r),u.push(s/i)}}for(s=1;s<=r;s++)for(a=1;a<=i;a++){var M=(i+1)*(s-1)+(a-1),E=(i+1)*s+(a-1),T=(i+1)*s+a,S=(i+1)*(s-1)+a;c.push(M,E,S),c.push(E,T,S)}function A(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t),s=r/e*t,c=Math.cos(s);n.x=i*(2+c)*.5*o,n.y=i*(2+c)*a*.5,n.z=i*Math.sin(s)*.5}this.setIndex(c),this.addAttribute("position",new io(h,3)),this.addAttribute("normal",new io(l,3)),this.addAttribute("uv",new io(u,2))}function ka(t,e,r,i,n){Yn.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},this.fromBufferGeometry(new ja(t,e,r,i,n)),this.mergeVertices()}function ja(t,e,r,i,n){co.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||1,e=e||.4,r=Math.floor(r)||8,i=Math.floor(i)||6,n=n||2*Math.PI;var o,a,s=[],c=[],h=[],l=[],u=new we,p=new we,d=new we;for(o=0;o<=r;o++)for(a=0;a<=i;a++){var f=a/i*n,m=o/r*Math.PI*2;p.x=(t+e*Math.cos(m))*Math.cos(f),p.y=(t+e*Math.cos(m))*Math.sin(f),p.z=e*Math.sin(m),c.push(p.x,p.y,p.z),u.x=t*Math.cos(f),u.y=t*Math.sin(f),d.subVectors(p,u).normalize(),h.push(d.x,d.y,d.z),l.push(a/i),l.push(o/r)}for(o=1;o<=r;o++)for(a=1;a<=i;a++){var v=(i+1)*o+a-1,g=(i+1)*(o-1)+a-1,y=(i+1)*(o-1)+a,x=(i+1)*o+a;s.push(v,g,x),s.push(g,y,x)}this.setIndex(s),this.addAttribute("position",new io(c,3)),this.addAttribute("normal",new io(h,3)),this.addAttribute("uv",new io(l,2))}$o.prototype=Object.assign(Object.create(jn.prototype),{constructor:$o,isPerspectiveCamera:!0,copy:function(t,e){return jn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*ye.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*ye.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*ye.RAD2DEG*Math.atan(Math.tan(.5*ye.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,r,i,n,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=r,this.view.offsetY=i,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*ye.DEG2RAD*this.fov)/this.zoom,r=2*e,i=this.aspect*r,n=-.5*i,o=this.view;if(null!==this.view&&this.view.enabled){var a=o.fullWidth,s=o.fullHeight;n+=o.offsetX*i/a,e-=o.offsetY*r/s,i*=o.width/a,r*=o.height/s}var c=this.filmOffset;0!==c&&(n+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+i,e,e-r,t,this.far)},toJSON:function(t){var e=kn.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),ta.prototype=Object.assign(Object.create($o.prototype),{constructor:ta,isArrayCamera:!0}),aa.prototype.isFogExp2=!0,aa.prototype.clone=function(){return new aa(this.color.getHex(),this.density)},aa.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},sa.prototype.isFog=!0,sa.prototype.clone=function(){return new sa(this.color.getHex(),this.near,this.far)},sa.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},ca.prototype=Object.assign(Object.create(kn.prototype),{constructor:ca,copy:function(t,e){return kn.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=kn.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),ha.prototype=Object.assign(Object.create(kn.prototype),{constructor:ha,isLensFlare:!0,copy:function(t){kn.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,r=t.lensFlares.length;e<r;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new xr(16777215)),void 0===i&&(i=_),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:n,blending:i})},updateLensFlares:function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<r;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),la.prototype=Object.create(Cn.prototype),la.prototype.constructor=la,la.prototype.isSpriteMaterial=!0,la.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},ua.prototype=Object.assign(Object.create(kn.prototype),{constructor:ua,isSprite:!0,raycast:function(){var t=new we,e=new we,r=new we;return function(i,n){e.setFromMatrixPosition(this.matrixWorld),i.ray.closestPointToPoint(e,t),r.setFromMatrixScale(this.matrixWorld);var o=r.x*r.y/4;if(!(e.distanceToSquared(t)>o)){var a=i.ray.origin.distanceTo(t);a<i.near||a>i.far||n.push({distance:a,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),pa.prototype=Object.assign(Object.create(kn.prototype),{constructor:pa,copy:function(t){kn.prototype.copy.call(this,t,!1);for(var e=t.levels,r=0,i=e.length;r<i;r++){var n=e[r];this.addLevel(n.object.clone(),n.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=this.levels,i=0;i<r.length&&!(e<r[i].distance);i++);r.splice(i,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,r=1,i=e.length;r<i&&!(t<e[r].distance);r++);return e[r-1].object},raycast:function(){var t=new we;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.origin.distanceTo(t);this.getObjectForDistance(i).raycast(e,r)}}(),update:function(){var t=new we,e=new we;return function(r){var i=this.levels;if(i.length>1){t.setFromMatrixPosition(r.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var n=t.distanceTo(e);i[0].object.visible=!0;for(var o=1,a=i.length;o<a&&n>=i[o].distance;o++)i[o-1].object.visible=!1,i[o].object.visible=!0;for(;o<a;o++)i[o].object.visible=!1}}}(),toJSON:function(t){var e=kn.prototype.toJSON.call(this,t);e.object.levels=[];for(var r=this.levels,i=0,n=r.length;i<n;i++){var o=r[i];e.object.levels.push({object:o.object.uuid,distance:o.distance})}return e}}),Object.assign(da.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new be;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},pose:function(){var t,e,r;for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new be,e=new be;return function(){for(var r=this.bones,i=this.boneInverses,n=this.boneMatrices,o=this.boneTexture,a=0,s=r.length;a<s;a++){var c=r[a]?r[a].matrixWorld:e;t.multiplyMatrices(c,i[a]),t.toArray(n,16*a)}void 0!==o&&(o.needsUpdate=!0)}}(),clone:function(){return new da(this.bones,this.boneInverses)}}),fa.prototype=Object.assign(Object.create(kn.prototype),{constructor:fa,isBone:!0}),ma.prototype=Object.assign(Object.create(xo.prototype),{constructor:ma,isSkinnedMesh:!0,initBones:function(){var t,e,r,i,n=[];if(this.geometry&&void 0!==this.geometry.bones){for(r=0,i=this.geometry.bones.length;r<i;r++)e=this.geometry.bones[r],t=new fa,n.push(t),t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);for(r=0,i=this.geometry.bones.length;r<i;r++)-1!==(e=this.geometry.bones[r]).parent&&null!==e.parent&&void 0!==n[e.parent]?n[e.parent].add(n[r]):this.add(n[r])}return this.updateMatrixWorld(!0),n},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var r=this.geometry.skinWeights[e];(t=1/r.manhattanLength())!==1/0?r.multiplyScalar(t):r.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var i=new Se,n=this.geometry.attributes.skinWeight;for(e=0;e<n.count;e++)i.x=n.getX(e),i.y=n.getY(e),i.z=n.getZ(e),i.w=n.getW(e),(t=1/i.manhattanLength())!==1/0?i.multiplyScalar(t):i.set(1,0,0,0),n.setXYZW(e,i.x,i.y,i.z,i.w)}},updateMatrixWorld:function(t){xo.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),va.prototype=Object.create(Cn.prototype),va.prototype.constructor=va,va.prototype.isLineBasicMaterial=!0,va.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},ga.prototype=Object.assign(Object.create(kn.prototype),{constructor:ga,isLine:!0,raycast:function(){var t=new be,e=new vo,r=new Nn;return function(i,n){var o=i.linePrecision,a=o*o,s=this.geometry,c=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(c),!1!==i.ray.intersectsSphere(r)){t.getInverse(c),e.copy(i.ray).applyMatrix4(t);var h=new we,l=new we,u=new we,p=new we,d=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var f=s.index,m=s.attributes.position.array;if(null!==f)for(var v=f.array,g=0,y=v.length-1;g<y;g+=d){var x=v[g],b=v[g+1];if(h.fromArray(m,3*x),l.fromArray(m,3*b),!(e.distanceSqToSegment(h,l,p,u)>a))p.applyMatrix4(this.matrixWorld),(M=i.ray.origin.distanceTo(p))<i.near||M>i.far||n.push({distance:M,point:u.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}else for(g=0,y=m.length/3-1;g<y;g+=d){if(h.fromArray(m,3*g),l.fromArray(m,3*g+3),!(e.distanceSqToSegment(h,l,p,u)>a))p.applyMatrix4(this.matrixWorld),(M=i.ray.origin.distanceTo(p))<i.near||M>i.far||n.push({distance:M,point:u.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}else if(s.isGeometry){var _=s.vertices,w=_.length;for(g=0;g<w-1;g+=d){var M;if(!(e.distanceSqToSegment(_[g],_[g+1],p,u)>a))p.applyMatrix4(this.matrixWorld),(M=i.ray.origin.distanceTo(p))<i.near||M>i.far||n.push({distance:M,point:u.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),ya.prototype=Object.assign(Object.create(ga.prototype),{constructor:ya,isLineSegments:!0}),xa.prototype=Object.assign(Object.create(ga.prototype),{constructor:xa,isLineLoop:!0}),ba.prototype=Object.create(Cn.prototype),ba.prototype.constructor=ba,ba.prototype.isPointsMaterial=!0,ba.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},_a.prototype=Object.assign(Object.create(kn.prototype),{constructor:_a,isPoints:!0,raycast:function(){var t=new be,e=new vo,r=new Nn;return function(i,n){var o=this,a=this.geometry,s=this.matrixWorld,c=i.params.Points.threshold;if(null===a.boundingSphere&&a.computeBoundingSphere(),r.copy(a.boundingSphere),r.applyMatrix4(s),r.radius+=c,!1!==i.ray.intersectsSphere(r)){t.getInverse(s),e.copy(i.ray).applyMatrix4(t);var h=c/((this.scale.x+this.scale.y+this.scale.z)/3),l=h*h,u=new we;if(a.isBufferGeometry){var p=a.index,d=a.attributes.position.array;if(null!==p)for(var f=p.array,m=0,v=f.length;m<v;m++){var g=f[m];u.fromArray(d,3*g),b(u,g)}else{m=0;for(var y=d.length/3;m<y;m++)u.fromArray(d,3*m),b(u,m)}}else{var x=a.vertices;for(m=0,y=x.length;m<y;m++)b(x[m],m)}}function b(t,r){var a=e.distanceSqToPoint(t);if(a<l){var c=e.closestPointToPoint(t);c.applyMatrix4(s);var h=i.ray.origin.distanceTo(c);if(h<i.near||h>i.far)return;n.push({distance:h,distanceToRay:Math.sqrt(a),point:c.clone(),index:r,face:null,object:o})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),wa.prototype=Object.assign(Object.create(kn.prototype),{constructor:wa,isGroup:!0}),Ma.prototype=Object.assign(Object.create(Te.prototype),{constructor:Ma,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Ea.prototype=Object.create(Te.prototype),Ea.prototype.constructor=Ea,Ea.prototype.isCompressedTexture=!0,Ta.prototype=Object.create(Te.prototype),Ta.prototype.constructor=Ta,Ta.prototype.isDepthTexture=!0,Sa.prototype=Object.create(co.prototype),Sa.prototype.constructor=Sa,Aa.prototype=Object.create(Yn.prototype),Aa.prototype.constructor=Aa,Ra.prototype=Object.create(co.prototype),Ra.prototype.constructor=Ra,La.prototype=Object.create(Yn.prototype),La.prototype.constructor=La,Pa.prototype=Object.create(co.prototype),Pa.prototype.constructor=Pa,Ca.prototype=Object.create(Yn.prototype),Ca.prototype.constructor=Ca,Ia.prototype=Object.create(Pa.prototype),Ia.prototype.constructor=Ia,Oa.prototype=Object.create(Yn.prototype),Oa.prototype.constructor=Oa,Ua.prototype=Object.create(Pa.prototype),Ua.prototype.constructor=Ua,Na.prototype=Object.create(Yn.prototype),Na.prototype.constructor=Na,Da.prototype=Object.create(Pa.prototype),Da.prototype.constructor=Da,Fa.prototype=Object.create(Yn.prototype),Fa.prototype.constructor=Fa,Ba.prototype=Object.create(Pa.prototype),Ba.prototype.constructor=Ba,za.prototype=Object.create(Yn.prototype),za.prototype.constructor=za,Ga.prototype=Object.create(co.prototype),Ga.prototype.constructor=Ga,Ha.prototype=Object.create(Yn.prototype),Ha.prototype.constructor=Ha,Va.prototype=Object.create(co.prototype),Va.prototype.constructor=Va,ka.prototype=Object.create(Yn.prototype),ka.prototype.constructor=ka,ja.prototype=Object.create(co.prototype),ja.prototype.constructor=ja;var Wa={triangulate:function(t,e,r){r=r||2;var i,n,o,a,s,c,h,l=e&&e.length,u=l?e[0]*r:t.length,p=Xa(t,0,u,r,!0),d=[];if(!p)return d;if(l&&(p=$a(t,e,p,r)),t.length>80*r){i=o=t[0],n=a=t[1];for(var f=r;f<u;f+=r)(s=t[f])<i&&(i=s),(c=t[f+1])<n&&(n=c),s>o&&(o=s),c>a&&(a=c);h=0!==(h=Math.max(o-i,a-n))?1/h:0}return Ya(p,d,r,i,n,h),d}};function Xa(t,e,r,i,n){var o,a;if(n===xs(t,e,r,i)>0)for(o=e;o<r;o+=i)a=vs(o,t[o],t[o+1],a);else for(o=r-i;o>=e;o-=i)a=vs(o,t[o],t[o+1],a);return a&&ls(a,a.next)&&(gs(a),a=a.next),a}function qa(t,e){if(!t)return t;e||(e=t);var r,i=t;do{if(r=!1,i.steiner||!ls(i,i.next)&&0!==hs(i.prev,i,i.next))i=i.next;else{if(gs(i),(i=e=i.prev)===i.next)break;r=!0}}while(r||i!==e);return e}function Ya(t,e,r,i,n,o,a){if(t){!a&&o&&is(t,i,n,o);for(var s,c,h=t;t.prev!==t.next;)if(s=t.prev,c=t.next,o?Ja(t,i,n,o):Za(t))e.push(s.i/r),e.push(t.i/r),e.push(c.i/r),gs(t),t=c.next,h=c.next;else if((t=c)===h){a?1===a?Ya(t=Qa(t,e,r),e,r,i,n,o,2):2===a&&Ka(t,e,r,i,n,o):Ya(qa(t),e,r,i,n,o,1);break}}}function Za(t){var e=t.prev,r=t,i=t.next;if(hs(e,r,i)>=0)return!1;for(var n=t.next.next;n!==t.prev;){if(ss(e.x,e.y,r.x,r.y,i.x,i.y,n.x,n.y)&&hs(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function Ja(t,e,r,i){var n=t.prev,o=t,a=t.next;if(hs(n,o,a)>=0)return!1;for(var s=n.x<o.x?n.x<a.x?n.x:a.x:o.x<a.x?o.x:a.x,c=n.y<o.y?n.y<a.y?n.y:a.y:o.y<a.y?o.y:a.y,h=n.x>o.x?n.x>a.x?n.x:a.x:o.x>a.x?o.x:a.x,l=n.y>o.y?n.y>a.y?n.y:a.y:o.y>a.y?o.y:a.y,u=os(s,c,e,r,i),p=os(h,l,e,r,i),d=t.nextZ;d&&d.z<=p;){if(d!==t.prev&&d!==t.next&&ss(n.x,n.y,o.x,o.y,a.x,a.y,d.x,d.y)&&hs(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=t.prevZ;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&ss(n.x,n.y,o.x,o.y,a.x,a.y,d.x,d.y)&&hs(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function Qa(t,e,r){var i=t;do{var n=i.prev,o=i.next.next;!ls(n,o)&&us(n,i,i.next,o)&&ds(n,o)&&ds(o,n)&&(e.push(n.i/r),e.push(i.i/r),e.push(o.i/r),gs(i),gs(i.next),i=t=o),i=i.next}while(i!==t);return i}function Ka(t,e,r,i,n,o){var a=t;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&cs(a,s)){var c=ms(a,s);return a=qa(a,a.next),c=qa(c,c.next),Ya(a,e,r,i,n,o),void Ya(c,e,r,i,n,o)}s=s.next}a=a.next}while(a!==t)}function $a(t,e,r,i){var n,o,a,s=[];for(n=0,o=e.length;n<o;n++)(a=Xa(t,e[n]*i,n<o-1?e[n+1]*i:t.length,i,!1))===a.next&&(a.steiner=!0),s.push(as(a));for(s.sort(ts),n=0;n<s.length;n++)es(s[n],r),r=qa(r,r.next);return r}function ts(t,e){return t.x-e.x}function es(t,e){if(e=rs(t,e)){var r=ms(e,t);qa(r,r.next)}}function rs(t,e){var r,i=e,n=t.x,o=t.y,a=-1/0;do{if(o<=i.y&&o>=i.next.y&&i.next.y!==i.y){var s=i.x+(o-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(s<=n&&s>a){if(a=s,s===n){if(o===i.y)return i;if(o===i.next.y)return i.next}r=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!r)return null;if(n===a)return r.prev;var c,h=r,l=r.x,u=r.y,p=1/0;for(i=r.next;i!==h;)n>=i.x&&i.x>=l&&n!==i.x&&ss(o<u?n:a,o,l,u,o<u?a:n,o,i.x,i.y)&&((c=Math.abs(o-i.y)/(n-i.x))<p||c===p&&i.x>r.x)&&ds(i,t)&&(r=i,p=c),i=i.next;return r}function is(t,e,r,i){var n=t;do{null===n.z&&(n.z=os(n.x,n.y,e,r,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next}while(n!==t);n.prevZ.nextZ=null,n.prevZ=null,ns(n)}function ns(t){var e,r,i,n,o,a,s,c,h=1;do{for(r=t,t=null,o=null,a=0;r;){for(a++,i=r,s=0,e=0;e<h&&(s++,i=i.nextZ);e++);for(c=h;s>0||c>0&&i;)0!==s&&(0===c||!i||r.z<=i.z)?(n=r,r=r.nextZ,s--):(n=i,i=i.nextZ,c--),o?o.nextZ=n:t=n,n.prevZ=o,o=n;r=i}o.nextZ=null,h*=2}while(a>1);return t}function os(t,e,r,i,n){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*n)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*n)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function as(t){var e=t,r=t;do{e.x<r.x&&(r=e),e=e.next}while(e!==t);return r}function ss(t,e,r,i,n,o,a,s){return(n-a)*(e-s)-(t-a)*(o-s)>=0&&(t-a)*(i-s)-(r-a)*(e-s)>=0&&(r-a)*(o-s)-(n-a)*(i-s)>=0}function cs(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!ps(t,e)&&ds(t,e)&&ds(e,t)&&fs(t,e)}function hs(t,e,r){return(e.y-t.y)*(r.x-e.x)-(e.x-t.x)*(r.y-e.y)}function ls(t,e){return t.x===e.x&&t.y===e.y}function us(t,e,r,i){return!!(ls(t,e)&&ls(r,i)||ls(t,i)&&ls(r,e))||hs(t,e,r)>0!=hs(t,e,i)>0&&hs(r,i,t)>0!=hs(r,i,e)>0}function ps(t,e){var r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==e.i&&r.next.i!==e.i&&us(r,r.next,t,e))return!0;r=r.next}while(r!==t);return!1}function ds(t,e){return hs(t.prev,t,t.next)<0?hs(t,e,t.next)>=0&&hs(t,t.prev,e)>=0:hs(t,e,t.prev)<0||hs(t,t.next,e)<0}function fs(t,e){var r=t,i=!1,n=(t.x+e.x)/2,o=(t.y+e.y)/2;do{r.y>o!=r.next.y>o&&r.next.y!==r.y&&n<(r.next.x-r.x)*(o-r.y)/(r.next.y-r.y)+r.x&&(i=!i),r=r.next}while(r!==t);return i}function ms(t,e){var r=new ys(t.i,t.x,t.y),i=new ys(e.i,e.x,e.y),n=t.next,o=e.prev;return t.next=e,e.prev=t,r.next=n,n.prev=r,i.next=r,r.prev=i,o.next=i,i.prev=o,i}function vs(t,e,r,i){var n=new ys(t,e,r);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function gs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ys(t,e,r){this.i=t,this.x=e,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function xs(t,e,r,i){for(var n=0,o=e,a=r-i;o<r;o+=i)n+=(t[a]-t[o])*(t[o+1]+t[a+1]),a=o;return n}var bs={area:function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r},isClockWise:function(t){return bs.area(t)<0},triangulateShape:function(t,e){function r(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function i(t,e){for(var r=0;r<e.length;r++)t.push(e[r].x),t.push(e[r].y)}var n=[],o=[],a=[];r(t),i(n,t);var s=t.length;for(e.forEach(r),h=0;h<e.length;h++)o.push(s),s+=e[h].length,i(n,e[h]);for(var c=Wa.triangulate(n,o),h=0;h<c.length;h+=3)a.push(c.slice(h,h+3));return a}};function _s(t,e){Yn.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new ws(t,e)),this.mergeVertices()}function ws(t,e){void 0!==t&&(co.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}function Ms(t,e){Yn.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Es(t,e)),this.mergeVertices()}function Es(t,e){var r=(e=e||{}).font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Yn;var i=r.generateShapes(t,e.size,e.curveSegments);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),ws.call(this,i,e),this.type="TextBufferGeometry"}function Ts(t,e,r,i,n,o,a){Yn.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new Ss(t,e,r,i,n,o,a)),this.mergeVertices()}function Ss(t,e,r,i,n,o,a){co.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||1,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;var s,c,h=(o=void 0!==o?o:0)+(a=void 0!==a?a:Math.PI),l=0,u=[],p=new we,d=new we,f=[],m=[],v=[],g=[];for(c=0;c<=r;c++){var y=[],x=c/r;for(s=0;s<=e;s++){var b=s/e;p.x=-t*Math.cos(i+b*n)*Math.sin(o+x*a),p.y=t*Math.cos(o+x*a),p.z=t*Math.sin(i+b*n)*Math.sin(o+x*a),m.push(p.x,p.y,p.z),d.set(p.x,p.y,p.z).normalize(),v.push(d.x,d.y,d.z),g.push(b,1-x),y.push(l++)}u.push(y)}for(c=0;c<r;c++)for(s=0;s<e;s++){var _=u[c][s+1],w=u[c][s],M=u[c+1][s],E=u[c+1][s+1];(0!==c||o>0)&&f.push(_,w,E),(c!==r-1||h<Math.PI)&&f.push(w,M,E)}this.setIndex(f),this.addAttribute("position",new io(m,3)),this.addAttribute("normal",new io(v,3)),this.addAttribute("uv",new io(g,2))}function As(t,e,r,i,n,o){Yn.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new Rs(t,e,r,i,n,o)),this.mergeVertices()}function Rs(t,e,r,i,n,o){co.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},t=t||.5,e=e||1,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var a,s,c,h=[],l=[],u=[],p=[],d=t,f=(e-t)/(i=void 0!==i?Math.max(1,i):1),m=new we,v=new xe;for(s=0;s<=i;s++){for(c=0;c<=r;c++)a=n+c/r*o,m.x=d*Math.cos(a),m.y=d*Math.sin(a),l.push(m.x,m.y,m.z),u.push(0,0,1),v.x=(m.x/e+1)/2,v.y=(m.y/e+1)/2,p.push(v.x,v.y);d+=f}for(s=0;s<i;s++){var g=s*(r+1);for(c=0;c<r;c++){var y=a=c+g,x=a+r+1,b=a+r+2,_=a+1;h.push(y,x,_),h.push(x,b,_)}}this.setIndex(h),this.addAttribute("position",new io(l,3)),this.addAttribute("normal",new io(u,3)),this.addAttribute("uv",new io(p,2))}function Ls(t,e,r,i){Yn.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},this.fromBufferGeometry(new Ps(t,e,r,i)),this.mergeVertices()}function Ps(t,e,r,i){co.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},e=Math.floor(e)||12,r=r||0,i=i||2*Math.PI,i=ye.clamp(i,0,2*Math.PI);var n,o,a,s=[],c=[],h=[],l=1/e,u=new we,p=new xe;for(o=0;o<=e;o++){var d=r+o*l*i,f=Math.sin(d),m=Math.cos(d);for(a=0;a<=t.length-1;a++)u.x=t[a].x*f,u.y=t[a].y,u.z=t[a].x*m,c.push(u.x,u.y,u.z),p.x=o/e,p.y=a/(t.length-1),h.push(p.x,p.y)}for(o=0;o<e;o++)for(a=0;a<t.length-1;a++){var v=n=a+o*t.length,g=n+t.length,y=n+t.length+1,x=n+1;s.push(v,g,x),s.push(g,y,x)}if(this.setIndex(s),this.addAttribute("position",new io(c,3)),this.addAttribute("uv",new io(h,2)),this.computeVertexNormals(),i===2*Math.PI){var b=this.attributes.normal.array,_=new we,w=new we,M=new we;for(n=e*t.length*3,o=0,a=0;o<t.length;o++,a+=3)_.x=b[a+0],_.y=b[a+1],_.z=b[a+2],w.x=b[n+a+0],w.y=b[n+a+1],w.z=b[n+a+2],M.addVectors(_,w).normalize(),b[a+0]=b[n+a+0]=M.x,b[a+1]=b[n+a+1]=M.y,b[a+2]=b[n+a+2]=M.z}}function Cs(t,e){Yn.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Is(t,e)),this.mergeVertices()}function Is(t,e){co.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var r=[],i=[],n=[],o=[],a=0,s=0;if(!1===Array.isArray(t))h(t);else for(var c=0;c<t.length;c++)h(t[c]),this.addGroup(a,s,c),a+=s,s=0;function h(t){var a,c,h,l=i.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;if(!1===bs.isClockWise(p))for(p=p.reverse(),a=0,c=d.length;a<c;a++)h=d[a],!0===bs.isClockWise(h)&&(d[a]=h.reverse());var f=bs.triangulateShape(p,d);for(a=0,c=d.length;a<c;a++)h=d[a],p=p.concat(h);for(a=0,c=p.length;a<c;a++){var m=p[a];i.push(m.x,m.y,0),n.push(0,0,1),o.push(m.x,m.y)}for(a=0,c=f.length;a<c;a++){var v=f[a],g=v[0]+l,y=v[1]+l,x=v[2]+l;r.push(g,y,x),s+=3}}this.setIndex(r),this.addAttribute("position",new io(i,3)),this.addAttribute("normal",new io(n,3)),this.addAttribute("uv",new io(o,2))}function Os(t,e){if(e.shapes=[],Array.isArray(t))for(var r=0,i=t.length;r<i;r++){var n=t[r];e.shapes.push(n.uuid)}else e.shapes.push(t.uuid);return e}function Us(t,e){co.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var r,i,n,o,a=[],s=Math.cos(ye.DEG2RAD*e),c=[0,0],h={},l=["a","b","c"];t.isBufferGeometry?(o=new Yn).fromBufferGeometry(t):o=t.clone(),o.mergeVertices(),o.computeFaceNormals();for(var u=o.vertices,p=o.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],v=0;v<3;v++)r=m[l[v]],i=m[l[(v+1)%3]],c[0]=Math.min(r,i),c[1]=Math.max(r,i),void 0===h[n=c[0]+","+c[1]]?h[n]={index1:c[0],index2:c[1],face1:d,face2:void 0}:h[n].face2=d;for(n in h){var g=h[n];if(void 0===g.face2||p[g.face1].normal.dot(p[g.face2].normal)<=s){var y=u[g.index1];a.push(y.x,y.y,y.z),y=u[g.index2],a.push(y.x,y.y,y.z)}}this.addAttribute("position",new io(a,3))}function Ns(t,e,r,i,n,o,a,s){Yn.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Ds(t,e,r,i,n,o,a,s)),this.mergeVertices()}function Ds(t,e,r,i,n,o,a,s){co.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s};var c=this;t=void 0!==t?t:1,e=void 0!==e?e:1,r=r||1,i=Math.floor(i)||8,n=Math.floor(n)||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var h=[],l=[],u=[],p=[],d=0,f=[],m=r/2,v=0;function g(r){var n,o,f,g=new xe,y=new we,x=0,b=!0===r?t:e,_=!0===r?1:-1;for(o=d,n=1;n<=i;n++)l.push(0,m*_,0),u.push(0,_,0),p.push(.5,.5),d++;for(f=d,n=0;n<=i;n++){var w=n/i*s+a,M=Math.cos(w),E=Math.sin(w);y.x=b*E,y.y=m*_,y.z=b*M,l.push(y.x,y.y,y.z),u.push(0,_,0),g.x=.5*M+.5,g.y=.5*E*_+.5,p.push(g.x,g.y),d++}for(n=0;n<i;n++){var T=o+n,S=f+n;!0===r?h.push(S,S+1,T):h.push(S+1,S,T),x+=3}c.addGroup(v,x,!0===r?1:2),v+=x}!function(){var o,g,y=new we,x=new we,b=0,_=(e-t)/r;for(g=0;g<=n;g++){var w=[],M=g/n,E=M*(e-t)+t;for(o=0;o<=i;o++){var T=o/i,S=T*s+a,A=Math.sin(S),R=Math.cos(S);x.x=E*A,x.y=-M*r+m,x.z=E*R,l.push(x.x,x.y,x.z),y.set(A,_,R).normalize(),u.push(y.x,y.y,y.z),p.push(T,1-M),w.push(d++)}f.push(w)}for(o=0;o<i;o++)for(g=0;g<n;g++){var L=f[g][o],P=f[g+1][o],C=f[g+1][o+1],I=f[g][o+1];h.push(L,P,I),h.push(P,C,I),b+=6}c.addGroup(v,b,0),v+=b}(),!1===o&&(t>0&&g(!0),e>0&&g(!1)),this.setIndex(h),this.addAttribute("position",new io(l,3)),this.addAttribute("normal",new io(u,3)),this.addAttribute("uv",new io(p,2))}function Fs(t,e,r,i,n,o,a){Ns.call(this,0,t,e,r,i,n,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:a}}function Bs(t,e,r,i,n,o,a){Ds.call(this,0,t,e,r,i,n,o,a),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:o,thetaLength:a}}function zs(t,e,r,i){Yn.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},this.fromBufferGeometry(new Gs(t,e,r,i)),this.mergeVertices()}function Gs(t,e,r,i){co.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||1,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n,o,a=[],s=[],c=[],h=[],l=new we,u=new xe;for(s.push(0,0,0),c.push(0,0,1),h.push(.5,.5),o=0,n=3;o<=e;o++,n+=3){var p=r+o/e*i;l.x=t*Math.cos(p),l.y=t*Math.sin(p),s.push(l.x,l.y,l.z),c.push(0,0,1),u.x=(s[n]/t+1)/2,u.y=(s[n+1]/t+1)/2,h.push(u.x,u.y)}for(n=1;n<=e;n++)a.push(n,n+1,0);this.setIndex(a),this.addAttribute("position",new io(s,3)),this.addAttribute("normal",new io(c,3)),this.addAttribute("uv",new io(h,2))}exports.ShapeUtils=bs,_s.prototype=Object.create(Yn.prototype),_s.prototype.constructor=_s,ws.prototype=Object.create(co.prototype),ws.prototype.constructor=ws,ws.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],r=this.getAttribute("uv"),i=r?Array.prototype.slice.call(r.array):[],n=this.index;return{position:e,uv:i,index:n?Array.prototype.slice.call(n.array):[]}},ws.prototype.addShapeList=function(t,e){var r=t.length;e.arrays=this.getArrays();for(var i=0;i<r;i++){var n=t[i];this.addShape(n,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new io(e.arrays.position,3)),this.addAttribute("uv",new io(e.arrays.uv,2))},ws.prototype.addShape=function(t,e){var r,i,n,o,a,s,c,h,l=e.arrays?e.arrays:this.getArrays(),u=l.position,p=l.index,d=l.uv,f=[],m=void 0!==e.amount?e.amount:100,v=void 0!==e.bevelThickness?e.bevelThickness:6,g=void 0!==e.bevelSize?e.bevelSize:v-2,y=void 0!==e.bevelSegments?e.bevelSegments:3,x=void 0===e.bevelEnabled||e.bevelEnabled,b=void 0!==e.curveSegments?e.curveSegments:12,_=void 0!==e.steps?e.steps:1,w=e.extrudePath,M=!1,E=void 0!==e.UVGenerator?e.UVGenerator:_s.WorldUVGenerator;w&&(r=w.getSpacedPoints(_),M=!0,x=!1,i=void 0!==e.frames?e.frames:w.computeFrenetFrames(_,!1),n=new we,o=new we,a=new we),x||(y=0,v=0,g=0);var T=this,S=t.extractPoints(b),A=S.shape,R=S.holes;if(!bs.isClockWise(A))for(A=A.reverse(),c=0,h=R.length;c<h;c++)s=R[c],bs.isClockWise(s)&&(R[c]=s.reverse());var L=bs.triangulateShape(A,R),P=A;for(c=0,h=R.length;c<h;c++)s=R[c],A=A.concat(s);function C(t,e,r){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(r).add(t)}var I,O,U,N,D,F,B=A.length,z=L.length;function G(t,e,r){var i,n,o,a=t.x-e.x,s=t.y-e.y,c=r.x-t.x,h=r.y-t.y,l=a*a+s*s,u=a*h-s*c;if(Math.abs(u)>Number.EPSILON){var p=Math.sqrt(l),d=Math.sqrt(c*c+h*h),f=e.x-s/p,m=e.y+a/p,v=((r.x-h/d-f)*h-(r.y+c/d-m)*c)/(a*h-s*c),g=(i=f+a*v-t.x)*i+(n=m+s*v-t.y)*n;if(g<=2)return new xe(i,n);o=Math.sqrt(g/2)}else{var y=!1;a>Number.EPSILON?c>Number.EPSILON&&(y=!0):a<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(h)&&(y=!0),y?(i=-s,n=a,o=Math.sqrt(l)):(i=a,n=s,o=Math.sqrt(l/2))}return new xe(i/o,n/o)}for(var H=[],V=0,k=P.length,j=k-1,W=V+1;V<k;V++,j++,W++)j===k&&(j=0),W===k&&(W=0),H[V]=G(P[V],P[j],P[W]);var X,q,Y=[],Z=H.concat();for(c=0,h=R.length;c<h;c++){for(s=R[c],X=[],V=0,j=(k=s.length)-1,W=V+1;V<k;V++,j++,W++)j===k&&(j=0),W===k&&(W=0),X[V]=G(s[V],s[j],s[W]);Y.push(X),Z=Z.concat(X)}for(I=0;I<y;I++){for(U=I/y,N=v*Math.cos(U*Math.PI/2),O=g*Math.sin(U*Math.PI/2),V=0,k=P.length;V<k;V++)Q((D=C(P[V],H[V],O)).x,D.y,-N);for(c=0,h=R.length;c<h;c++)for(s=R[c],X=Y[c],V=0,k=s.length;V<k;V++)Q((D=C(s[V],X[V],O)).x,D.y,-N)}for(O=g,V=0;V<B;V++)D=x?C(A[V],Z[V],O):A[V],M?(o.copy(i.normals[0]).multiplyScalar(D.x),n.copy(i.binormals[0]).multiplyScalar(D.y),a.copy(r[0]).add(o).add(n),Q(a.x,a.y,a.z)):Q(D.x,D.y,0);for(q=1;q<=_;q++)for(V=0;V<B;V++)D=x?C(A[V],Z[V],O):A[V],M?(o.copy(i.normals[q]).multiplyScalar(D.x),n.copy(i.binormals[q]).multiplyScalar(D.y),a.copy(r[q]).add(o).add(n),Q(a.x,a.y,a.z)):Q(D.x,D.y,m/_*q);for(I=y-1;I>=0;I--){for(U=I/y,N=v*Math.cos(U*Math.PI/2),O=g*Math.sin(U*Math.PI/2),V=0,k=P.length;V<k;V++)Q((D=C(P[V],H[V],O)).x,D.y,m+N);for(c=0,h=R.length;c<h;c++)for(s=R[c],X=Y[c],V=0,k=s.length;V<k;V++)D=C(s[V],X[V],O),M?Q(D.x,D.y+r[_-1].y,r[_-1].x+N):Q(D.x,D.y,m+N)}function J(t,e){var r,i;for(V=t.length;--V>=0;){r=V,(i=V-1)<0&&(i=t.length-1);var n=0,o=_+2*y;for(n=0;n<o;n++){var a=B*n,s=B*(n+1);$(e+r+a,e+i+a,e+i+s,e+r+s)}}}function Q(t,e,r){f.push(t),f.push(e),f.push(r)}function K(t,e,r){tt(t),tt(e),tt(r);var i=u.length/3,n=E.generateTopUV(T,u,i-3,i-2,i-1);et(n[0]),et(n[1]),et(n[2])}function $(t,e,r,i){tt(t),tt(e),tt(i),tt(e),tt(r),tt(i);var n=u.length/3,o=E.generateSideWallUV(T,u,n-6,n-3,n-2,n-1);et(o[0]),et(o[1]),et(o[3]),et(o[1]),et(o[2]),et(o[3])}function tt(t){p.push(u.length/3),u.push(f[3*t+0]),u.push(f[3*t+1]),u.push(f[3*t+2])}function et(t){d.push(t.x),d.push(t.y)}!function(){var t=u.length/3;if(x){var r=0,i=B*r;for(V=0;V<z;V++)K((F=L[V])[2]+i,F[1]+i,F[0]+i);for(i=B*(r=_+2*y),V=0;V<z;V++)K((F=L[V])[0]+i,F[1]+i,F[2]+i)}else{for(V=0;V<z;V++)K((F=L[V])[2],F[1],F[0]);for(V=0;V<z;V++)K((F=L[V])[0]+B*_,F[1]+B*_,F[2]+B*_)}T.addGroup(t,u.length/3-t,void 0!==e.material?e.material:0)}(),function(){var t=u.length/3,r=0;for(J(P,r),r+=P.length,c=0,h=R.length;c<h;c++)J(s=R[c],r),r+=s.length;T.addGroup(t,u.length/3-t,void 0!==e.extrudeMaterial?e.extrudeMaterial:1)}(),e.arrays||(this.setIndex(p),this.addAttribute("position",new io(u,3)),this.addAttribute("uv",new io(d,2)))},_s.WorldUVGenerator={generateTopUV:function(t,e,r,i,n){var o=e[3*r],a=e[3*r+1],s=e[3*i],c=e[3*i+1],h=e[3*n],l=e[3*n+1];return[new xe(o,a),new xe(s,c),new xe(h,l)]},generateSideWallUV:function(t,e,r,i,n,o){var a=e[3*r],s=e[3*r+1],c=e[3*r+2],h=e[3*i],l=e[3*i+1],u=e[3*i+2],p=e[3*n],d=e[3*n+1],f=e[3*n+2],m=e[3*o],v=e[3*o+1],g=e[3*o+2];return Math.abs(s-l)<.01?[new xe(a,1-c),new xe(h,1-u),new xe(p,1-f),new xe(m,1-g)]:[new xe(s,1-c),new xe(l,1-u),new xe(d,1-f),new xe(v,1-g)]}},Ms.prototype=Object.create(Yn.prototype),Ms.prototype.constructor=Ms,Es.prototype=Object.create(ws.prototype),Es.prototype.constructor=Es,Ts.prototype=Object.create(Yn.prototype),Ts.prototype.constructor=Ts,Ss.prototype=Object.create(co.prototype),Ss.prototype.constructor=Ss,As.prototype=Object.create(Yn.prototype),As.prototype.constructor=As,Rs.prototype=Object.create(co.prototype),Rs.prototype.constructor=Rs,Ls.prototype=Object.create(Yn.prototype),Ls.prototype.constructor=Ls,Ps.prototype=Object.create(co.prototype),Ps.prototype.constructor=Ps,Cs.prototype=Object.create(Yn.prototype),Cs.prototype.constructor=Cs,Cs.prototype.toJSON=function(){var t=Yn.prototype.toJSON.call(this);return Os(this.parameters.shapes,t)},Is.prototype=Object.create(co.prototype),Is.prototype.constructor=Is,Is.prototype.toJSON=function(){var t=co.prototype.toJSON.call(this);return Os(this.parameters.shapes,t)},Us.prototype=Object.create(co.prototype),Us.prototype.constructor=Us,Ns.prototype=Object.create(Yn.prototype),Ns.prototype.constructor=Ns,Ds.prototype=Object.create(co.prototype),Ds.prototype.constructor=Ds,Fs.prototype=Object.create(Ns.prototype),Fs.prototype.constructor=Fs,Bs.prototype=Object.create(Ds.prototype),Bs.prototype.constructor=Bs,zs.prototype=Object.create(Yn.prototype),zs.prototype.constructor=zs,Gs.prototype=Object.create(co.prototype),Gs.prototype.constructor=Gs;var Hs=Object.freeze({WireframeGeometry:Sa,ParametricGeometry:Aa,ParametricBufferGeometry:Ra,TetrahedronGeometry:Ca,TetrahedronBufferGeometry:Ia,OctahedronGeometry:Oa,OctahedronBufferGeometry:Ua,IcosahedronGeometry:Na,IcosahedronBufferGeometry:Da,DodecahedronGeometry:Fa,DodecahedronBufferGeometry:Ba,PolyhedronGeometry:La,PolyhedronBufferGeometry:Pa,TubeGeometry:za,TubeBufferGeometry:Ga,TorusKnotGeometry:Ha,TorusKnotBufferGeometry:Va,TorusGeometry:ka,TorusBufferGeometry:ja,TextGeometry:Ms,TextBufferGeometry:Es,SphereGeometry:Ts,SphereBufferGeometry:Ss,RingGeometry:As,RingBufferGeometry:Rs,PlaneGeometry:uo,PlaneBufferGeometry:po,LatheGeometry:Ls,LatheBufferGeometry:Ps,ShapeGeometry:Cs,ShapeBufferGeometry:Is,ExtrudeGeometry:_s,ExtrudeBufferGeometry:ws,EdgesGeometry:Us,ConeGeometry:Fs,ConeBufferGeometry:Bs,CylinderGeometry:Ns,CylinderBufferGeometry:Ds,CircleGeometry:zs,CircleBufferGeometry:Gs,BoxGeometry:ho,BoxBufferGeometry:lo});function Vs(t){Cn.call(this),this.type="ShadowMaterial",this.color=new xr(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}function ks(t){mo.call(this,t),this.type="RawShaderMaterial"}function js(t){Cn.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new xr(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ws(t){js.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}function Xs(t){Cn.call(this),this.type="MeshPhongMaterial",this.color=new xr(16777215),this.specular=new xr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function qs(t){Xs.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function Ys(t){Cn.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new xe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Zs(t){Cn.call(this),this.type="MeshLambertMaterial",this.color=new xr(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=J,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Js(t){va.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Vs.prototype=Object.create(Cn.prototype),Vs.prototype.constructor=Vs,Vs.prototype.isShadowMaterial=!0,ks.prototype=Object.create(mo.prototype),ks.prototype.constructor=ks,ks.prototype.isRawShaderMaterial=!0,js.prototype=Object.create(Cn.prototype),js.prototype.constructor=js,js.prototype.isMeshStandardMaterial=!0,js.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Ws.prototype=Object.create(js.prototype),Ws.prototype.constructor=Ws,Ws.prototype.isMeshPhysicalMaterial=!0,Ws.prototype.copy=function(t){return js.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},Xs.prototype=Object.create(Cn.prototype),Xs.prototype.constructor=Xs,Xs.prototype.isMeshPhongMaterial=!0,Xs.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},qs.prototype=Object.create(Xs.prototype),qs.prototype.constructor=qs,qs.prototype.isMeshToonMaterial=!0,qs.prototype.copy=function(t){return Xs.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},Ys.prototype=Object.create(Cn.prototype),Ys.prototype.constructor=Ys,Ys.prototype.isMeshNormalMaterial=!0,Ys.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Zs.prototype=Object.create(Cn.prototype),Zs.prototype.constructor=Zs,Zs.prototype.isMeshLambertMaterial=!0,Zs.prototype.copy=function(t){return Cn.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Js.prototype=Object.create(va.prototype),Js.prototype.constructor=Js,Js.prototype.isLineDashedMaterial=!0,Js.prototype.copy=function(t){return va.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Qs=Object.freeze({ShadowMaterial:Vs,SpriteMaterial:la,RawShaderMaterial:ks,ShaderMaterial:mo,PointsMaterial:ba,MeshPhysicalMaterial:Ws,MeshStandardMaterial:js,MeshPhongMaterial:Xs,MeshToonMaterial:qs,MeshNormalMaterial:Ys,MeshLambertMaterial:Zs,MeshDepthMaterial:In,MeshDistanceMaterial:On,MeshBasicMaterial:fo,LineDashedMaterial:Js,LineBasicMaterial:va,Material:Cn}),Ks={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function $s(t,e,r){var i=this,n=!1,o=0,a=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){a++,!1===n&&void 0!==i.onStart&&i.onStart(t,o,a),n=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,a),o===a&&(n=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this}}exports.Cache=Ks;var tc=new $s;exports.DefaultLoadingManager=tc;var ec={};function rc(t){this.manager=void 0!==t?t:tc}function ic(t){this.manager=void 0!==t?t:tc,this._parser=null}function nc(t){this.manager=void 0!==t?t:tc,this._parser=null}function oc(t){this.manager=void 0!==t?t:tc}function ac(t){this.manager=void 0!==t?t:tc}function sc(t){this.manager=void 0!==t?t:tc}function cc(){this.type="Curve",this.arcLengthDivisions=200}function hc(t,e,r,i,n,o,a,s){cc.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=r||1,this.yRadius=i||1,this.aStartAngle=n||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=a||!1,this.aRotation=s||0}function lc(t,e,r,i,n,o){hc.call(this,t,e,r,r,i,n,o),this.type="ArcCurve"}function uc(){var t=0,e=0,r=0,i=0;function n(n,o,a,s){t=n,e=a,r=-3*n+3*o-2*a-s,i=2*n-2*o+a+s}return{initCatmullRom:function(t,e,r,i,o){n(e,r,o*(r-t),o*(i-e))},initNonuniformCatmullRom:function(t,e,r,i,o,a,s){var c=(e-t)/o-(r-t)/(o+a)+(r-e)/a,h=(r-e)/a-(i-e)/(a+s)+(i-r)/s;n(e,r,c*=a,h*=a)},calc:function(n){var o=n*n;return t+e*n+r*o+i*(o*n)}}}Object.assign(rc.prototype,{load:function(t,e,r,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,o=Ks.get(t);if(void 0!==o)return n.manager.itemStart(t),setTimeout(function(){e&&e(o),n.manager.itemEnd(t)},0),o;if(void 0===ec[t]){var a=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(a){var s=a[1],c=!!a[2],h=a[3];h=window.decodeURIComponent(h),c&&(h=window.atob(h));try{var l,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var p=new Uint8Array(h.length),d=0;d<h.length;d++)p[d]=h.charCodeAt(d);l="blob"===u?new Blob([p.buffer],{type:s}):p.buffer;break;case"document":var f=new DOMParser;l=f.parseFromString(h,s);break;case"json":l=JSON.parse(h);break;default:l=h}window.setTimeout(function(){e&&e(l),n.manager.itemEnd(t)},0)}catch(g){window.setTimeout(function(){i&&i(g),n.manager.itemEnd(t),n.manager.itemError(t)},0)}}else{ec[t]=[],ec[t].push({onLoad:e,onProgress:r,onError:i});var m=new XMLHttpRequest;for(var v in m.open("GET",t,!0),m.addEventListener("load",function(e){var r=this.response;Ks.add(t,r);var i=ec[t];if(delete ec[t],200===this.status){for(var o=0,a=i.length;o<a;o++){(s=i[o]).onLoad&&s.onLoad(r)}n.manager.itemEnd(t)}else if(0===this.status){console.warn("THREE.FileLoader: HTTP Status 0 received.");for(o=0,a=i.length;o<a;o++){(s=i[o]).onLoad&&s.onLoad(r)}n.manager.itemEnd(t)}else{for(o=0,a=i.length;o<a;o++){var s;(s=i[o]).onError&&s.onError(e)}n.manager.itemEnd(t),n.manager.itemError(t)}},!1),m.addEventListener("progress",function(e){for(var r=ec[t],i=0,n=r.length;i<n;i++){var o=r[i];o.onProgress&&o.onProgress(e)}},!1),m.addEventListener("error",function(e){var r=ec[t];delete ec[t];for(var i=0,o=r.length;i<o;i++){var a=r[i];a.onError&&a.onError(e)}n.manager.itemEnd(t),n.manager.itemError(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)m.setRequestHeader(v,this.requestHeader[v]);m.send(null)}return n.manager.itemStart(t),m}ec[t].push({onLoad:e,onProgress:r,onError:i})},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(ic.prototype,{load:function(t,e,r,i){var n=this,o=[],a=new Ea;a.image=o;var s=new rc(this.manager);function c(c){s.load(t[c],function(t){var r=n._parser(t,!0);o[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},6===(h+=1)&&(1===r.mipmapCount&&(a.minFilter=yt),a.format=r.format,a.needsUpdate=!0,e&&e(a))},r,i)}if(s.setPath(this.path),s.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,l=0,u=t.length;l<u;++l)c(l);else s.load(t,function(t){var r=n._parser(t,!0);if(r.isCubemap)for(var i=r.mipmaps.length/r.mipmapCount,s=0;s<i;s++){o[s]={mipmaps:[]};for(var c=0;c<r.mipmapCount;c++)o[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+c]),o[s].format=r.format,o[s].width=r.width,o[s].height=r.height}else a.image.width=r.width,a.image.height=r.height,a.mipmaps=r.mipmaps;1===r.mipmapCount&&(a.minFilter=yt),a.format=r.format,a.needsUpdate=!0,e&&e(a)},r,i);return a},setPath:function(t){return this.path=t,this}}),Object.assign(nc.prototype,{load:function(t,e,r,i){var n=this,o=new Le,a=new rc(this.manager);return a.setResponseType("arraybuffer"),a.load(t,function(t){var r=n._parser(t);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:dt,o.wrapT=void 0!==r.wrapT?r.wrapT:dt,o.magFilter=void 0!==r.magFilter?r.magFilter:yt,o.minFilter=void 0!==r.minFilter?r.minFilter:bt,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps),1===r.mipmapCount&&(o.minFilter=yt),o.needsUpdate=!0,e&&e(o,r))},r,i),o}}),Object.assign(oc.prototype,{crossOrigin:"Anonymous",load:function(t,e,r,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var n=this,o=Ks.get(t);if(void 0!==o)return n.manager.itemStart(t),setTimeout(function(){e&&e(o),n.manager.itemEnd(t)},0),o;var a=document.createElementNS("http://www.w3.org/1999/xhtml","img");return a.addEventListener("load",function(){Ks.add(t,this),e&&e(this),n.manager.itemEnd(t)},!1),a.addEventListener("error",function(e){i&&i(e),n.manager.itemEnd(t),n.manager.itemError(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),n.manager.itemStart(t),a.src=t,a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(ac.prototype,{crossOrigin:"Anonymous",load:function(t,e,r,i){var n=new Pe,o=new oc(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);var a=0;function s(r){o.load(t[r],function(t){n.images[r]=t,6===++a&&(n.needsUpdate=!0,e&&e(n))},void 0,i)}for(var c=0;c<t.length;++c)s(c);return n},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(sc.prototype,{crossOrigin:"Anonymous",load:function(t,e,r,i){var n=new Te,o=new oc(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(r){n.image=r;var i=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);n.format=i?Ut:Nt,n.needsUpdate=!0,void 0!==e&&e(n)},r,i),n},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(cc.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var r=this.getUtoTmapping(t);return this.getPoint(r,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],r=0;r<=t;r++)e.push(this.getPoint(r/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],r=0;r<=t;r++)e.push(this.getPointAt(r/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)o+=(e=this.getPoint(r/t)).distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i,i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var r,i=this.getLengths(),n=0,o=i.length;r=e||t*i[o-1];for(var a,s=0,c=o-1;s<=c;)if((a=i[n=Math.floor(s+(c-s)/2)]-r)<0)s=n+1;else{if(!(a>0)){c=n;break}c=n-1}if(i[n=c]===r)return n/(o-1);var h=i[n];return(n+(r-h)/(i[n+1]-h))/(o-1)},getTangent:function(t){var e=t-1e-4,r=t+1e-4;e<0&&(e=0),r>1&&(r=1);var i=this.getPoint(e);return this.getPoint(r).clone().sub(i).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var r,i,n,o=new we,a=[],s=[],c=[],h=new we,l=new be;for(r=0;r<=t;r++)i=r/t,a[r]=this.getTangentAt(i),a[r].normalize();s[0]=new we,c[0]=new we;var u=Number.MAX_VALUE,p=Math.abs(a[0].x),d=Math.abs(a[0].y),f=Math.abs(a[0].z);for(p<=u&&(u=p,o.set(1,0,0)),d<=u&&(u=d,o.set(0,1,0)),f<=u&&o.set(0,0,1),h.crossVectors(a[0],o).normalize(),s[0].crossVectors(a[0],h),c[0].crossVectors(a[0],s[0]),r=1;r<=t;r++)s[r]=s[r-1].clone(),c[r]=c[r-1].clone(),h.crossVectors(a[r-1],a[r]),h.length()>Number.EPSILON&&(h.normalize(),n=Math.acos(ye.clamp(a[r-1].dot(a[r]),-1,1)),s[r].applyMatrix4(l.makeRotationAxis(h,n))),c[r].crossVectors(a[r],s[r]);if(!0===e)for(n=Math.acos(ye.clamp(s[0].dot(s[t]),-1,1)),n/=t,a[0].dot(h.crossVectors(s[0],s[t]))>0&&(n=-n),r=1;r<=t;r++)s[r].applyMatrix4(l.makeRotationAxis(a[r],n*r)),c[r].crossVectors(a[r],s[r]);return{tangents:a,normals:s,binormals:c}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),hc.prototype=Object.create(cc.prototype),hc.prototype.constructor=hc,hc.prototype.isEllipseCurve=!0,hc.prototype.getPoint=function(t,e){for(var r=e||new xe,i=2*Math.PI,n=this.aEndAngle-this.aStartAngle,o=Math.abs(n)<Number.EPSILON;n<0;)n+=i;for(;n>i;)n-=i;n<Number.EPSILON&&(n=o?0:i),!0!==this.aClockwise||o||(n===i?n=-i:n-=i);var a=this.aStartAngle+t*n,s=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){var h=Math.cos(this.aRotation),l=Math.sin(this.aRotation),u=s-this.aX,p=c-this.aY;s=u*h-p*l+this.aX,c=u*l+p*h+this.aY}return r.set(s,c)},hc.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},hc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},hc.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},lc.prototype=Object.create(hc.prototype),lc.prototype.constructor=lc,lc.prototype.isArcCurve=!0;var pc=new we,dc=new uc,fc=new uc,mc=new uc;function vc(t,e,r,i){cc.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=r||"centripetal",this.tension=i||.5}function gc(t,e,r,i,n){var o=.5*(i-e),a=.5*(n-r),s=t*t;return(2*r-2*i+o+a)*(t*s)+(-3*r+3*i-2*o-a)*s+o*t+r}function yc(t,e){var r=1-t;return r*r*e}function xc(t,e){return 2*(1-t)*t*e}function bc(t,e){return t*t*e}function _c(t,e,r,i){return yc(t,e)+xc(t,r)+bc(t,i)}function wc(t,e){var r=1-t;return r*r*r*e}function Mc(t,e){var r=1-t;return 3*r*r*t*e}function Ec(t,e){return 3*(1-t)*t*t*e}function Tc(t,e){return t*t*t*e}function Sc(t,e,r,i,n){return wc(t,e)+Mc(t,r)+Ec(t,i)+Tc(t,n)}function Ac(t,e,r,i){cc.call(this),this.type="CubicBezierCurve",this.v0=t||new xe,this.v1=e||new xe,this.v2=r||new xe,this.v3=i||new xe}function Rc(t,e,r,i){cc.call(this),this.type="CubicBezierCurve3",this.v0=t||new we,this.v1=e||new we,this.v2=r||new we,this.v3=i||new we}function Lc(t,e){cc.call(this),this.type="LineCurve",this.v1=t||new xe,this.v2=e||new xe}function Pc(t,e){cc.call(this),this.type="LineCurve3",this.v1=t||new we,this.v2=e||new we}function Cc(t,e,r){cc.call(this),this.type="QuadraticBezierCurve",this.v0=t||new xe,this.v1=e||new xe,this.v2=r||new xe}function Ic(t,e,r){cc.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new we,this.v1=e||new we,this.v2=r||new we}function Oc(t){cc.call(this),this.type="SplineCurve",this.points=t||[]}vc.prototype=Object.create(cc.prototype),vc.prototype.constructor=vc,vc.prototype.isCatmullRomCurve3=!0,vc.prototype.getPoint=function(t,e){var r,i,n,o,a=e||new we,s=this.points,c=s.length,h=(c-(this.closed?0:1))*t,l=Math.floor(h),u=h-l;if(this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/s.length)+1)*s.length:0===u&&l===c-1&&(l=c-2,u=1),this.closed||l>0?r=s[(l-1)%c]:(pc.subVectors(s[0],s[1]).add(s[0]),r=pc),i=s[l%c],n=s[(l+1)%c],this.closed||l+2<c?o=s[(l+2)%c]:(pc.subVectors(s[c-1],s[c-2]).add(s[c-1]),o=pc),"centripetal"===this.curveType||"chordal"===this.curveType){var p="chordal"===this.curveType?.5:.25,d=Math.pow(r.distanceToSquared(i),p),f=Math.pow(i.distanceToSquared(n),p),m=Math.pow(n.distanceToSquared(o),p);f<1e-4&&(f=1),d<1e-4&&(d=f),m<1e-4&&(m=f),dc.initNonuniformCatmullRom(r.x,i.x,n.x,o.x,d,f,m),fc.initNonuniformCatmullRom(r.y,i.y,n.y,o.y,d,f,m),mc.initNonuniformCatmullRom(r.z,i.z,n.z,o.z,d,f,m)}else"catmullrom"===this.curveType&&(dc.initCatmullRom(r.x,i.x,n.x,o.x,this.tension),fc.initCatmullRom(r.y,i.y,n.y,o.y,this.tension),mc.initCatmullRom(r.z,i.z,n.z,o.z,this.tension));return a.set(dc.calc(u),fc.calc(u),mc.calc(u)),a},vc.prototype.copy=function(t){cc.prototype.copy.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},vc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);t.points=[];for(var e=0,r=this.points.length;e<r;e++){var i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},vc.prototype.fromJSON=function(t){cc.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var i=t.points[e];this.points.push((new we).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Ac.prototype=Object.create(cc.prototype),Ac.prototype.constructor=Ac,Ac.prototype.isCubicBezierCurve=!0,Ac.prototype.getPoint=function(t,e){var r=e||new xe,i=this.v0,n=this.v1,o=this.v2,a=this.v3;return r.set(Sc(t,i.x,n.x,o.x,a.x),Sc(t,i.y,n.y,o.y,a.y)),r},Ac.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Ac.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Ac.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Rc.prototype=Object.create(cc.prototype),Rc.prototype.constructor=Rc,Rc.prototype.isCubicBezierCurve3=!0,Rc.prototype.getPoint=function(t,e){var r=e||new we,i=this.v0,n=this.v1,o=this.v2,a=this.v3;return r.set(Sc(t,i.x,n.x,o.x,a.x),Sc(t,i.y,n.y,o.y,a.y),Sc(t,i.z,n.z,o.z,a.z)),r},Rc.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Rc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Rc.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Lc.prototype=Object.create(cc.prototype),Lc.prototype.constructor=Lc,Lc.prototype.isLineCurve=!0,Lc.prototype.getPoint=function(t,e){var r=e||new xe;return 1===t?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(t).add(this.v1)),r},Lc.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Lc.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},Lc.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Lc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Lc.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Pc.prototype=Object.create(cc.prototype),Pc.prototype.constructor=Pc,Pc.prototype.isLineCurve3=!0,Pc.prototype.getPoint=function(t,e){var r=e||new we;return 1===t?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(t).add(this.v1)),r},Pc.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Pc.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Pc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Pc.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Cc.prototype=Object.create(cc.prototype),Cc.prototype.constructor=Cc,Cc.prototype.isQuadraticBezierCurve=!0,Cc.prototype.getPoint=function(t,e){var r=e||new xe,i=this.v0,n=this.v1,o=this.v2;return r.set(_c(t,i.x,n.x,o.x),_c(t,i.y,n.y,o.y)),r},Cc.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Cc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Cc.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Ic.prototype=Object.create(cc.prototype),Ic.prototype.constructor=Ic,Ic.prototype.isQuadraticBezierCurve3=!0,Ic.prototype.getPoint=function(t,e){var r=e||new we,i=this.v0,n=this.v1,o=this.v2;return r.set(_c(t,i.x,n.x,o.x),_c(t,i.y,n.y,o.y),_c(t,i.z,n.z,o.z)),r},Ic.prototype.copy=function(t){return cc.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ic.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ic.prototype.fromJSON=function(t){return cc.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Oc.prototype=Object.create(cc.prototype),Oc.prototype.constructor=Oc,Oc.prototype.isSplineCurve=!0,Oc.prototype.getPoint=function(t,e){var r=e||new xe,i=this.points,n=(i.length-1)*t,o=Math.floor(n),a=n-o,s=i[0===o?o:o-1],c=i[o],h=i[o>i.length-2?i.length-1:o+1],l=i[o>i.length-3?i.length-1:o+2];return r.set(gc(a,s.x,c.x,h.x,l.x),gc(a,s.y,c.y,h.y,l.y)),r},Oc.prototype.copy=function(t){cc.prototype.copy.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var i=t.points[e];this.points.push(i.clone())}return this},Oc.prototype.toJSON=function(){var t=cc.prototype.toJSON.call(this);t.points=[];for(var e=0,r=this.points.length;e<r;e++){var i=this.points[e];t.points.push(i.toArray())}return t},Oc.prototype.fromJSON=function(t){cc.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,r=t.points.length;e<r;e++){var i=t.points[e];this.points.push((new xe).fromArray(i))}return this};var Uc=Object.freeze({ArcCurve:lc,CatmullRomCurve3:vc,CubicBezierCurve:Ac,CubicBezierCurve3:Rc,EllipseCurve:hc,LineCurve:Lc,LineCurve3:Pc,QuadraticBezierCurve:Cc,QuadraticBezierCurve3:Ic,SplineCurve:Oc});function Nc(){cc.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Dc(t){Nc.call(this),this.type="Path",this.currentPoint=new xe,t&&this.setFromPoints(t)}function Fc(t){Dc.call(this,t),this.uuid=ye.generateUUID(),this.type="Shape",this.holes=[]}function Bc(t,e){kn.call(this),this.type="Light",this.color=new xr(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function zc(t,e,r){Bc.call(this,t,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(kn.DefaultUp),this.updateMatrix(),this.groundColor=new xr(e)}function Gc(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new xe(512,512),this.map=null,this.matrix=new be}function Hc(){Gc.call(this,new $o(50,1,.5,500))}function Vc(t,e,r,i,n,o){Bc.call(this,t,e),this.type="SpotLight",this.position.copy(kn.DefaultUp),this.updateMatrix(),this.target=new kn,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.penumbra=void 0!==n?n:0,this.decay=void 0!==o?o:1,this.shadow=new Hc}function kc(t,e,r,i){Bc.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==i?i:1,this.shadow=new Gc(new $o(90,1,.5,500))}function jc(){Gc.call(this,new Wn(-5,5,5,-5,.5,500))}function Wc(t,e){Bc.call(this,t,e),this.type="DirectionalLight",this.position.copy(kn.DefaultUp),this.updateMatrix(),this.target=new kn,this.shadow=new jc}function Xc(t,e){Bc.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function qc(t,e,r,i){Bc.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==r?r:10,this.height=void 0!==i?i:10}function Yc(t,e,r,i){oh.call(this,t,e,r,i)}function Zc(t,e,r){oh.call(this,t,e,r)}function Jc(t,e,r,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(r),this.sampleValues=e,this.valueSize=r}function Qc(t,e,r,i){Jc.call(this,t,e,r,i)}function Kc(t,e,r,i){oh.call(this,t,e,r,i)}function $c(t,e,r,i){oh.call(this,t,e,r,i)}function th(t,e,r,i){oh.call(this,t,e,r,i)}function eh(t,e,r,i){Jc.call(this,t,e,r,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function rh(t,e,r,i){Jc.call(this,t,e,r,i)}function ih(t,e,r,i){Jc.call(this,t,e,r,i)}Nc.prototype=Object.assign(Object.create(cc.prototype),{constructor:Nc,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Lc(e,t))},getPoint:function(t){for(var e=t*this.getLength(),r=this.getCurveLengths(),i=0;i<r.length;){if(r[i]>=e){var n=r[i]-e,o=this.curves[i],a=o.getLength(),s=0===a?0:1-n/a;return o.getPointAt(s)}i++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,r=0,i=this.curves.length;r<i;r++)e+=this.curves[r].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],r=0;r<=t;r++)e.push(this.getPoint(r/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,r=[],i=0,n=this.curves;i<n.length;i++)for(var o=n[i],a=o&&o.isEllipseCurve?2*t:o&&o.isLineCurve?1:o&&o.isSplineCurve?t*o.points.length:t,s=o.getPoints(a),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(r.push(h),e=h)}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r},copy:function(t){cc.prototype.copy.call(this,t),this.curves=[];for(var e=0,r=t.curves.length;e<r;e++){var i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=cc.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,r=this.curves.length;e<r;e++){var i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){cc.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,r=t.curves.length;e<r;e++){var i=t.curves[e];this.curves.push((new Uc[i.type]).fromJSON(i))}return this}}),Dc.prototype=Object.assign(Object.create(Nc.prototype),{constructor:Dc,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var r=new Lc(this.currentPoint.clone(),new xe(t,e));this.curves.push(r),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,r,i){var n=new Cc(this.currentPoint.clone(),new xe(t,e),new xe(r,i));this.curves.push(n),this.currentPoint.set(r,i)},bezierCurveTo:function(t,e,r,i,n,o){var a=new Ac(this.currentPoint.clone(),new xe(t,e),new xe(r,i),new xe(n,o));this.curves.push(a),this.currentPoint.set(n,o)},splineThru:function(t){var e=new Oc([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,r,i,n,o){var a=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+a,e+s,r,i,n,o)},absarc:function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},ellipse:function(t,e,r,i,n,o,a,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,r,i,n,o,a,s)},absellipse:function(t,e,r,i,n,o,a,s){var c=new hc(t,e,r,i,n,o,a,s);if(this.curves.length>0){var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)},copy:function(t){return Nc.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=Nc.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Nc.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Fc.prototype=Object.assign(Object.create(Dc.prototype),{constructor:Fc,getPointsHoles:function(t){for(var e=[],r=0,i=this.holes.length;r<i;r++)e[r]=this.holes[r].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Dc.prototype.copy.call(this,t),this.holes=[];for(var e=0,r=t.holes.length;e<r;e++){var i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){var t=Dc.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,r=this.holes.length;e<r;e++){var i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Dc.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,r=t.holes.length;e<r;e++){var i=t.holes[e];this.holes.push((new Dc).fromJSON(i))}return this}}),Bc.prototype=Object.assign(Object.create(kn.prototype),{constructor:Bc,isLight:!0,copy:function(t){return kn.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=kn.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),zc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:zc,isHemisphereLight:!0,copy:function(t){return Bc.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Gc.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Hc.prototype=Object.assign(Object.create(Gc.prototype),{constructor:Hc,isSpotLightShadow:!0,update:function(t){var e=this.camera,r=2*ye.RAD2DEG*t.angle,i=this.mapSize.width/this.mapSize.height,n=t.distance||e.far;r===e.fov&&i===e.aspect&&n===e.far||(e.fov=r,e.aspect=i,e.far=n,e.updateProjectionMatrix())}}),Vc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:Vc,isSpotLight:!0,copy:function(t){return Bc.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),kc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:kc,isPointLight:!0,copy:function(t){return Bc.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),jc.prototype=Object.assign(Object.create(Gc.prototype),{constructor:jc}),Wc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:Wc,isDirectionalLight:!0,copy:function(t){return Bc.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Xc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:Xc,isAmbientLight:!0}),qc.prototype=Object.assign(Object.create(Bc.prototype),{constructor:qc,isRectAreaLight:!0,copy:function(t){return Bc.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Bc.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),Yc.prototype=Object.assign(Object.create(oh.prototype),{constructor:Yc,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:$t,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Zc.prototype=Object.assign(Object.create(oh.prototype),{constructor:Zc,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:$t,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Object.assign(Jc.prototype,{evaluate:function(t){var e=this.parameterPositions,r=this._cachedIndex,i=e[r],n=e[r-1];t:{e:{var o;r:{i:if(!(t<i)){for(var a=r+2;;){if(void 0===i){if(t<n)break i;return r=e.length,this._cachedIndex=r,this.afterEnd_(r-1,t,n)}if(r===a)break;if(n=i,t<(i=e[++r]))break e}o=e.length;break r}if(t>=n)break t;var s=e[1];t<s&&(r=2,n=s);for(a=r-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(r===a)break;if(i=n,t>=(n=e[--r-1]))break e}o=r,r=0}for(;r<o;){var c=r+o>>>1;t<e[c]?o=c:r=c+1}if(i=e[r],void 0===(n=e[r-1]))return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return r=e.length,this._cachedIndex=r,this.afterEnd_(r-1,n,t)}this._cachedIndex=r,this.intervalChanged_(r,n,i)}return this.interpolate_(r,n,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,r=this.sampleValues,i=this.valueSize,n=t*i,o=0;o!==i;++o)e[o]=r[n+o];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Jc.prototype,{beforeStart_:Jc.prototype.copySampleValue_,afterEnd_:Jc.prototype.copySampleValue_}),Qc.prototype=Object.assign(Object.create(Jc.prototype),{constructor:Qc,interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=(r-e)/(i-e),h=s+a;s!==h;s+=4)_e.slerpFlat(n,0,o,s-a,o,s,c);return n}}),Kc.prototype=Object.assign(Object.create(oh.prototype),{constructor:Kc,ValueTypeName:"quaternion",DefaultInterpolation:te,InterpolantFactoryMethodLinear:function(t){return new Qc(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),$c.prototype=Object.assign(Object.create(oh.prototype),{constructor:$c,ValueTypeName:"color"}),th.prototype=Object.assign(Object.create(oh.prototype),{constructor:th,ValueTypeName:"number"}),eh.prototype=Object.assign(Object.create(Jc.prototype),{constructor:eh,DefaultSettings_:{endingStart:re,endingEnd:re},intervalChanged_:function(t,e,r){var i=this.parameterPositions,n=t-2,o=t+1,a=i[n],s=i[o];if(void 0===a)switch(this.getSettings_().endingStart){case ie:n=t,a=2*e-r;break;case ne:a=e+i[n=i.length-2]-i[n+1];break;default:n=t,a=r}if(void 0===s)switch(this.getSettings_().endingEnd){case ie:o=t,s=2*r-e;break;case ne:o=1,s=r+i[1]-i[0];break;default:o=t-1,s=e}var c=.5*(r-e),h=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(s-r),this._offsetPrev=n*h,this._offsetNext=o*h},interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=s-a,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(r-e)/(i-e),f=d*d,m=f*d,v=-u*m+2*u*f-u*d,g=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,b=0;b!==a;++b)n[b]=v*o[h+b]+g*o[c+b]+y*o[s+b]+x*o[l+b];return n}}),rh.prototype=Object.assign(Object.create(Jc.prototype),{constructor:rh,interpolate_:function(t,e,r,i){for(var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=t*a,c=s-a,h=(r-e)/(i-e),l=1-h,u=0;u!==a;++u)n[u]=o[c+u]*l+o[s+u]*h;return n}}),ih.prototype=Object.assign(Object.create(Jc.prototype),{constructor:ih,interpolate_:function(t){return this.copySampleValue_(t-1)}});var nh={arraySlice:function(t,e,r){return nh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==r?r:t.length)):t.slice(e,r)},convertArray:function(t,e,r){return!t||!r&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,r=new Array(e),i=0;i!==e;++i)r[i]=i;return r.sort(function(e,r){return t[e]-t[r]}),r},sortedArray:function(t,e,r){for(var i=t.length,n=new t.constructor(i),o=0,a=0;a!==i;++o)for(var s=r[o]*e,c=0;c!==e;++c)n[a++]=t[s+c];return n},flattenJSON:function(t,e,r,i){for(var n=1,o=t[0];void 0!==o&&void 0===o[i];)o=t[n++];if(void 0!==o){var a=o[i];if(void 0!==a)if(Array.isArray(a))do{void 0!==(a=o[i])&&(e.push(o.time),r.push.apply(r,a)),o=t[n++]}while(void 0!==o);else if(void 0!==a.toArray)do{void 0!==(a=o[i])&&(e.push(o.time),a.toArray(r,r.length)),o=t[n++]}while(void 0!==o);else do{void 0!==(a=o[i])&&(e.push(o.time),r.push(a)),o=t[n++]}while(void 0!==o)}}};function oh(t,e,r,i){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=nh.convertArray(e,this.TimeBufferType),this.values=nh.convertArray(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation),this.validate(),this.optimize()}function ah(t,e,r,i){oh.call(this,t,e,r,i)}function sh(t,e,r){this.name=t,this.tracks=r,this.duration=void 0!==e?e:-1,this.uuid=ye.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function ch(t){this.manager=void 0!==t?t:tc,this.textures={}}function hh(t){this.manager=void 0!==t?t:tc}exports.AnimationUtils=nh,Object.assign(oh,{parse:function(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=oh._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var r=[],i=[];nh.flattenJSON(t.keys,r,i,"value"),t.times=r,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,r=t.constructor;if(void 0!==r.toJSON)e=r.toJSON(t);else{e={name:t.name,times:nh.convertArray(t.times,Array),values:nh.convertArray(t.values,Array)};var i=t.getInterpolation();i!==t.DefaultInterpolation&&(e.interpolation=i)}return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return th;case"vector":case"vector2":case"vector3":case"vector4":return ah;case"color":return $c;case"quaternion":return Kc;case"bool":case"boolean":return Zc;case"string":return Yc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}}),Object.assign(oh.prototype,{constructor:oh,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:te,InterpolantFactoryMethodDiscrete:function(t){return new ih(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new rh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new eh(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case $t:e=this.InterpolantFactoryMethodDiscrete;break;case te:e=this.InterpolantFactoryMethodLinear;break;case ee:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)this.createInterpolant=e;else{var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrack:",r)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return $t;case this.InterpolantFactoryMethodLinear:return te;case this.InterpolantFactoryMethodSmooth:return ee}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,r=0,i=e.length;r!==i;++r)e[r]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,r=0,i=e.length;r!==i;++r)e[r]*=t;return this},trim:function(t,e){for(var r=this.times,i=r.length,n=0,o=i-1;n!==i&&r[n]<t;)++n;for(;-1!==o&&r[o]>e;)--o;if(++o,0!==n||o!==i){n>=o&&(n=(o=Math.max(o,1))-1);var a=this.getValueSize();this.times=nh.arraySlice(r,n,o),this.values=nh.arraySlice(this.values,n*a,o*a)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var r=this.times,i=this.values,n=r.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var o=null,a=0;a!==n;a++){var s=r[a];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,s),t=!1;break}if(null!==o&&o>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,s,o),t=!1;break}o=s}if(void 0!==i&&nh.isTypedArray(i)){a=0;for(var c=i.length;a!==c;++a){var h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,r=this.getValueSize(),i=this.getInterpolation()===ee,n=1,o=t.length-1,a=1;a<o;++a){var s=!1,c=t[a];if(c!==t[a+1]&&(1!==a||c!==c[0]))if(i)s=!0;else for(var h=a*r,l=h-r,u=h+r,p=0;p!==r;++p){var d=e[h+p];if(d!==e[l+p]||d!==e[u+p]){s=!0;break}}if(s){if(a!==n){t[n]=t[a];var f=a*r,m=n*r;for(p=0;p!==r;++p)e[m+p]=e[f+p]}++n}}if(o>0){t[n]=t[o];for(f=o*r,m=n*r,p=0;p!==r;++p)e[m+p]=e[f+p];++n}return n!==t.length&&(this.times=nh.arraySlice(t,0,n),this.values=nh.arraySlice(e,0,n*r)),this}}),ah.prototype=Object.assign(Object.create(oh.prototype),{constructor:ah,ValueTypeName:"vector"}),Object.assign(sh,{parse:function(t){for(var e=[],r=t.tracks,i=1/(t.fps||1),n=0,o=r.length;n!==o;++n)e.push(oh.parse(r[n]).scale(i));return new sh(t.name,t.duration,e)},toJSON:function(t){for(var e=[],r=t.tracks,i={name:t.name,duration:t.duration,tracks:e},n=0,o=r.length;n!==o;++n)e.push(oh.toJSON(r[n]));return i},CreateFromMorphTargetSequence:function(t,e,r,i){for(var n=e.length,o=[],a=0;a<n;a++){var s=[],c=[];s.push((a+n-1)%n,a,(a+1)%n),c.push(0,1,0);var h=nh.getKeyframeOrder(s);s=nh.sortedArray(s,1,h),c=nh.sortedArray(c,1,h),i||0!==s[0]||(s.push(n),c.push(c[0])),o.push(new th(".morphTargetInfluences["+e[a].name+"]",s,c).scale(1/r))}return new sh(t,-1,o)},findByName:function(t,e){var r=t;if(!Array.isArray(t)){var i=t;r=i.geometry&&i.geometry.animations||i.animations}for(var n=0;n<r.length;n++)if(r[n].name===e)return r[n];return null},CreateClipsFromMorphTargetSequences:function(t,e,r){for(var i={},n=/^([\w-]*?)([\d]+)$/,o=0,a=t.length;o<a;o++){var s=t[o],c=s.name.match(n);if(c&&c.length>1){var h=i[u=c[1]];h||(i[u]=h=[]),h.push(s)}}var l=[];for(var u in i)l.push(sh.CreateFromMorphTargetSequence(u,i[u],e,r));return l},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var r=function(t,e,r,i,n){if(0!==r.length){var o=[],a=[];nh.flattenJSON(r,o,a,i),0!==o.length&&n.push(new t(e,o,a))}},i=[],n=t.name||"default",o=t.length||-1,a=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;if(h&&0!==h.length)if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(var p=0;p<h[u].morphTargets.length;p++)l[h[u].morphTargets[p]]=-1;for(var d in l){var f=[],m=[];for(p=0;p!==h[u].morphTargets.length;++p){var v=h[u];f.push(v.time),m.push(v.morphTarget===d?1:0)}i.push(new th(".morphTargetInfluence["+d+"]",f,m))}o=l.length*(a||1)}else{var g=".bones["+e[c].name+"]";r(ah,g+".position",h,"pos",i),r(Kc,g+".quaternion",h,"rot",i),r(ah,g+".scale",h,"scl",i)}}return 0===i.length?null:new sh(n,o,i)}}),Object.assign(sh.prototype,{resetDuration:function(){for(var t=0,e=0,r=this.tracks.length;e!==r;++e){var i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(ch.prototype,{load:function(t,e,r,i){var n=this;new rc(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setTextures:function(t){this.textures=t},parse:function(t){var e=this.textures;function r(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}var i=new Qs[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearCoat&&(i.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(i.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(i.uniforms=t.uniforms),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(i.vertexColors=t.vertexColors),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.side&&(i.side=t.side),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=r(t.map)),void 0!==t.alphaMap&&(i.alphaMap=r(t.alphaMap),i.transparent=!0),void 0!==t.bumpMap&&(i.bumpMap=r(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=r(t.normalMap)),void 0!==t.normalScale){var n=t.normalScale;!1===Array.isArray(n)&&(n=[n,n]),i.normalScale=(new xe).fromArray(n)}return void 0!==t.displacementMap&&(i.displacementMap=r(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=r(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=r(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=r(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=r(t.specularMap)),void 0!==t.envMap&&(i.envMap=r(t.envMap)),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.lightMap&&(i.lightMap=r(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=r(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=r(t.gradientMap)),i}}),Object.assign(hh.prototype,{load:function(t,e,r,i){var n=this;new rc(n.manager).load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},parse:function(t){var e=new co,r=t.data.index;if(void 0!==r){var i=new lh[r.type](r.array);e.setIndex(new Zn(i,1))}var n=t.data.attributes;for(var o in n){var a=n[o];i=new lh[a.type](a.array);e.addAttribute(o,new Zn(i,a.itemSize,a.normalized))}var s=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==s)for(var c=0,h=s.length;c!==h;++c){var l=s[c];e.addGroup(l.start,l.count,l.materialIndex)}var u=t.data.boundingSphere;if(void 0!==u){var p=new we;void 0!==u.center&&p.fromArray(u.center),e.boundingSphere=new Nn(p,u.radius)}return e}});var lh={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function uh(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}uh.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,r=0,i=e.length;r<i;r+=2){var n=e[r],o=e[r+1];if(n.test(t))return o}return null}},Object.assign(uh.prototype,{crossOrigin:void 0,initMaterials:function(t,e,r){for(var i=[],n=0;n<t.length;++n)i[n]=this.createMaterial(t[n],e,r);return i},createMaterial:function(){var t={NoBlending:b,NormalBlending:_,AdditiveBlending:w,SubtractiveBlending:M,MultiplyBlending:E,CustomBlending:T},e=new xr,r=new sc,i=new ch;return function(n,o,a){var s={};function c(t,e,i,n,c){var h,l=o+t,u=uh.Handlers.get(l);null!==u?h=u.load(l):(r.setCrossOrigin(a),h=r.load(l)),void 0!==e&&(h.repeat.fromArray(e),1!==e[0]&&(h.wrapS=pt),1!==e[1]&&(h.wrapT=pt)),void 0!==i&&h.offset.fromArray(i),void 0!==n&&("repeat"===n[0]&&(h.wrapS=pt),"mirror"===n[0]&&(h.wrapS=ft),"repeat"===n[1]&&(h.wrapT=pt),"mirror"===n[1]&&(h.wrapT=ft)),void 0!==c&&(h.anisotropy=c);var p=ye.generateUUID();return s[p]=h,p}var h={uuid:ye.generateUUID(),type:"MeshLambertMaterial"};for(var l in n){var u=n[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=u;break;case"blending":h.blending=t[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":h.color=e.fromArray(u).getHex();break;case"colorSpecular":h.specular=e.fromArray(u).getHex();break;case"colorEmissive":h.emissive=e.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=c(u,n.mapDiffuseRepeat,n.mapDiffuseOffset,n.mapDiffuseWrap,n.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=c(u,n.mapEmissiveRepeat,n.mapEmissiveOffset,n.mapEmissiveWrap,n.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=c(u,n.mapLightRepeat,n.mapLightOffset,n.mapLightWrap,n.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=c(u,n.mapAORepeat,n.mapAOOffset,n.mapAOWrap,n.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=c(u,n.mapBumpRepeat,n.mapBumpOffset,n.mapBumpWrap,n.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=c(u,n.mapNormalRepeat,n.mapNormalOffset,n.mapNormalWrap,n.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=c(u,n.mapSpecularRepeat,n.mapSpecularOffset,n.mapSpecularWrap,n.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=c(u,n.mapMetalnessRepeat,n.mapMetalnessOffset,n.mapMetalnessWrap,n.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=c(u,n.mapRoughnessRepeat,n.mapRoughnessOffset,n.mapRoughnessWrap,n.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=c(u,n.mapAlphaRepeat,n.mapAlphaOffset,n.mapAlphaWrap,n.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=d;break;case"doubleSided":h.side=f;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[l]=u;break;case"vertexColors":!0===u&&(h.vertexColors=x),"face"===u&&(h.vertexColors=y);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,u)}}return"MeshBasicMaterial"===h.type&&delete h.emissive,"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),i.setTextures(s),i.parse(h)}}()});var ph={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e="",r=0,i=t.length;r<i;r++)e+=String.fromCharCode(t[r]);return e},extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")}};function dh(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:tc,this.withCredentials=!1}function fh(t){this.manager=void 0!==t?t:tc,this.texturePath=""}exports.LoaderUtils=ph,Object.assign(dh.prototype,{load:function(t,e,r,i){var n=this,o=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:ph.extractUrlBase(t),a=new rc(this.manager);a.setWithCredentials(this.withCredentials),a.load(t,function(r){var i=JSON.parse(r),a=i.metadata;if(void 0!==a){var s=a.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}}var c=n.parse(i,o);e(c.geometry,c.materials)},r,i)},setTexturePath:function(t){this.texturePath=t},parse:function(){return function(t,e){void 0!==t.data&&(t=t.data),void 0!==t.scale?t.scale=1/t.scale:t.scale=1;var r=new Yn;return function(t,e){function r(t,e){return t&1<<e}var i,n,o,a,s,c,h,l,u,p,d,f,m,v,g,y,x,b,_,w,M,E,T,S,A,R=t.faces,L=t.vertices,P=t.normals,C=t.colors,I=t.scale,O=0;if(void 0!==t.uvs){for(i=0;i<t.uvs.length;i++)t.uvs[i].length&&O++;for(i=0;i<O;i++)e.faceVertexUvs[i]=[]}for(a=0,s=L.length;a<s;)(b=new we).x=L[a++]*I,b.y=L[a++]*I,b.z=L[a++]*I,e.vertices.push(b);for(a=0,s=R.length;a<s;)if(d=r(p=R[a++],0),f=r(p,1),m=r(p,3),v=r(p,4),g=r(p,5),y=r(p,6),x=r(p,7),d){if((w=new Xn).a=R[a],w.b=R[a+1],w.c=R[a+3],(M=new Xn).a=R[a+1],M.b=R[a+2],M.c=R[a+3],a+=4,f&&(u=R[a++],w.materialIndex=u,M.materialIndex=u),o=e.faces.length,m)for(i=0;i<O;i++)for(S=t.uvs[i],e.faceVertexUvs[i][o]=[],e.faceVertexUvs[i][o+1]=[],n=0;n<4;n++)A=new xe(S[2*(l=R[a++])],S[2*l+1]),2!==n&&e.faceVertexUvs[i][o].push(A),0!==n&&e.faceVertexUvs[i][o+1].push(A);if(v&&(h=3*R[a++],w.normal.set(P[h++],P[h++],P[h]),M.normal.copy(w.normal)),g)for(i=0;i<4;i++)h=3*R[a++],T=new we(P[h++],P[h++],P[h]),2!==i&&w.vertexNormals.push(T),0!==i&&M.vertexNormals.push(T);if(y&&(E=C[c=R[a++]],w.color.setHex(E),M.color.setHex(E)),x)for(i=0;i<4;i++)E=C[c=R[a++]],2!==i&&w.vertexColors.push(new xr(E)),0!==i&&M.vertexColors.push(new xr(E));e.faces.push(w),e.faces.push(M)}else{if((_=new Xn).a=R[a++],_.b=R[a++],_.c=R[a++],f&&(u=R[a++],_.materialIndex=u),o=e.faces.length,m)for(i=0;i<O;i++)for(S=t.uvs[i],e.faceVertexUvs[i][o]=[],n=0;n<3;n++)A=new xe(S[2*(l=R[a++])],S[2*l+1]),e.faceVertexUvs[i][o].push(A);if(v&&(h=3*R[a++],_.normal.set(P[h++],P[h++],P[h])),g)for(i=0;i<3;i++)h=3*R[a++],T=new we(P[h++],P[h++],P[h]),_.vertexNormals.push(T);if(y&&(c=R[a++],_.color.setHex(C[c])),x)for(i=0;i<3;i++)c=R[a++],_.vertexColors.push(new xr(C[c]));e.faces.push(_)}}(t,r),function(t,e){var r=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,n=t.skinWeights.length;i<n;i+=r){var o=t.skinWeights[i],a=r>1?t.skinWeights[i+1]:0,s=r>2?t.skinWeights[i+2]:0,c=r>3?t.skinWeights[i+3]:0;e.skinWeights.push(new Se(o,a,s,c))}if(t.skinIndices)for(i=0,n=t.skinIndices.length;i<n;i+=r){var h=t.skinIndices[i],l=r>1?t.skinIndices[i+1]:0,u=r>2?t.skinIndices[i+2]:0,p=r>3?t.skinIndices[i+3]:0;e.skinIndices.push(new Se(h,l,u,p))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||e.skinIndices.length!==e.vertices.length)&&console.warn("When skinning, number of vertices ("+e.vertices.length+"), skinIndices ("+e.skinIndices.length+"), and skinWeights ("+e.skinWeights.length+") should match.")}(t,r),function(t,e){var r=t.scale;if(void 0!==t.morphTargets)for(var i=0,n=t.morphTargets.length;i<n;i++){e.morphTargets[i]={},e.morphTargets[i].name=t.morphTargets[i].name,e.morphTargets[i].vertices=[];for(var o=e.morphTargets[i].vertices,a=t.morphTargets[i].vertices,s=0,c=a.length;s<c;s+=3){var h=new we;h.x=a[s]*r,h.y=a[s+1]*r,h.z=a[s+2]*r,o.push(h)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var l=e.faces,u=t.morphColors[0].colors;for(i=0,n=l.length;i<n;i++)l[i].color.fromArray(u,3*i)}}(t,r),function(t,e){var r=[],i=[];void 0!==t.animation&&i.push(t.animation),void 0!==t.animations&&(t.animations.length?i=i.concat(t.animations):i.push(t.animations));for(var n=0;n<i.length;n++){var o=sh.parseAnimation(i[n],e.bones);o&&r.push(o)}if(e.morphTargets){var a=sh.CreateClipsFromMorphTargetSequences(e.morphTargets,10);r=r.concat(a)}r.length>0&&(e.animations=r)}(t,r),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===t.materials||0===t.materials.length?{geometry:r}:{geometry:r,materials:uh.prototype.initMaterials(t.materials,e,this.crossOrigin)}}}()}),Object.assign(fh.prototype,{load:function(t,e,r,i){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var n=this;new rc(n.manager).load(t,function(r){var o=null;try{o=JSON.parse(r)}catch(s){return void 0!==i&&i(s),void console.error("THREE:ObjectLoader: Can't parse "+t+".",s.message)}var a=o.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?n.parse(o,e):console.error("THREE.ObjectLoader: Can't load "+t+". Use THREE.JSONLoader instead.")},r,i)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var r=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,r),n=this.parseImages(t.images,function(){void 0!==e&&e(s)}),o=this.parseTextures(t.textures,n),a=this.parseMaterials(t.materials,o),s=this.parseObject(t.object,i,a);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var r=0,i=t.length;r<i;r++){var n=(new Fc).fromJSON(t[r]);e[n.uuid]=n}return e},parseGeometries:function(t,e){var r={};if(void 0!==t)for(var i=new dh,n=new hh,o=0,a=t.length;o<a;o++){var s,c=t[o];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new Hs[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new Hs[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new Hs[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new Hs[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new Hs[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new Hs[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new Hs[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new Hs[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new Hs[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new Hs[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"LatheGeometry":case"LatheBufferGeometry":s=new Hs[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new Hs[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":var h=[];for(o=0,a=c.shapes.length;o<a;o++){var l=e[c.shapes[o]];h.push(l)}s=new Hs[c.type](h,c.curveSegments);break;case"BufferGeometry":s=n.parse(c);break;case"Geometry":s=i.parse(c,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}s.uuid=c.uuid,void 0!==c.name&&(s.name=c.name),r[c.uuid]=s}return r},parseMaterials:function(t,e){var r={};if(void 0!==t){var i=new ch;i.setTextures(e);for(var n=0,o=t.length;n<o;n++){var a=t[n];if("MultiMaterial"===a.type){for(var s=[],c=0;c<a.materials.length;c++)s.push(i.parse(a.materials[c]));r[a.uuid]=s}else r[a.uuid]=i.parse(a)}}return r},parseAnimations:function(t){for(var e=[],r=0;r<t.length;r++){var i=sh.parse(t[r]);e.push(i)}return e},parseImages:function(t,e){var r=this,i={};function n(t){return r.manager.itemStart(t),o.load(t,function(){r.manager.itemEnd(t)},void 0,function(){r.manager.itemEnd(t),r.manager.itemError(t)})}if(void 0!==t&&t.length>0){var o=new oc(new $s(e));o.setCrossOrigin(this.crossOrigin);for(var a=0,s=t.length;a<s;a++){var c=t[a],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:r.texturePath+c.url;i[c.uuid]=n(h)}}return i},parseTextures:function(t,e){function r(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var i={};if(void 0!==t)for(var n=0,o=t.length;n<o;n++){var a=t[n];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===e[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);var s=new Te(e[a.image]);s.needsUpdate=!0,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=r(a.mapping,vh)),void 0!==a.offset&&s.offset.fromArray(a.offset),void 0!==a.repeat&&s.repeat.fromArray(a.repeat),void 0!==a.center&&s.center.fromArray(a.center),void 0!==a.rotation&&(s.rotation=a.rotation),void 0!==a.wrap&&(s.wrapS=r(a.wrap[0],gh),s.wrapT=r(a.wrap[1],gh)),void 0!==a.minFilter&&(s.minFilter=r(a.minFilter,yh)),void 0!==a.magFilter&&(s.magFilter=r(a.magFilter,yh)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),void 0!==a.flipY&&(s.flipY=a.flipY),i[a.uuid]=s}return i},parseObject:function(){var t=new be;return function(e,r,i){var n;function o(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),r[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],r=0,n=t.length;r<n;r++){var o=t[r];void 0===i[o]&&console.warn("THREE.ObjectLoader: Undefined material",o),e.push(i[o])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}switch(e.type){case"Scene":n=new ca,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new xr(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new sa(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new aa(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new $o(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new Wn(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":n=new Xc(e.color,e.intensity);break;case"DirectionalLight":n=new Wc(e.color,e.intensity);break;case"PointLight":n=new kc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new qc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new Vc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new zc(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=o(e.geometry),c=a(e.material);n=s.bones&&s.bones.length>0?new ma(s,c):new xo(s,c);break;case"LOD":n=new pa;break;case"Line":n=new ga(o(e.geometry),a(e.material),e.mode);break;case"LineLoop":n=new xa(o(e.geometry),a(e.material));break;case"LineSegments":n=new ya(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":n=new _a(o(e.geometry),a(e.material));break;case"Sprite":n=new ua(a(e.material));break;case"Group":n=new wa;break;default:n=new kn}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.children)for(var h=e.children,l=0;l<h.length;l++)n.add(this.parseObject(h[l],r,i));if("LOD"===e.type)for(var u=e.levels,p=0;p<u.length;p++){var d=u[p],f=n.getObjectByProperty("uuid",d.object);void 0!==f&&n.addLevel(f,d.distance)}return n}}()});var mh,vh={UVMapping:nt,CubeReflectionMapping:ot,CubeRefractionMapping:at,EquirectangularReflectionMapping:st,EquirectangularRefractionMapping:ct,SphericalReflectionMapping:ht,CubeUVReflectionMapping:lt,CubeUVRefractionMapping:ut},gh={RepeatWrapping:pt,ClampToEdgeWrapping:dt,MirroredRepeatWrapping:ft},yh={NearestFilter:mt,NearestMipMapNearestFilter:vt,NearestMipMapLinearFilter:gt,LinearFilter:yt,LinearMipMapNearestFilter:xt,LinearMipMapLinearFilter:bt};function xh(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.manager=void 0!==t?t:tc,this.options=void 0}function bh(){this.type="ShapePath",this.subPaths=[],this.currentPath=null}function _h(t){this.type="Font",this.data=t}function wh(t){this.manager=void 0!==t?t:tc}xh.prototype={constructor:xh,setOptions:function(t){return this.options=t,this},load:function(t,e,r,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var n=this,o=Ks.get(t);if(void 0!==o)return n.manager.itemStart(t),setTimeout(function(){e&&e(o),n.manager.itemEnd(t)},0),o;fetch(t).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,n.options)}).then(function(r){Ks.add(t,r),e&&e(r),n.manager.itemEnd(t)}).catch(function(e){i&&i(e),n.manager.itemEnd(t),n.manager.itemError(t)})},setCrossOrigin:function(){return this},setPath:function(t){return this.path=t,this}},Object.assign(bh.prototype,{moveTo:function(t,e){this.currentPath=new Dc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,r,i){this.currentPath.quadraticCurveTo(t,e,r,i)},bezierCurveTo:function(t,e,r,i,n,o){this.currentPath.bezierCurveTo(t,e,r,i,n,o)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new Fc;o.curves=n.curves,e.push(o)}return e}function i(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],c=s.x-a.x,h=s.y-a.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(a=e[o],c=-c,s=e[n],h=-h),t.y<a.y||t.y>s.y)continue;if(t.y===a.y){if(t.x===a.x)return!0}else{var l=h*(t.x-a.x)-c*(t.y-a.y);if(0===l)return!0;if(l<0)continue;i=!i}}else{if(t.y!==a.y)continue;if(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x)return!0}}return i}var n=bs.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return r(o);var a,s,c,h=[];if(1===o.length)return s=o[0],(c=new Fc).curves=s.curves,h.push(c),h;var l=!n(o[0].getPoints());l=t?!l:l;var u,p,d=[],f=[],m=[],v=0;f[v]=void 0,m[v]=[];for(var g=0,y=o.length;g<y;g++)a=n(u=(s=o[g]).getPoints()),(a=t?!a:a)?(!l&&f[v]&&v++,f[v]={s:new Fc,p:u},f[v].s.curves=s.curves,l&&v++,m[v]=[]):m[v].push({h:s,p:u[0]});if(!f[0])return r(o);if(f.length>1){for(var x=!1,b=[],_=0,w=f.length;_<w;_++)d[_]=[];for(_=0,w=f.length;_<w;_++)for(var M=m[_],E=0;E<M.length;E++){for(var T=M[E],S=!0,A=0;A<f.length;A++)i(T.p,f[A].p)&&(_!==A&&b.push({froms:_,tos:A,hole:E}),S?(S=!1,d[A].push(T)):x=!0);S&&d[_].push(T)}b.length>0&&(x||(m=d))}g=0;for(var R=f.length;g<R;g++){c=f[g].s,h.push(c);for(var L=0,P=(p=m[g]).length;L<P;L++)c.holes.push(p[L].h)}return h}}),Object.assign(_h.prototype,{isFont:!0,generateShapes:function(t,e,r){function i(t,e,r,i){var o=n.glyphs[t]||n.glyphs["?"];if(o){var a,s,c,h,l,u,p,d,f,m=new bh,v=[];if(o.o)for(var g=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),y=0,x=g.length;y<x;){switch(g[y++]){case"m":a=g[y++]*e+r,s=g[y++]*e+i,m.moveTo(a,s);break;case"l":a=g[y++]*e+r,s=g[y++]*e+i,m.lineTo(a,s);break;case"q":c=g[y++]*e+r,h=g[y++]*e+i,l=g[y++]*e+r,u=g[y++]*e+i,m.quadraticCurveTo(l,u,c,h),(f=v[v.length-1])&&(f.x,f.y);break;case"b":c=g[y++]*e+r,h=g[y++]*e+i,l=g[y++]*e+r,u=g[y++]*e+i,p=g[y++]*e+r,d=g[y++]*e+i,m.bezierCurveTo(l,u,p,d,c,h),(f=v[v.length-1])&&(f.x,f.y)}}return{offsetX:o.ha*e,path:m}}}void 0===e&&(e=100),void 0===r&&(r=4);for(var n=this.data,o=function(t){for(var r=String(t).split(""),o=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*o,s=0,c=0,h=[],l=0;l<r.length;l++){var u=r[l];if("\n"===u)s=0,c-=a;else{var p=i(u,o,s,c);s+=p.offsetX,h.push(p.path)}}return h}(t),a=[],s=0,c=o.length;s<c;s++)Array.prototype.push.apply(a,o[s].toShapes());return a}}),Object.assign(wh.prototype,{load:function(t,e,r,i){var n=this,o=new rc(this.manager);o.setPath(this.path),o.load(t,function(t){var r;try{r=JSON.parse(t)}catch(o){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(t.substring(65,t.length-2))}var i=n.parse(r);e&&e(i)},r,i)},parse:function(t){return new _h(t)},setPath:function(t){return this.path=t,this}});var Mh,Eh,Th={getContext:function(){return void 0===mh&&(mh=new(window.AudioContext||window.webkitAudioContext)),mh},setContext:function(t){mh=t}};function Sh(t){this.manager=void 0!==t?t:tc}function Ah(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new $o,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new $o,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Rh(t,e,r){kn.call(this),this.type="CubeCamera";var i=new $o(90,1,t,e);i.up.set(0,-1,0),i.lookAt(new we(1,0,0)),this.add(i);var n=new $o(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new we(-1,0,0)),this.add(n);var o=new $o(90,1,t,e);o.up.set(0,0,1),o.lookAt(new we(0,1,0)),this.add(o);var a=new $o(90,1,t,e);a.up.set(0,0,-1),a.lookAt(new we(0,-1,0)),this.add(a);var s=new $o(90,1,t,e);s.up.set(0,-1,0),s.lookAt(new we(0,0,1)),this.add(s);var c=new $o(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new we(0,0,-1)),this.add(c);var h={format:Ut,magFilter:yt,minFilter:yt};this.renderTarget=new Re(r,r,h),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,h=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,i,r),r.activeCubeFace=1,t.render(e,n,r),r.activeCubeFace=2,t.render(e,o,r),r.activeCubeFace=3,t.render(e,a,r),r.activeCubeFace=4,t.render(e,s,r),r.texture.generateMipmaps=h,r.activeCubeFace=5,t.render(e,c,r),t.setRenderTarget(null)},this.clear=function(t,e,r,i){for(var n=this.renderTarget,o=0;o<6;o++)n.activeCubeFace=o,t.setRenderTarget(n),t.clear(e,r,i);t.setRenderTarget(null)}}function Lh(){kn.call(this),this.type="AudioListener",this.context=Th.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function Ph(t){kn.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function Ch(t){Ph.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function Ih(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Oh(t,e,r){this.binding=t,this.valueSize=r;var i,n=Float64Array;switch(e){case"quaternion":i=this._slerp;break;case"string":case"bool":n=Array,i=this._select;break;default:i=this._lerp}this.buffer=new n(4*r),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function Uh(t,e,r){var i=r||Nh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}function Nh(t,e,r){this.path=e,this.parsedPath=r||Nh.parseTrackName(e),this.node=Nh.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Dh(){this.uuid=ye.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,r=arguments.length;e!==r;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}function Fh(t,e,r){this._mixer=t,this._clip=e,this._localRoot=r||null;for(var i=e.tracks,n=i.length,o=new Array(n),a={endingStart:re,endingEnd:re},s=0;s!==n;++s){var c=i[s].createInterpolant(null);o[s]=c,c.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(n),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Qt,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Bh(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function zh(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function Gh(){co.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function Hh(t,e,r,i){this.uuid=ye.generateUUID(),this.data=t,this.itemSize=e,this.offset=r,this.normalized=!0===i}function Vh(t,e){this.uuid=ye.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function kh(t,e,r){Vh.call(this,t,e),this.meshPerAttribute=r||1}function jh(t,e,r){Zn.call(this,t,e),this.meshPerAttribute=r||1}function Wh(t,e,r,i){this.ray=new vo(t,e),this.near=r||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Xh(t,e){return t.distance-e.distance}function qh(t,e,r,i){if(!1!==t.visible&&(t.raycast(e,r),!0===i))for(var n=t.children,o=0,a=n.length;o<a;o++)qh(n[o],e,r,!0)}function Yh(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function Zh(t,e,r){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==r?r:0,this}function Jh(t,e,r){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==r?r:0,this}function Qh(t){kn.call(this),this.material=t,this.render=function(){}}function Kh(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==r?r:16711680,o=void 0!==i?i:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=3*s.faces.length:s&&s.isBufferGeometry&&(a=s.attributes.normal.count);var c=new co,h=new io(2*a*3,3);c.addAttribute("position",h),ya.call(this,c,new va({color:n,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}function $h(t,e){kn.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var r=new co,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,o=1;n<32;n++,o++){var a=n/32*Math.PI*2,s=o/32*Math.PI*2;i.push(Math.cos(a),Math.sin(a),1,Math.cos(s),Math.sin(s),1)}r.addAttribute("position",new io(i,3));var c=new va({fog:!1});this.cone=new ya(r,c),this.add(this.cone),this.update()}function tl(t){var e=[];t&&t.isBone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,tl(t.children[r]));return e}function el(t){for(var e=tl(t),r=new co,i=[],n=[],o=new xr(0,0,1),a=new xr(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),n.push(o.r,o.g,o.b),n.push(a.r,a.g,a.b))}r.addAttribute("position",new io(i,3)),r.addAttribute("color",new io(n,3));var h=new va({vertexColors:x,depthTest:!1,depthWrite:!1,transparent:!0});ya.call(this,r,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function rl(t,e,r){this.light=t,this.light.updateMatrixWorld(),this.color=r;var i=new Ss(e,4,2),n=new fo({wireframe:!0,fog:!1});xo.call(this,i,n),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function il(t,e){kn.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var r=new va({fog:!1}),i=new co;i.addAttribute("position",new Zn(new Float32Array(15),3)),this.line=new ga(i,r),this.add(this.line),this.update()}function nl(t,e,r){kn.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;var i=new Ua(e);i.rotateY(.5*Math.PI),this.material=new fo({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=x);var n=i.getAttribute("position"),o=new Float32Array(3*n.count);i.addAttribute("color",new Zn(o,3)),this.add(new xo(i,this.material)),this.update()}function ol(t,e,r,i){t=t||10,e=e||10,r=new xr(void 0!==r?r:4473924),i=new xr(void 0!==i?i:8947848);for(var n=e/2,o=t/e,a=t/2,s=[],c=[],h=0,l=0,u=-a;h<=e;h++,u+=o){s.push(-a,0,u,a,0,u),s.push(u,0,-a,u,0,a);var p=h===n?r:i;p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3}var d=new co;d.addAttribute("position",new io(s,3)),d.addAttribute("color",new io(c,3));var f=new va({vertexColors:x});ya.call(this,d,f)}function al(t,e,r,i,n,o){t=t||10,e=e||16,r=r||8,i=i||64,n=new xr(void 0!==n?n:4473924),o=new xr(void 0!==o?o:8947848);var a,s,c,h,l,u,p,d=[],f=[];for(h=0;h<=e;h++)c=h/e*(2*Math.PI),a=Math.sin(c)*t,s=Math.cos(c)*t,d.push(0,0,0),d.push(a,0,s),p=1&h?n:o,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(h=0;h<=r;h++)for(p=1&h?n:o,u=t-t/r*h,l=0;l<i;l++)c=l/i*(2*Math.PI),a=Math.sin(c)*u,s=Math.cos(c)*u,d.push(a,0,s),f.push(p.r,p.g,p.b),c=(l+1)/i*(2*Math.PI),a=Math.sin(c)*u,s=Math.cos(c)*u,d.push(a,0,s),f.push(p.r,p.g,p.b);var m=new co;m.addAttribute("position",new io(d,3)),m.addAttribute("color",new io(f,3));var v=new va({vertexColors:x});ya.call(this,m,v)}function sl(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==r?r:16776960,o=void 0!==i?i:1,a=0,s=this.object.geometry;s&&s.isGeometry?a=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var c=new co,h=new io(2*a*3,3);c.addAttribute("position",h),ya.call(this,c,new va({color:n,linewidth:o})),this.matrixAutoUpdate=!1,this.update()}function cl(t,e,r){kn.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===e&&(e=1);var i=new co;i.addAttribute("position",new io([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var n=new va({fog:!1});this.lightPlane=new ga(i,n),this.add(this.lightPlane),(i=new co).addAttribute("position",new io([0,0,0,0,0,1],3)),this.targetLine=new ga(i,n),this.add(this.targetLine),this.update()}function hl(t){var e=new co,r=new va({color:16777215,vertexColors:y}),i=[],n=[],o={},a=new xr(16755200),s=new xr(16711680),c=new xr(43775),h=new xr(16777215),l=new xr(3355443);function u(t,e,r){p(t,r),p(e,r)}function p(t,e){i.push(0,0,0),n.push(e.r,e.g,e.b),void 0===o[t]&&(o[t]=[]),o[t].push(i.length/3-1)}u("n1","n2",a),u("n2","n4",a),u("n4","n3",a),u("n3","n1",a),u("f1","f2",a),u("f2","f4",a),u("f4","f3",a),u("f3","f1",a),u("n1","f1",a),u("n2","f2",a),u("n3","f3",a),u("n4","f4",a),u("p","n1",s),u("p","n2",s),u("p","n3",s),u("p","n4",s),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",h),u("p","c",l),u("cn1","cn2",l),u("cn3","cn4",l),u("cf1","cf2",l),u("cf3","cf4",l),e.addAttribute("position",new io(i,3)),e.addAttribute("color",new io(n,3)),ya.call(this,e,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}function ll(t,e){this.object=t,void 0===e&&(e=16776960);var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),n=new co;n.setIndex(new Zn(r,1)),n.addAttribute("position",new Zn(i,3)),ya.call(this,n,new va({color:e})),this.matrixAutoUpdate=!1,this.update()}function ul(t,e){this.type="Box3Helper",this.box=t;var r=void 0!==e?e:16776960,i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new co;n.setIndex(new Zn(i,1)),n.addAttribute("position",new io([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),ya.call(this,n,new va({color:r})),this.geometry.computeBoundingSphere()}function pl(t,e,r){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var i=void 0!==r?r:16776960,n=new co;n.addAttribute("position",new io([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),n.computeBoundingSphere(),ga.call(this,n,new va({color:i}));var o=new co;o.addAttribute("position",new io([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new xo(o,new fo({color:i,opacity:.2,transparent:!0,depthWrite:!1})))}function dl(t,e,r,i,n,o){kn.call(this),void 0===i&&(i=16776960),void 0===r&&(r=1),void 0===n&&(n=.2*r),void 0===o&&(o=.2*n),void 0===Mh&&((Mh=new co).addAttribute("position",new io([0,0,0,0,1,0],3)),(Eh=new Ds(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new ga(Mh,new va({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xo(Eh,new fo({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(r,n,o)}function fl(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],r=new co;r.addAttribute("position",new io(e,3)),r.addAttribute("color",new io([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var i=new va({vertexColors:x});ya.call(this,r,i)}exports.AudioContext=Th,Object.assign(Sh.prototype,{load:function(t,e,r,i){var n=new rc(this.manager);n.setResponseType("arraybuffer"),n.load(t,function(t){Th.getContext().decodeAudioData(t,function(t){e(t)})},r,i)}}),Object.assign(Ah.prototype,{update:function(){var t,e,r,i,n,o,a,s,c=new be,h=new be;return function(l){if(t!==this||e!==l.focus||r!==l.fov||i!==l.aspect*this.aspect||n!==l.near||o!==l.far||a!==l.zoom||s!==this.eyeSep){t=this,e=l.focus,r=l.fov,i=l.aspect*this.aspect,n=l.near,o=l.far,a=l.zoom;var u,p,d=l.projectionMatrix.clone(),f=(s=this.eyeSep/2)*n/e,m=n*Math.tan(ye.DEG2RAD*r*.5)/a;h.elements[12]=-s,c.elements[12]=s,u=-m*i+f,p=m*i+f,d.elements[0]=2*n/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraL.projectionMatrix.copy(d),u=-m*i-f,p=m*i-f,d.elements[0]=2*n/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(h),this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c)}}()}),Rh.prototype=Object.create(kn.prototype),Rh.prototype.constructor=Rh,Lh.prototype=Object.assign(Object.create(kn.prototype),{constructor:Lh,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new we,e=new _e,r=new we,i=new we;return function(n){kn.prototype.updateMatrixWorld.call(this,n);var o=this.context.listener,a=this.up;this.matrixWorld.decompose(t,e,r),i.set(0,0,-1).applyQuaternion(e),o.positionX?(o.positionX.setValueAtTime(t.x,this.context.currentTime),o.positionY.setValueAtTime(t.y,this.context.currentTime),o.positionZ.setValueAtTime(t.z,this.context.currentTime),o.forwardX.setValueAtTime(i.x,this.context.currentTime),o.forwardY.setValueAtTime(i.y,this.context.currentTime),o.forwardZ.setValueAtTime(i.z,this.context.currentTime),o.upX.setValueAtTime(a.x,this.context.currentTime),o.upY.setValueAtTime(a.y,this.context.currentTime),o.upZ.setValueAtTime(a.z,this.context.currentTime)):(o.setPosition(t.x,t.y,t.z),o.setOrientation(i.x,i.y,i.z,a.x,a.y,a.z))}}()}),Ph.prototype=Object.assign(Object.create(kn.prototype),{constructor:Ph,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.offset=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),Ch.prototype=Object.assign(Object.create(Ph.prototype),{constructor:Ch,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new we;return function(e){kn.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(Ih.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),r=0;r<e.length;r++)t+=e[r];return t/e.length}}),Object.assign(Oh.prototype,{accumulate:function(t,e){var r=this.buffer,i=this.valueSize,n=t*i+i,o=this.cumulativeWeight;if(0===o){for(var a=0;a!==i;++a)r[n+a]=r[a];o=e}else{var s=e/(o+=e);this._mixBufferRegion(r,n,0,s,i)}this.cumulativeWeight=o},apply:function(t){var e=this.valueSize,r=this.buffer,i=t*e+e,n=this.cumulativeWeight,o=this.binding;if(this.cumulativeWeight=0,n<1){var a=3*e;this._mixBufferRegion(r,i,a,1-n,e)}for(var s=e,c=e+e;s!==c;++s)if(r[s]!==r[s+e]){o.setValue(r,i);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,r=this.valueSize,i=3*r;t.getValue(e,i);for(var n=r,o=i;n!==o;++n)e[n]=e[i+n%r];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,r,i,n){if(i>=.5)for(var o=0;o!==n;++o)t[e+o]=t[r+o]},_slerp:function(t,e,r,i){_e.slerpFlat(t,e,t,e,t,r,i)},_lerp:function(t,e,r,i,n){for(var o=1-i,a=0;a!==n;++a){var s=e+a;t[s]=t[s]*o+t[r+a]*i}}}),Object.assign(Uh.prototype,{getValue:function(t,e){this.bind();var r=this._targetGroup.nCachedObjects_,i=this._bindings[r];void 0!==i&&i.getValue(t,e)},setValue:function(t,e){for(var r=this._bindings,i=this._targetGroup.nCachedObjects_,n=r.length;i!==n;++i)r[i].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].unbind()}}),Object.assign(Nh,{Composite:Uh,create:function(t,e,r){return t&&t.isAnimationObjectGroup?new Nh.Composite(t,e,r):new Nh(t,e,r)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){var t=new RegExp("^"+/((?:[\w-]+[\/:])*)/.source+/([\w-\.]+)?/.source+/(?:\.([\w-]+)(?:\[(.+)\])?)?/.source+/\.([\w-]+)(?:\[(.+)\])?/.source+"$"),e=["material","materials","bones"];return function(r){var i=t.exec(r);if(!i)throw new Error("PropertyBinding: Cannot parse trackName: "+r);var n={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]},o=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==o&&-1!==o){var a=n.nodeName.substring(o+1);-1!==e.indexOf(a)&&(n.nodeName=n.nodeName.substring(0,o),n.objectName=a)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+r);return n}}(),findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var r=function(t){for(var r=0;r<t.bones.length;r++){var i=t.bones[r];if(i.name===e)return i}return null}(t.skeleton);if(r)return r}if(t.children){var i=function(t){for(var r=0;r<t.length;r++){var n=t[r];if(n.name===e||n.uuid===e)return n;var o=i(n.children);if(o)return o}return null},n=i(t.children);if(n)return n}return null}}),Object.assign(Nh.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)t[e++]=r[i]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++]},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var r=this.resolvedProperty,i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,r=e.objectName,i=e.propertyName,n=e.propertyIndex;if(t||(t=Nh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(r){var o=e.objectIndex;switch(r){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var a=0;a<t.length;a++)if(t[a].name===o){o=a;break}break;default:if(void 0===t[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[r]}if(void 0!==o){if(void 0===t[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[o]}}var s=t[i];if(void 0!==s){var c=this.Versioning.None;void 0!==t.needsUpdate?(c=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(c=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var h=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(a=0;a<this.node.geometry.morphAttributes.position.length;a++)if(t.geometry.morphAttributes.position[a].name===n){n=a;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(a=0;a<this.node.geometry.morphTargets.length;a++)if(t.geometry.morphTargets[a].name===n){n=a;break}}}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else void 0!==s.fromArray&&void 0!==s.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}else{var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Nh.prototype,{_getValue_unbound:Nh.prototype.getValue,_setValue_unbound:Nh.prototype.setValue}),Object.assign(Dh.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,n=this._paths,o=this._parsedPaths,a=this._bindings,s=a.length,c=0,h=arguments.length;c!==h;++c){var l=arguments[c],u=l.uuid,p=i[u],d=void 0;if(void 0===p){p=e++,i[u]=p,t.push(l);for(var f=0,m=s;f!==m;++f)a[f].push(new Nh(l,n[f],o[f]))}else if(p<r){d=t[p];var v=--r,g=t[v];i[g.uuid]=p,t[p]=g,i[u]=v,t[v]=l;for(f=0,m=s;f!==m;++f){var y=a[f],x=y[v],b=y[p];y[p]=x,void 0===b&&(b=new Nh(l,n[f],o[f])),y[v]=b}}else t[p]!==d&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,r=this._indicesByUUID,i=this._bindings,n=i.length,o=0,a=arguments.length;o!==a;++o){var s=arguments[o],c=s.uuid,h=r[c];if(void 0!==h&&h>=e){var l=e++,u=t[l];r[u.uuid]=h,t[h]=u,r[c]=l,t[l]=s;for(var p=0,d=n;p!==d;++p){var f=i[p],m=f[l],v=f[h];f[h]=m,f[l]=v}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,n=this._bindings,o=n.length,a=0,s=arguments.length;a!==s;++a){var c=arguments[a].uuid,h=i[c];if(void 0!==h)if(delete i[c],h<r){var l=--r,u=t[l],p=t[g=--e];i[u.uuid]=h,t[h]=u,i[p.uuid]=l,t[l]=p,t.pop();for(var d=0,f=o;d!==f;++d){var m=(y=n[d])[l],v=y[g];y[h]=m,y[l]=v,y.pop()}}else{var g;i[(p=t[g=--e]).uuid]=h,t[h]=p,t.pop();for(d=0,f=o;d!==f;++d){var y;(y=n[d])[h]=y[g],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){var r=this._bindingsIndicesByPath,i=r[t],n=this._bindings;if(void 0!==i)return n[i];var o=this._paths,a=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);i=n.length,r[t]=i,o.push(t),a.push(e),n.push(l);for(var u=h,p=s.length;u!==p;++u){var d=s[u];l[u]=new Nh(d,t,e)}return l},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,r=e[t];if(void 0!==r){var i=this._paths,n=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];e[t[a]]=r,o[r]=s,o.pop(),n[r]=n[a],n.pop(),i[r]=i[a],i.pop()}}}),Object.assign(Fh.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,r){if(t.fadeOut(e),this.fadeIn(e),r){var i=this._clip.duration,n=t._clip.duration,o=n/i,a=i/n;t.warp(1,o,e),this.warp(a,1,e)}return this},crossFadeTo:function(t,e,r){return t.crossFadeFrom(this,e,r)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,r){var i=this._mixer,n=i.time,o=this._timeScaleInterpolant,a=this.timeScale;null===o&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);var s=o.parameterPositions,c=o.sampleValues;return s[0]=n,s[1]=n+r,c[0]=t/a,c[1]=e/a,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,r,i){if(this.enabled){var n=this._startTime;if(null!==n){var o=(t-n)*r;if(o<0||0===r)return;this._startTime=null,e=r*o}e*=this._updateTimeScale(t);var a=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(a),h[l].accumulate(i,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var r=this._weightInterpolant;if(null!==r){var i=r.evaluate(t)[0];e*=i,t>r.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var r=this._timeScaleInterpolant;if(null!==r)e*=r.evaluate(t)[0],t>r.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var r=this._clip.duration,i=this.loop,n=this._loopCount;if(i===Jt){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=r)e=r;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{var o=i===Kt;if(-1===n&&(t>=0?(n=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),e>=r||e<0){var a=Math.floor(e/r);e-=r*a,n+=Math.abs(a);var s=this.repetitions-n;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?r:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(0===s){var c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}if(o&&1==(1&n))return this.time=e,r-e}return this.time=e,e},_setEndings:function(t,e,r){var i=this._interpolantSettings;r?(i.endingStart=ie,i.endingEnd=ie):(i.endingStart=t?this.zeroSlopeAtStart?ie:re:ne,i.endingEnd=e?this.zeroSlopeAtEnd?ie:re:ne)},_scheduleFading:function(t,e,r){var i=this._mixer,n=i.time,o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);var a=o.parameterPositions,s=o.sampleValues;return a[0]=n,s[0]=e,a[1]=n+t,s[1]=r,this}}),Bh.prototype=Object.assign(Object.create(t.prototype),{constructor:Bh,_bindAction:function(t,e){var r=t._localRoot||this._root,i=t._clip.tracks,n=i.length,o=t._propertyBindings,a=t._interpolants,s=r.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==n;++l){var u=i[l],p=u.name,d=h[p];if(void 0!==d)o[l]=d;else{if(void 0!==(d=o[l])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;++(d=new Oh(Nh.create(r,p,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(d,s,p),o[l]=d}a[l].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,r=t._clip.uuid,i=this._actionsByClip[r];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,r,e)}for(var n=t._propertyBindings,o=0,a=n.length;o!==a;++o){var s=n[o];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,r=0,i=e.length;r!==i;++r){var n=e[r];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,r){var i=this._actions,n=this._actionsByClip,o=n[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,n[e]=o;else{var a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[r]=t},_removeInactiveAction:function(t){var e=this._actions,r=e[e.length-1],i=t._cacheIndex;r._cacheIndex=i,e[i]=r,e.pop(),t._cacheIndex=null;var n=t._clip.uuid,o=this._actionsByClip,a=o[n],s=a.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null,delete a.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete o[n],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,r=0,i=e.length;r!==i;++r){var n=e[r];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){var e=this._actions,r=t._cacheIndex,i=this._nActiveActions++,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=r,e[r]=n},_takeBackAction:function(t){var e=this._actions,r=t._cacheIndex,i=--this._nActiveActions,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=r,e[r]=n},_addInactiveBinding:function(t,e,r){var i=this._bindingsByRootAndName,n=i[e],o=this._bindings;void 0===n&&(n={},i[e]=n),n[r]=t,t._cacheIndex=o.length,o.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,r=t.binding,i=r.rootNode.uuid,n=r.path,o=this._bindingsByRootAndName,a=o[i],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete a[n];t:{for(var h in a)break t;delete o[i]}},_lendBinding:function(t){var e=this._bindings,r=t._cacheIndex,i=this._nActiveBindings++,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=r,e[r]=n},_takeBackBinding:function(t){var e=this._bindings,r=t._cacheIndex,i=--this._nActiveBindings,n=e[i];t._cacheIndex=i,e[i]=t,n._cacheIndex=r,e[r]=n},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,r=t[e];return void 0===r&&((r=new rh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=r),r},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,r=t.__cacheIndex,i=--this._nActiveControlInterpolants,n=e[i];t.__cacheIndex=i,e[i]=t,n.__cacheIndex=r,e[r]=n},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var r=e||this._root,i=r.uuid,n="string"==typeof t?sh.findByName(r,t):t,o=null!==n?n.uuid:t,a=this._actionsByClip[o],s=null;if(void 0!==a){var c=a.actionByRoot[i];if(void 0!==c)return c;s=a.knownActions[0],null===n&&(n=s._clip)}if(null===n)return null;var h=new Fh(this,n,e);return this._bindAction(h,s),this._addInactiveAction(h,o,i),h},existingAction:function(t,e){var r=e||this._root,i=r.uuid,n="string"==typeof t?sh.findByName(r,t):t,o=n?n.uuid:t,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[i]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,r=this._bindings,i=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var n=0;n!==e;++n)t[n].reset();for(n=0;n!==i;++n)r[n].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,r=this._nActiveActions,i=this.time+=t,n=Math.sign(t),o=this._accuIndex^=1,a=0;a!==r;++a){e[a]._update(i,t,n,o)}var s=this._bindings,c=this._nActiveBindings;for(a=0;a!==c;++a)s[a].apply(o);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,r=t.uuid,i=this._actionsByClip,n=i[r];if(void 0!==n){for(var o=n.knownActions,a=0,s=o.length;a!==s;++a){var c=o[a];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[r]}},uncacheRoot:function(t){var e=t.uuid,r=this._actionsByClip;for(var i in r){var n=r[i].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}var o=this._bindingsByRootAndName[e];if(void 0!==o)for(var a in o){var s=o[a];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var r=this.existingAction(t,e);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),zh.prototype.clone=function(){return new zh(void 0===this.value.clone?this.value:this.value.clone())},Gh.prototype=Object.assign(Object.create(co.prototype),{constructor:Gh,isInstancedBufferGeometry:!0,copy:function(t){return co.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Object.defineProperties(Hh.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Hh.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this.data.array[t+3]=n,this}}),Object.defineProperty(Vh.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Vh.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.stride,r*=e.stride;for(var i=0,n=this.stride;i<n;i++)this.array[t+i]=e.array[r+i];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),kh.prototype=Object.assign(Object.create(Vh.prototype),{constructor:kh,isInstancedInterleavedBuffer:!0,copy:function(t){return Vh.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),jh.prototype=Object.assign(Object.create(Zn.prototype),{constructor:jh,isInstancedBufferAttribute:!0,copy:function(t){return Zn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(Wh.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var r=[];return qh(t,this,r,e),r.sort(Xh),r},intersectObjects:function(t,e){var r=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(var i=0,n=t.length;i<n;i++)qh(t[i],this,r,e);return r.sort(Xh),r}}),Object.assign(Yh.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(Zh.prototype,{set:function(t,e,r){return this.radius=t,this.phi=e,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(ye.clamp(t.y/this.radius,-1,1))),this}}),Object.assign(Jh.prototype,{set:function(t,e,r){return this.radius=t,this.theta=e,this.y=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}),Qh.prototype=Object.create(kn.prototype),Qh.prototype.constructor=Qh,Qh.prototype.isImmediateRenderObject=!0,Kh.prototype=Object.create(ya.prototype),Kh.prototype.constructor=Kh,Kh.prototype.update=function(){var t=new we,e=new we,r=new Me;return function(){var i=["a","b","c"];this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);var n=this.object.matrixWorld,o=this.geometry.attributes.position,a=this.object.geometry;if(a&&a.isGeometry)for(var s=a.vertices,c=a.faces,h=0,l=0,u=c.length;l<u;l++)for(var p=c[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[i[d]]],v=p.vertexNormals[d];t.copy(m).applyMatrix4(n),e.copy(v).applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),o.setXYZ(h,t.x,t.y,t.z),h+=1,o.setXYZ(h,e.x,e.y,e.z),h+=1}else if(a&&a.isBufferGeometry){var g=a.attributes.position,y=a.attributes.normal;for(h=0,d=0,f=g.count;d<f;d++)t.set(g.getX(d),g.getY(d),g.getZ(d)).applyMatrix4(n),e.set(y.getX(d),y.getY(d),y.getZ(d)),e.applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),o.setXYZ(h,t.x,t.y,t.z),h+=1,o.setXYZ(h,e.x,e.y,e.z),h+=1}o.needsUpdate=!0}}(),$h.prototype=Object.create(kn.prototype),$h.prototype.constructor=$h,$h.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},$h.prototype.update=function(){var t=new we,e=new we;return function(){this.light.updateMatrixWorld();var r=this.light.distance?this.light.distance:1e3,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),el.prototype=Object.create(ya.prototype),el.prototype.constructor=el,el.prototype.updateMatrixWorld=function(){var t=new we,e=new be,r=new be;return function(i){var n=this.bones,o=this.geometry,a=o.getAttribute("position");r.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<n.length;s++){var h=n[s];h.parent&&h.parent.isBone&&(e.multiplyMatrices(r,h.matrixWorld),t.setFromMatrixPosition(e),a.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(r,h.parent.matrixWorld),t.setFromMatrixPosition(e),a.setXYZ(c+1,t.x,t.y,t.z),c+=2)}o.getAttribute("position").needsUpdate=!0,kn.prototype.updateMatrixWorld.call(this,i)}}(),rl.prototype=Object.create(xo.prototype),rl.prototype.constructor=rl,rl.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},rl.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},il.prototype=Object.create(kn.prototype),il.prototype.constructor=il,il.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},il.prototype.update=function(){var t=.5*this.light.width,e=.5*this.light.height,r=this.line.geometry.attributes.position,i=r.array;i[0]=t,i[1]=-e,i[2]=0,i[3]=t,i[4]=e,i[5]=0,i[6]=-t,i[7]=e,i[8]=0,i[9]=-t,i[10]=-e,i[11]=0,i[12]=t,i[13]=-e,i[14]=0,r.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},nl.prototype=Object.create(kn.prototype),nl.prototype.constructor=nl,nl.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},nl.prototype.update=function(){var t=new we,e=new xr,r=new xr;return function(){var i=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var n=i.geometry.getAttribute("color");e.copy(this.light.color),r.copy(this.light.groundColor);for(var o=0,a=n.count;o<a;o++){var s=o<a/2?e:r;n.setXYZ(o,s.r,s.g,s.b)}n.needsUpdate=!0}i.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),ol.prototype=Object.create(ya.prototype),ol.prototype.constructor=ol,al.prototype=Object.create(ya.prototype),al.prototype.constructor=al,sl.prototype=Object.create(ya.prototype),sl.prototype.constructor=sl,sl.prototype.update=function(){var t=new we,e=new we,r=new Me;return function(){this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);for(var i=this.object.matrixWorld,n=this.geometry.attributes.position,o=this.object.geometry,a=o.vertices,s=o.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],p=u.normal;t.copy(a[u.a]).add(a[u.b]).add(a[u.c]).divideScalar(3).applyMatrix4(i),e.copy(p).applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),n.setXYZ(c,t.x,t.y,t.z),c+=1,n.setXYZ(c,e.x,e.y,e.z),c+=1}n.needsUpdate=!0}}(),cl.prototype=Object.create(kn.prototype),cl.prototype.constructor=cl,cl.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},cl.prototype.update=function(){var t=new we,e=new we,r=new we;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(r),this.targetLine.scale.z=r.length()}}(),hl.prototype=Object.create(ya.prototype),hl.prototype.constructor=hl,hl.prototype.update=function(){var t,e,r=new we,i=new jn;function n(n,o,a,s){r.set(o,a,s).unproject(i);var c=e[n];if(void 0!==c)for(var h=t.getAttribute("position"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],r.x,r.y,r.z)}return function(){t=this.geometry,e=this.pointMap;i.projectionMatrix.copy(this.camera.projectionMatrix),n("c",0,0,-1),n("t",0,0,1),n("n1",-1,-1,-1),n("n2",1,-1,-1),n("n3",-1,1,-1),n("n4",1,1,-1),n("f1",-1,-1,1),n("f2",1,-1,1),n("f3",-1,1,1),n("f4",1,1,1),n("u1",.7,1.1,-1),n("u2",-.7,1.1,-1),n("u3",0,2,-1),n("cf1",-1,0,1),n("cf2",1,0,1),n("cf3",0,-1,1),n("cf4",0,1,1),n("cn1",-1,0,-1),n("cn2",1,0,-1),n("cn3",0,-1,-1),n("cn4",0,1,-1),t.getAttribute("position").needsUpdate=!0}}(),ll.prototype=Object.create(ya.prototype),ll.prototype.constructor=ll,ll.prototype.update=function(){var t=new Un;return function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var r=t.min,i=t.max,n=this.geometry.attributes.position,o=n.array;o[0]=i.x,o[1]=i.y,o[2]=i.z,o[3]=r.x,o[4]=i.y,o[5]=i.z,o[6]=r.x,o[7]=r.y,o[8]=i.z,o[9]=i.x,o[10]=r.y,o[11]=i.z,o[12]=i.x,o[13]=i.y,o[14]=r.z,o[15]=r.x,o[16]=i.y,o[17]=r.z,o[18]=r.x,o[19]=r.y,o[20]=r.z,o[21]=i.x,o[22]=r.y,o[23]=r.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),ll.prototype.setFromObject=function(t){return this.object=t,this.update(),this},ul.prototype=Object.create(ya.prototype),ul.prototype.constructor=ul,ul.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),kn.prototype.updateMatrixWorld.call(this,t))},pl.prototype=Object.create(ga.prototype),pl.prototype.constructor=pl,pl.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.lookAt(this.plane.normal),kn.prototype.updateMatrixWorld.call(this,t)},dl.prototype=Object.create(kn.prototype),dl.prototype.constructor=dl,dl.prototype.setDirection=function(){var t,e=new we;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),dl.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},dl.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},fl.prototype=Object.create(ya.prototype),fl.prototype.constructor=fl;var ml={createMultiMaterialObject:function(t,e){for(var r=new wa,i=0,n=e.length;i<n;i++)r.add(new xo(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){t.applyMatrix((new be).getInverse(r.matrixWorld)),e.remove(t),r.add(t)}};function vl(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Xn(t,e,r,n,o,a)}exports.SceneUtils=ml;var gl=0;exports.LineStrip=gl;var yl=1;function xl(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function bl(t){return void 0===t&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function _l(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new _a(t,e)}function wl(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new ua(t)}function Ml(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new _a(t,e)}function El(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new ba(t)}function Tl(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new ba(t)}function Sl(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new ba(t)}function Al(t,e,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new we(t,e,r)}function Rl(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new Zn(t,e).setDynamic(!0)}function Ll(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Jn(t,e)}function Pl(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Qn(t,e)}function Cl(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Kn(t,e)}function Il(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new $n(t,e)}function Ol(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new to(t,e)}function Ul(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new eo(t,e)}function Nl(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ro(t,e)}function Dl(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new io(t,e)}function Fl(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new no(t,e)}function Bl(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),vc.call(this,t),this.type="catmullrom",this.closed=!0}function zl(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),vc.call(this,t),this.type="catmullrom"}function Gl(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),vc.call(this,t),this.type="catmullrom"}function Hl(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new fl(t)}function Vl(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new ll(t,e)}function kl(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new ya(new Us(t.geometry),new va({color:void 0!==e?e:16777215}))}function jl(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new ya(new Sa(t.geometry),new va({color:void 0!==e?e:16777215}))}function Wl(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new rc(t)}function Xl(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new nc(t)}exports.LinePieces=yl,cc.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(cc.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Nc.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new Yn,r=0,i=t.length;r<i;r++){var n=t[r];e.vertices.push(new we(n.x,n.y,n.z||0))}return e}}),Object.assign(Dc.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Bl.prototype=Object.create(vc.prototype),zl.prototype=Object.create(vc.prototype),Gl.prototype=Object.create(vc.prototype),Object.assign(Gl.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),ol.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},el.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(uh.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ph.extractUrlBase(t)}}),Object.assign(Sn.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Un.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),go.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(ye,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ye.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ye.ceilPowerOfTwo(t)}}),Object.assign(Me.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(be.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new we),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,r,i,n,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,r,n,o)}}),Dn.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},_e.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(vo.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(Fc.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new _s(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Cs(this,t)}}),Object.assign(xe.prototype,{fromAttribute:function(t,e,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(we.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Se.prototype,{fromAttribute:function(t,e,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Yn.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(kn.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}}),Object.defineProperties(kn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(pa.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(da.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(cc.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),$o.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Bc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Zn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(co.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(co.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(zh.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Cn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new xr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===m}}}),Object.defineProperties(Xs.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(mo.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(oa.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(oa.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(Bn.prototype,{cullFace:{get:function(){return this.renderReverseSided?o:n},set:function(t){var e=t!==n;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+e+"."),this.renderReverseSided=e}}}),Object.defineProperties(Ae.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.assign(ea.prototype,{getStandingMatrix:function(){console.warn("THREE.WebVRManager: .getStandingMatrix() has been removed.")}}),Object.defineProperties(ea.prototype,{standing:{set:function(){console.warn("THREE.WebVRManager: .standing has been removed.")}}}),Ph.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new Sh).load(t,function(t){e.setBuffer(t)}),this},Ih.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Rh.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};var ql={merge:function(t,e,r){var i;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};exports.GeometryUtils=ql;var Yl={crossOrigin:void 0,loadTexture:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var n=new sc;n.setCrossOrigin(this.crossOrigin);var o=n.load(t,r,void 0,i);return e&&(o.mapping=e),o},loadTextureCube:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var n=new ac;n.setCrossOrigin(this.crossOrigin);var o=n.load(t,r,void 0,i);return e&&(o.mapping=e),o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};function Zl(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}function Jl(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}exports.ImageUtils=Yl;
},{}],"UskU":[function(require,module,exports) {
var e=require("three");e.OrbitControls=function(t,n){var o,a,i,r,s;this.object=t,this.domElement=void 0!==n?n:document,this.enabled=!0,this.target=new e.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:e.MOUSE.LEFT,MIDDLE:e.MOUSE.MIDDLE,RIGHT:e.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return b.phi},this.getAzimuthalAngle=function(){return b.theta},this.saveState=function(){c.target0.copy(c.target),c.position0.copy(c.object.position),c.zoom0=c.object.zoom},this.reset=function(){c.target.copy(c.target0),c.object.position.copy(c.position0),c.object.zoom=c.zoom0,c.object.updateProjectionMatrix(),c.dispatchEvent(l),c.update(),p=d.NONE},this.update=(o=new e.Vector3,a=(new e.Quaternion).setFromUnitVectors(t.up,new e.Vector3(0,1,0)),i=a.clone().inverse(),r=new e.Vector3,s=new e.Quaternion,function(){var e=c.object.position;return o.copy(e).sub(c.target),o.applyQuaternion(a),b.setFromVector3(o),c.autoRotate&&p===d.NONE&&N(2*Math.PI/60/60*c.autoRotateSpeed),b.theta+=E.theta,b.phi+=E.phi,b.theta=Math.max(c.minAzimuthAngle,Math.min(c.maxAzimuthAngle,b.theta)),b.phi=Math.max(c.minPolarAngle,Math.min(c.maxPolarAngle,b.phi)),b.makeSafe(),b.radius*=f,b.radius=Math.max(c.minDistance,Math.min(c.maxDistance,b.radius)),c.target.add(g),o.setFromSpherical(b),o.applyQuaternion(i),e.copy(c.target).add(o),c.object.lookAt(c.target),!0===c.enableDamping?(E.theta*=1-c.dampingFactor,E.phi*=1-c.dampingFactor,g.multiplyScalar(1-c.dampingFactor)):(E.set(0,0,0),g.set(0,0,0)),f=1,!!(v||r.distanceToSquared(c.object.position)>h||8*(1-s.dot(c.object.quaternion))>h)&&(c.dispatchEvent(l),r.copy(c.object.position),s.copy(c.object.quaternion),v=!1,!0)}),this.dispose=function(){c.domElement.removeEventListener("contextmenu",G,!1),c.domElement.removeEventListener("mousedown",Y,!1),c.domElement.removeEventListener("wheel",F,!1),c.domElement.removeEventListener("touchstart",X,!1),c.domElement.removeEventListener("touchend",_,!1),c.domElement.removeEventListener("touchmove",K,!1),document.removeEventListener("mousemove",Z,!1),document.removeEventListener("mouseup",z,!1),window.removeEventListener("keydown",I,!1)};var c=this,l={type:"change"},m={type:"start"},u={type:"end"},d={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY_PAN:4},p=d.NONE,h=1e-6,b=new e.Spherical,E=new e.Spherical,f=1,g=new e.Vector3,v=!1,y=new e.Vector2,O=new e.Vector2,w=new e.Vector2,P=new e.Vector2,T=new e.Vector2,j=new e.Vector2,R=new e.Vector2,L=new e.Vector2,M=new e.Vector2;function C(){return Math.pow(.95,c.zoomSpeed)}function N(e){E.theta-=e}function S(e){E.phi-=e}var A,D=(A=new e.Vector3,function(e,t){A.setFromMatrixColumn(t,0),A.multiplyScalar(-e),g.add(A)}),x=function(){var t=new e.Vector3;return function(e,n){!0===c.screenSpacePanning?t.setFromMatrixColumn(n,1):(t.setFromMatrixColumn(n,0),t.crossVectors(c.object.up,t)),t.multiplyScalar(e),g.add(t)}}(),H=function(){var t=new e.Vector3;return function(e,n){var o=c.domElement===document?c.domElement.body:c.domElement;if(c.object.isPerspectiveCamera){var a=c.object.position;t.copy(a).sub(c.target);var i=t.length();i*=Math.tan(c.object.fov/2*Math.PI/180),D(2*e*i/o.clientHeight,c.object.matrix),x(2*n*i/o.clientHeight,c.object.matrix)}else c.object.isOrthographicCamera?(D(e*(c.object.right-c.object.left)/c.object.zoom/o.clientWidth,c.object.matrix),x(n*(c.object.top-c.object.bottom)/c.object.zoom/o.clientHeight,c.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),c.enablePan=!1)}}();function k(e){c.object.isPerspectiveCamera?f/=e:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom*e)),c.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function V(e){c.object.isPerspectiveCamera?f*=e:c.object.isOrthographicCamera?(c.object.zoom=Math.max(c.minZoom,Math.min(c.maxZoom,c.object.zoom/e)),c.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),c.enableZoom=!1)}function U(e){P.set(e.clientX,e.clientY)}function Y(e){if(!1!==c.enabled){switch(e.preventDefault(),c.domElement.focus?c.domElement.focus():window.focus(),e.button){case c.mouseButtons.LEFT:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===c.enablePan)return;U(e),p=d.PAN}else{if(!1===c.enableRotate)return;!function(e){y.set(e.clientX,e.clientY)}(e),p=d.ROTATE}break;case c.mouseButtons.MIDDLE:if(!1===c.enableZoom)return;!function(e){R.set(e.clientX,e.clientY)}(e),p=d.DOLLY;break;case c.mouseButtons.RIGHT:if(!1===c.enablePan)return;U(e),p=d.PAN}p!==d.NONE&&(document.addEventListener("mousemove",Z,!1),document.addEventListener("mouseup",z,!1),c.dispatchEvent(m))}}function Z(e){if(!1!==c.enabled)switch(e.preventDefault(),p){case d.ROTATE:if(!1===c.enableRotate)return;!function(e){O.set(e.clientX,e.clientY),w.subVectors(O,y).multiplyScalar(c.rotateSpeed);var t=c.domElement===document?c.domElement.body:c.domElement;N(2*Math.PI*w.x/t.clientHeight),S(2*Math.PI*w.y/t.clientHeight),y.copy(O),c.update()}(e);break;case d.DOLLY:if(!1===c.enableZoom)return;!function(e){L.set(e.clientX,e.clientY),M.subVectors(L,R),M.y>0?k(C()):M.y<0&&V(C()),R.copy(L),c.update()}(e);break;case d.PAN:if(!1===c.enablePan)return;!function(e){T.set(e.clientX,e.clientY),j.subVectors(T,P).multiplyScalar(c.panSpeed),H(j.x,j.y),P.copy(T),c.update()}(e)}}function z(e){!1!==c.enabled&&(document.removeEventListener("mousemove",Z,!1),document.removeEventListener("mouseup",z,!1),c.dispatchEvent(u),p=d.NONE)}function F(e){!1===c.enabled||!1===c.enableZoom||p!==d.NONE&&p!==d.ROTATE||(e.preventDefault(),e.stopPropagation(),c.dispatchEvent(m),function(e){e.deltaY<0?V(C()):e.deltaY>0&&k(C()),c.update()}(e),c.dispatchEvent(u))}function I(e){!1!==c.enabled&&!1!==c.enableKeys&&!1!==c.enablePan&&function(e){var t=!1;switch(e.keyCode){case c.keys.UP:H(0,c.keyPanSpeed),t=!0;break;case c.keys.BOTTOM:H(0,-c.keyPanSpeed),t=!0;break;case c.keys.LEFT:H(c.keyPanSpeed,0),t=!0;break;case c.keys.RIGHT:H(-c.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),c.update())}(e)}function X(e){if(!1!==c.enabled){switch(e.preventDefault(),e.touches.length){case 1:if(!1===c.enableRotate)return;!function(e){y.set(e.touches[0].pageX,e.touches[0].pageY)}(e),p=d.TOUCH_ROTATE;break;case 2:if(!1===c.enableZoom&&!1===c.enablePan)return;!function(e){if(c.enableZoom){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(t*t+n*n);R.set(0,o)}if(c.enablePan){var a=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);P.set(a,i)}}(e),p=d.TOUCH_DOLLY_PAN;break;default:p=d.NONE}p!==d.NONE&&c.dispatchEvent(m)}}function K(e){if(!1!==c.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===c.enableRotate)return;if(p!==d.TOUCH_ROTATE)return;!function(e){O.set(e.touches[0].pageX,e.touches[0].pageY),w.subVectors(O,y).multiplyScalar(c.rotateSpeed);var t=c.domElement===document?c.domElement.body:c.domElement;N(2*Math.PI*w.x/t.clientHeight),S(2*Math.PI*w.y/t.clientHeight),y.copy(O),c.update()}(e);break;case 2:if(!1===c.enableZoom&&!1===c.enablePan)return;if(p!==d.TOUCH_DOLLY_PAN)return;!function(e){if(c.enableZoom){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,o=Math.sqrt(t*t+n*n);L.set(0,o),M.set(0,Math.pow(L.y/R.y,c.zoomSpeed)),k(M.y),R.copy(L)}if(c.enablePan){var a=.5*(e.touches[0].pageX+e.touches[1].pageX),i=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(a,i),j.subVectors(T,P).multiplyScalar(c.panSpeed),H(j.x,j.y),P.copy(T)}c.update()}(e);break;default:p=d.NONE}}function _(e){!1!==c.enabled&&(c.dispatchEvent(u),p=d.NONE)}function G(e){!1!==c.enabled&&e.preventDefault()}c.domElement.addEventListener("contextmenu",G,!1),c.domElement.addEventListener("mousedown",Y,!1),c.domElement.addEventListener("wheel",F,!1),c.domElement.addEventListener("touchstart",X,!1),c.domElement.addEventListener("touchend",_,!1),c.domElement.addEventListener("touchmove",K,!1),window.addEventListener("keydown",I,!1),this.update()},e.OrbitControls.prototype=Object.create(e.EventDispatcher.prototype),e.OrbitControls.prototype.constructor=e.OrbitControls,Object.defineProperties(e.OrbitControls.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}}),module.exports=exports.default=e.OrbitControls;
},{"three":"gBK8"}],"mpMA":[function(require,module,exports) {
"use strict";function p(p){var r=[],t=[],n=-1,u={};function a(p,t,u){var a=Math.sqrt(p*p+t*t+u*u);return r.push({x:p/a,y:t/a,z:u/a}),++n}function c(p,r,n){t.push({p1:p,p2:r,p3:n})}function e(p,t){var n=p<t?"".concat(p,"_").concat(t):"".concat(t,"_").concat(p);if(n in u)return u[n];var c=r[p],e=r[t],o=a(.5*(c.x+e.x),.5*(c.y+e.y),.5*(c.z+e.z));return u[n]=o,o}var o=(1+Math.sqrt(5))/2;a(-1,o,0),a(1,o,0),a(-1,-o,0),a(1,-o,0),a(0,-1,o),a(0,1,o),a(0,-1,-o),a(0,1,-o),a(o,0,-1),a(o,0,1),a(-o,0,-1),a(-o,0,1),c(0,11,5),c(0,5,1),c(0,1,7),c(0,7,10),c(0,10,11),c(1,5,9),c(5,11,4),c(11,10,2),c(10,7,6),c(7,1,8),c(3,9,4),c(3,4,2),c(3,2,6),c(3,6,8),c(3,8,9),c(4,9,5),c(2,4,11),c(6,2,10),c(8,6,7),c(9,8,1);for(var s=0;s<p;s++){var i=[];t.forEach(function(p){var r=e(p.p1,p.p2),t=e(p.p2,p.p3),n=e(p.p3,p.p1);i.push({p1:p.p1,p2:r,p3:n}),i.push({p1:p.p2,p2:t,p3:r}),i.push({p1:p.p3,p2:n,p3:t}),i.push({p1:r,p2:t,p3:n})}),t=i}return{points:r,triangles:t}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=p;
},{}],"25oI":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=[6,0,157,255,131,0,182,239,57,238,159,238,246,2,86,244,127,237,138,253,181,237,254,238,230,0,90,235,201,237,48,245,190,0,124,239,201,251,132,243,239,234,216,2,124,252,27,1,30,4,10,238,92,242,154,244,30,8,94,235,187,241,191,2,193,230,54,239,198,5,215,234,206,239,241,10,59,240,197,239,183,251,208,234,150,239,192,0,74,240,89,246,115,237,255,236,10,250,171,237,91,245,75,243,60,10,91,255,116,0,122,255,185,0,202,254,122,2,132,242,212,1,249,1,10,0,191,233,118,241,15,236,20,244,72,3,8,237,125,234,120,240,158,236,168,236,113,0,98,241,7,243,224,250,202,0,243,0,243,1,11,2,41,246,149,240,195,0,249,3,191,255,50,1,213,1,149,239,96,235,122,242,106,240,212,237,193,0,82,243,195,241,229,243,180,243,15,241,41,239,179,238,6,235,183,238,163,234,253,239,14,251,127,233,3,236,212,4,9,1,118,244,132,240,6,243,58,242,144,240,180,236,229,239,242,236,93,241,81,236,229,238,6,6,21,7,183,13,12,245,84,240,166,4,58,240,83,244,65,8,108,238,55,237,77,239,138,241,220,237,39,235,8,238,51,241,207,250,127,4,167,233,37,2,140,255,115,241,208,255,255,230,155,236,162,245,45,3,163,4,151,1,43,234,85,239,255,2,132,235,228,237,247,241,49,239,149,240,15,237,215,255,81,0,171,18,65,0,110,2,171,0,80,236,157,0,74,244,204,242,234,255,196,242,0,0,156,237,156,0,13,235,126,240,143,235,58,233,165,234,87,233,13,2,193,241,79,2,170,243,70,239,2,240,49,236,209,234,141,235,23,241,117,247,164,236,77,1,150,1,57,245,123,5,14,255,60,255,235,4,228,244,50,0,235,255,68,1,231,1,170,255,76,251,29,2,37,0,76,0,111,255,220,2,139,251,148,0,82,0,214,0,238,254,253,254,245,241,223,0,176,1,62,241,35,254,40,0,108,0,207,3,153,1,180,1,150,3,26,2,217,1,231,255,171,246,59,235,13,234,68,234,207,255,204,236,167,236,40,231,71,235,93,255,106,255,138,2,204,255,162,2,225,0,60,241,88,6,138,10,72,9,82,6,30,236,230,233,26,235,42,233,30,237,27,234,60,236,56,240,141,237,173,238,108,240,111,239,216,240,147,236,97,235,40,236,1,239,109,239,22,237,207,1,97,2,75,1,26,1,8,254,224,239,221,240,144,241,48,244,134,243,185,240,31,5,67,0,77,0,251,248,144,241,83,250,11,0,107,248,152,242,98,4,41,244,123,1,27,1,55,0,143,0,174,17,127,0,64,1,184,1,213,254,58,1,127,0,28,2,231,255,218,255,78,242,43,254,248,235,108,3,139,0,49,248,33,5,98,3,127,4,171,8,43,2,23,3,110,1,67,1,237,238,0,0,151,0,133,1,69,0,200,0,219,255,79,236,100,0,202,250,211,237,83,237,50,236,80,239,242,239,31,240,102,239,76,236,181,234,254,242,194,234,222,238,181,234,171,241,172,0,90,0,71,239,189,6,140,14,140,18,168,237,54,239,165,242,27,241,46,242,61,243,208,241,175,240,110,238,117,240,190,237,197,240,155,239,104,0,235,241,167,241,204,241,145,238,39,241,212,244,36,247,157,238,124,235,169,238,80,239,69,238,198,236,57,234,87,236,160,234,173,234,54,232,210,234,175,233,23,235,179,233,169,246,217,235,241,234,117,237,17,235,67,237,49,238,9,238,212,235,221,235,206,232,30,234,83,255,72,234,55,235,111,237,204,233,129,7,106,3,15,0,196,4,204,5,131,3,45,0,189,228,212,235,200,244,244,236,232,232,202,237,102,0,225,234,8,0,225,244,185,255,223,249,203,239,127,241,143,248,235,236,165,238,175,239,38,235,120,239,71,238,122,237,202,237,239,241,11,244,238,3,207,1,88,241,254,238,246,235,170,236,35,238,50,236,161,237,172,236,242,238,230,3,96,5,37,1,61,238,215,237,246,246,95,255,137,254,14,236,58,253,74,14,242,9,212,12,179,242,120,240,10,238,183,245,130,240,9,241,24,235,67,238,249,254,215,237,128,3,222,253,168,6,199,244,14,241,223,238,247,242,135,236,240,10,119,4,131,239,194,7,159,12,151,239,143,2,210,240,13,237,183,239,131,241,207,237,113,243,17,4,113,0,138,255,41,251,211,234,213,238,243,253,192,237,43,236,194,235,88,238,208,254,205,242,163,243,112,242,64,241,57,243,212,237,231,236,41,239,91,236,234,245,240,251,106,1,92,241,153,244,131,237,38,240,34,241,171,255,112,237,234,1,224,0,78,0,235,255,244,0,62,1,251,235,157,2,67,241,188,243,175,242,231,239,140,241,203,241,222,0,13,4,59,236,18,232,113,255,66,234,204,242,216,241,40,241,176,239,177,237,5,238,65,235,170,235,87,235,226,241,98,238,51,245,61,4,84,4,224,236,112,239,79,241,146,1,162,5,207,3,17,6,86,2,34,0,14,2,49,1,164,3,82,2,45,2,146,1,253,255,15,235,66,252,237,255,120,0,134,243,228,236,60,239,142,240,219,235,75,1,47,0,130,0,114,3,205,255,247,235,170,240,129,252,150,235,10,236,95,237,122,235,197,238,223,241,168,240,239,242,18,242,244,237,124,240,130,239,63,239,244,241,168,242,16,237,36,241,197,240,57,248,148,4,116,2,245,243,167,246,237,244,204,239,113,248,118,248,82,247,114,234,148,232,156,236,151,234,176,242,139,250,190,238,11,242,60,238,52,241,182,255,184,247,3,2,158,248,130,1,200,0,199,255,233,246,13,5,232,18,184,4,144,17,112,18,186,245,253,0,165,2,71,0,211,255,80,255,59,2,251,0,94,1,129,255,128,1,190,1,117,236,249,236,3,235,111,255,80,239,232,235,15,1,199,255,9,2,122,245,77,241,69,241,82,255,61,243,135,242,184,255,55,251,138,0,61,1,135,254,38,2,122,1,237,255,89,0,106,237,176,245,234,239,119,255,229,242,12,246,206,232,238,234,23,234,196,240,58,240,132,238,91,240,224,238,25,241,201,234,135,233,163,236,51,231,209,232,51,255,127,234,54,233,74,235,138,235,251,237,196,234,206,0,166,0,198,2,50,238,87,238,113,255,97,0,189,243,57,246,114,241,104,246,14,241,163,249,170,243,168,246,85,238,23,241,115,237,38,237,57,234,247,235,254,237,13,236,86,250,253,238,188,236,52,240,45,236,140,238,66,240,243,237,119,234,35,234,55,235,40,235,122,233,51,244,138,237,91,238,39,241,57,238,89,241,97,237,194,240,216,238,61,237,10,240,91,235,106,255,101,255,59,255,36,0,83,255,166,255,216,0,141,249,158,244,166,10,180,255,189,254,249,8,56,250,66,247,125,255,140,245,243,253,11,255,85,255,248,8,66,9,65,11,202,250,102,254,66,247,63,3,73,255,54,8,116,252,228,0,159,4,16,237,69,0,105,0,142,0,210,255,232,255,0,254,210,0,51,1,67,3,68,246,18,246,158,240,28,246,113,255,144,249,17,0,172,0,9,0,141,0,14,1,130,0,91,0,0,0,6,0,89,1,53,0,76,0,96,0,111,241,27,255,144,241,160,254,15,255,211,254,190,255,62,254,221,255,154,0,176,0,36,0,116,0,127,0,223,0,212,0,212,255,147,255,128,255,148,255,83,0,12,248,87,255,134,248,119,0,71,253,37,0,160,3,176,255,19,2,112,255,38,243,28,255,81,255,144,255,210,254,238,243,13,244,133,247,199,0,4,1,157,255,75,0,255,0,122,1,203,0,210,246,14,243,172,243,117,242,18,241,44,254,124,255,3,242,169,6,193,250,51,3,82,6,237,6,2,4,202,3,243,255,13,1,47,255,152,1,84,1,223,1,174,0,59,1,180,1,117,2,100,0,134,255,189,4,81,255,232,2,54,6,31,2,81,2,171,0,211,0,39,241,228,251,142,0,181,253,220,255,142,249,53,0,19,1,189,0,130,0,17,243,145,234,36,243,200,232,66,233,173,233,16,248,65,233,115,234,217,255,152,233,95,238,99,241,122,250,160,255,211,235,173,236,164,234,176,253,8,241,224,255,129,234,102,236,186,233,232,248,206,248,69,243,3,235,225,250,0,235,37,247,217,255,134,254,240,253,6,255,145,255,59,0,118,0,160,1,13,0,31,1,254,0,40,0,8,0,181,255,223,255,40,2,216,255,33,1,179,0,157,2,204,1,208,1,42,2,72,3,34,241,177,246,26,255,160,247,186,243,32,5,132,5,161,9,224,7,123,1,85,5,164,9,215,8,0,6,233,6,121,5,196,8,88,3,223,4,148,235,123,233,114,234,126,233,5,238,236,232,5,234,44,234,14,235,167,235,76,234,247,234,29,234,6,238,122,235,170,234,188,235,169,237,100,234,102,235,130,237,176,235,167,235,162,233,39,235,116,236,174,238,51,239,230,237,123,239,109,238,116,239,223,237,31,238,99,237,186,248,23,241,50,0,184,238,133,239,41,238,114,241,62,240,179,240,139,234,82,234,86,234,105,237,130,236,198,236,174,237,179,235,236,236,213,238,40,237,29,237,145,238,234,234,235,238,33,240,137,241,247,235,112,239,11,237,228,236,208,235,226,252,3,239,138,241,242,239,25,238,8,236,234,239,246,235,103,1,92,1,100,1,79,0,205,0,192,5,15,5,116,0,125,1,85,0,227,3,221,2,223,255,252,240,85,1,109,0,90,0,185,0,22,1,34,1,154,0,142,0,40,240,4,240,254,240,125,240,47,241,221,240,7,240,13,244,196,242,135,243,25,243,73,242,191,239,185,243,201,242,225,241,157,246,104,5,198,240,82,247,42,1,18,243,7,243,231,240,10,243,160,241,123,1,48,0,162,252,98,0,155,0,88,0,195,0,78,235,20,235,18,243,244,252,25,236,53,0,110,237,234,244,57,244,136,249,73,8,128,240,92,13,188,247,16,0,34,242,243,255,181,251,193,10,219,4,41,9,216,6,6,0,197,253,150,242,114,1,116,249,85,241,100,254,78,251,122,244,21,0,101,253,112,240,115,255,1,0,1,244,126,0,233,0,129,0,94,0,168,3,126,0,12,3,231,0,231,0,91,0,15,0,227,255,81,0,99,1,27,7,58,1,89,10,13,1,99,1,98,13,119,0,228,1,29,0,217,0,98,0,41,2,232,0,59,0,244,0,18,1,176,1,97,0,62,242,179,0,169,1,206,1,46,245,219,255,253,255,213,1,10,1,234,0,239,0,84,0,182,251,56,3,152,5,246,0,174,0,198,249,98,254,167,242,189,240,188,239,62,236,124,243,64,240,253,238,137,0,74,236,193,4,8,4,9,0,130,0,125,0,191,252,234,255,162,242,84,243,144,243,161,1,186,254,116,2,85,254,45,0,152,0,126,3,193,4,54,1,60,243,18,1,28,253,109,0,81,5,143,247,23,1,215,1,20,252,159,1,219,3,231,2,94,2,27,5,0,0,42,4,51,5,58,0,1,1,24,0,75,6,168,1,40,1,42,1,116,1,189,1,216,0,33,1,91,237,207,241,9,0,56,242,225,237,63,242,47,0,156,238,132,0,6,237,62,1,87,1,51,1,20,0,203,1,243,2,170,0,73,0,230,0,9,0,83,0,88,0,37,0,167,0,199,255,136,240,219,236,33,240,238,239,185,240,39,0,156,238,235,2,250,1,76,1,158,235,52,233,52,237,127,240,137,243,102,240,11,240,227,255,182,238,176,238,141,236,90,239,32,238,156,235,159,236,53,234,95,243,136,238,22,243,204,236,215,236,97,241,75,243,155,239,57,242,94,234,61,239,121,237,28,236,51,234,153,234,203,238,23,240,50,236,94,237,229,238,171,240,37,241,100,243,206,245,65,233,216,240,119,240,101,236,225,239,127,234,54,237,118,235,238,233,167,236,92,236,179,236,251,237,119,243,150,241,95,241,89,238,135,236,42,0,38,0,84,0,64,0,185,0,87,0,168,0,147,243,108,244,215,246,92,237,80,238,30,3,161,0,222,12,128,252,219,238,77,2,6,18,234,9,148,239,111,237,39,241,220,0,213,4,138,1,145,239,240,238,202,242,135,240,188,240,217,239,84,241,57,243,144,241,2,245,10,240,91,240,66,240,245,242,104,242,247,243,97,241,92,241,32,244,57,242,87,240,172,240,137,238,173,243,95,240,130,243,229,236,10,237,85,234,75,240,186,238,91,240,86,240,208,237,248,239,166,239,137,240,135,2,244,239,64,242,54,241,139,253,84,239,52,242,207,245,6,243,214,242,100,237,142,240,43,241,255,240,88,241,4,243,99,242,35,241,29,240,49,240,46,241,189,240,25,239,197,237,85,246,116,241,66,242,112,240,103,239,54,241,30,239,119,238,205,241,60,243,218,239,100,241,128,239,94,238,204,237,81,238,166,238,196,237,57,238,35,238,228,234,125,235,92,238,12,236,100,236,241,235,37,237,172,250,85,238,86,237,52,239,0,239,224,240,106,237,111,237,40,238,71,239,188,238,151,238,81,235,168,235,197,241,229,234,218,240,165,238,184,236,31,235,254,235,157,233,177,234,116,233,103,235,122,233,205,232,78,235,16,238,121,234,255,237,22,238,139,234,37,234,190,234,116,235,41,244,33,236,138,234,146,234,47,250,142,233,188,233,54,234,152,243,203,251,70,244,143,238,165,237,176,238,81,234,115,236,217,241,149,237,103,237,127,237,137,233,166,234,137,235,254,248,97,241,127,247,150,235,153,239,112,235,155,236,10,236,113,230,27,235,7,247,128,235,219,235,172,237,160,233,75,243,159,234,171,234,157,236,38,236,38,238,63,239,80,234,231,232,56,237,116,235,88,244,121,235,44,235,94,242,135,236,9,233,65,232,183,232,254,251,211,246,160,234,191,235,223,234,165,236,76,234,149,235,11,235,143,233,230,232,206,232,254,244,174,231,85,233,129,232,75,238,38,235,228,238,161,2,195,1,164,4,43,2,123,7,189,1,234,5,62,0,167,4,152,4,152,1,150,3,239,255,21,5,106,7,108,4,93,1,0,0,48,2,95,1,248,0,2,1,162,0,17,4,245,2,111,2,12,243,222,237,142,237,45,233,115,232,236,235,202,249,38,1,176,0,5,237,37,237,176,240,3,233,56,243,102,238,213,236,67,235,131,233,2,1,128,1,16,0,11,247,85,246,97,242,48,251,5,243,54,233,67,234,87,232,214,244,129,1,137,247,162,254,213,4,69,248,15,0,100,254,197,255,184,255,252,2,233,232,10,235,230,232,13,239,94,245,158,254,241,251,115,5,138,237,115,243,197,250,103,246,199,252,232,242,71,238,15,246,106,241,38,238,157,238,191,238,80,237,67,236,253,235,39,241,63,240,231,241,232,236,46,252,159,239,18,239,86,248,71,235,75,254,97,238,186,240,214,254,118,240,63,237,183,239,102,255,141,244,83,240,168,247,85,242,99,255,119,240,119,240,199,255,249,246,55,3,182,255,184,254,244,0,240,246,66,243,129,242,177,243,50,237,0,238,53,244,246,240,236,243,87,235,239,236,33,238,204,244,91,237,24,238,193,236,20,236,119,235,157,237,83,236,110,237,107,242,0,239,23,255,58,241,46,236,194,242,113,244,152,236,60,239,131,239,141,237,202,236,181,4,19,5,186,0,225,2,7,5,150,4,186,243,28,6,200,251,220,237,54,248,40,4,141,235,203,237,24,237,183,239,48,240,229,248,98,238,169,247,254,238,123,246,184,242,139,243,238,247,15,242,182,235,11,246,233,237,19,245,60,243,111,240,5,240,184,241,110,10,43,253,121,8,208,234,74,235,13,5,98,237,220,246,69,236,197,236,125,12,176,14,104,11,102,9,44,14,115,14,116,14,13,14,236,12,0,0,30,11,127,5,15,240,202,235,54,241,234,239,208,240,158,237,184,239,196,236,46,239,243,241,83,244,170,240,69,239,164,243,104,241,213,247,248,242,132,238,159,255,110,242,64,239,51,241,148,247,81,240,104,246,7,239,19,237,85,238,25,236,155,253,222,239,84,244,241,242,2,241,221,254,38,8,126,0,46,7,203,253,103,1,104,254,153,6,52,1,198,2,138,242,233,244,173,242,8,254,235,253,23,242,15,238,115,237,111,240,127,5,9,246,171,252,73,235,73,235,55,236,254,236,206,246,113,241,172,237,120,236,143,236,148,235,137,8,209,12,217,11,100,7,58,0,101,240,115,253,54,0,177,246,148,238,59,11,167,3,30,239,59,245,249,245,214,10,93,11,24,11,1,11,181,9,45,13,38,13,36,243,231,238,146,243,242,239,242,238,172,237,100,254,57,244,103,9,159,10,27,11,43,2,200,236,72,236,244,235,69,236,222,235,206,237,112,250,192,244,79,241,48,243,198,238,144,238,139,240,141,240,130,238,31,236,94,3,195,1,116,0,211,6,70,0,181,5,192,250,211,238,129,240,97,250,2,247,34,242,77,234,191,253,141,246,227,253,209,239,244,243,168,241,107,240,158,240,83,238,245,235,26,252,214,235,231,238,97,243,114,253,229,237,123,238,238,240,65,238,107,235,41,235,0,235,26,237,74,235,1,251,132,236,88,236,60,0,24,241,189,253,28,0,200,11,85,243,181,241,88,244,50,241,42,241,178,243,164,254,83,244,110,248,169,239,52,240,107,240,57,246,64,242,55,239,145,238,163,240,225,243,90,242,148,243,19,244,177,241,124,239,193,242,242,238,204,238,199,237,159,239,221,235,166,251,188,241,230,238,17,240,26,236,120,237,250,238,229,240,102,240,195,241,167,239,2,249,8,247,154,252,104,250,44,247,201,243,56,1,17,0,92,254,136,246,129,3,225,0,79,249,109,237,166,243,120,238,180,239,208,236,249,236,5,0,215,237,208,237,152,249,174,237,17,236,168,255,215,242,183,242,183,247,23,244,209,230,99,253,74,1,187,255,49,1,185,1,45,255,110,1,247,1,216,1,220,249,221,0,37,255,121,1,0,0,199,2,84,1,238,255,193,255,234,1,227,0,192,1,106,0,101,1,253,255,6,239,173,0,199,236,177,238,18,236,209,0,190,0,36,0,148,0,74,0,88,1,10,235,113,236,184,0,196,0,34,1,207,255,27,234,89,240,48,244,84,245,63,240,123,241,0,236,122,236,34,239,142,237,83,251,68,238,202,239,153,242,87,239,102,245,166,248,230,238,118,245,190,240,36,243,195,241,90,245,120,255,226,255,230,255,238,255,27,0,237,252,43,236,245,236,28,236,133,238,137,237,30,235,195,238,20,0,153,245,51,0,214,236,152,233,99,239,92,239,83,233,100,234,105,232,79,248,145,238,168,237,198,240,37,238,106,241,243,240,208,240,171,240,96,240,59,244,183,242,16,236,110,238,148,236,145,243,91,244,80,238,2,237,225,236,222,236,158,236,111,237,85,236,23,236,179,235,60,243,21,236,197,241,149,236,39,234,21,234,33,239,163,240,54,236,201,237,91,236,17,234,127,237,75,239,229,243,203,238,85,238,162,235,167,236,124,249,230,235,55,243,47,248,154,237,38,237,172,234,240,3,177,3,121,6,208,4,73,5,167,4,152,5,154,235,208,239,95,234,40,234,69,252,181,237,6,247,30,255,119,253,49,237,18,236,202,0,129,239,173,236,241,237,168,1,148,3,11,6,254,5,35,2,208,10,109,2,13,5,32,3,94,243,94,1,71,4,22,4,111,6,204,0,116,1,6,246,210,1,118,1,93,2,175,4,56,3,55,240,223,255,55,1,250,0,164,3,47,1,40,1,2,3,160,2,188,4,44,2,192,1,130,1,41,1,225,1,116,1,155,1,219,4,113,2,191,2,44,4,131,3,190,1,219,1,29,3,12,2,17,3,165,245,154,1,159,0,96,2,208,2,197,1,97,1,61,1,94,238,145,246,220,238,84,248,178,5,77,241,98,248,154,233,87,246,38,233,18,240,22,239,157,1,156,2,163,5,74,3,164,255,74,0,63,253,240,254,77,255,88,0,20,241,136,242,68,243,183,241,35,243,168,237,82,234,188,239,163,236,102,244,50,237,27,238,41,237,173,235,30,244,31,239,207,237,37,238,71,241,146,240,41,241,72,243,143,0,52,2,38,1,70,1,180,0,154,0,219,0,66,1,77,0,216,1,203,0,26,1,32,0,68,241,221,3,37,2,216,255,249,2,98,2,55,2,151,2,5,1,254,232,7,236,186,235,156,236,203,234,241,239,199,244,145,244,213,240,0,239,7,0,133,238,247,255,168,0,178,0,15,237,137,240,22,236,75,233,132,236,153,236,116,234,210,234,84,238,122,237,30,235,241,235,106,234,204,235,39,236,98,237,17,237,28,236,80,236,77,240,0,236,236,234,19,236,60,235,117,235,228,238,8,241,221,238,193,238,174,241,114,245,117,243,128,240,104,242,92,240,53,245,252,243,123,242,155,242,86,244,241,241,9,238,91,239,116,239,241,244,25,242,200,244,49,238,149,239,49,238,141,237,152,241,118,238,139,244,8,241,7,242,89,240,40,239,189,238,67,245,45,243,195,241,114,242,40,241,255,241,249,240,38,240,47,240,78,241,239,236,156,236,92,236,142,235,211,234,189,242,234,239,240,240,134,240,30,238,84,237,226,235,62,239,209,238,188,239,247,236,167,238,127,237,184,253,116,255,203,255,80,240,222,237,19,239,150,249,40,252,146,2,143,248,255,255,233,255,204,243,147,237,57,240,30,242,105,240,89,248,227,238,72,0,13,243,6,238,173,237,16,247,15,240,168,240,224,251,97,238,223,237,197,241,126,234,112,239,86,237,46,244,48,247,11,247,122,243,46,245,233,244,72,240,253,249,205,244,254,255,3,232,108,233,213,232,167,232,214,235,67,240,202,233,203,233,141,240,128,243,170,237,226,237,87,235,153,233,231,238,184,241,222,233,77,238,236,236,170,238,90,237,66,234,169,235,29,250,93,247,206,240,107,239,218,247,185,238,233,237,78,238,186,241,165,246,23,233,251,238,191,243,88,238,86,237,73,244,238,242,253,247,236,240,236,239,208,242,112,238,55,239,31,240,172,239,177,0,93,0,90,242,27,239,219,244,25,0,224,0,182,240,54,244,122,1,49,0,22,2,141,248,52,250,29,240,95,1,40,239,115,244,210,255,206,255,36,3,92,0,133,0,210,255,248,2,142,255,6,248,249,255,169,239,201,255,200,255,45,255,247,255,212,255,104,255,10,0,212,255,29,6,253,2,191,6,154,4,90,5,185,0,235,16,210,18,202,19,87,21,251,4,103,5,190,11,160,1,217,4,186,11,186,17,157,16,74,18,31,4,119,11,214,3,97,244,225,255,165,255,11,243,96,244,52,5,24,7,52,5,0,5,226,3,226,0,94,2,131,1,105,0,83,8,96,253,1,0,228,248,237,255,108,255,78,255,216,255,244,255,107,0,173,255,124,255,220,255,27,1,171,1,145,1,191,1,123,1,42,2,252,0,251,0,17,0,94,255,230,0,213,0,242,0,245,0,147,0,83,2,27,1,94,2,203,0,143,1,250,0,6,236,148,235,227,234,137,236,218,236,40,236,65,239,227,236,138,239,118,244,13,238,132,237,133,255,158,246,112,255,196,235,6,237,85,236,251,1,205,2,48,2,122,245,16,0,216,255,73,0,177,255,37,255,186,237,12,255,63,243,133,246,68,245,43,245,48,243,19,244,42,243,21,239,29,241,179,239,40,247,99,243,95,243,244,253,68,249,168,0,231,242,250,241,39,242,199,255,116,255,184,255,178,244,153,254,11,253,253,255,213,254,57,254,136,241,90,245,235,240,167,0,156,0,72,1,242,2,182,1,57,254,41,255,152,1,123,0,46,0,16,0,53,2,230,1,47,1,159,1,187,255,248,255,215,0,245,0,218,0,16,1,50,0,178,0,235,0,111,4,94,0,9,0,239,236,226,237,127,238,175,237,235,236,68,236,116,242,250,238,155,255,90,244,106,246,26,252,186,255,175,251,3,0,180,237,38,247,153,238,222,255,154,242,215,249,238,235,48,234,40,236,110,234,71,235,70,235,76,233,179,235,169,234,241,237,227,241,204,243,31,242,40,244,199,239,168,238,177,241,91,236,106,237,78,242,3,239,251,237,152,238,0,238,81,243,228,243,32,241,201,237,115,239,158,236,69,235,43,235,225,235,39,233,139,234,175,233,242,233,153,234,245,232,193,255,118,246,104,248,33,235,254,235,190,233,216,234,219,232,161,233,103,236,65,232,208,236,159,231,174,234,230,232,65,234,85,234,55,234,239,232,53,233,78,232,192,236,110,241,74,239,114,236,93,235,196,237,87,236,155,234,30,239,61,240,159,239,186,234,238,234,98,233,96,235,120,237,83,236,4,236,120,4,209,6,210,2,178,253,60,1,50,254,11,2,53,9,19,5,220,234,217,235,194,248,255,236,37,236,102,246,75,1,61,255,135,0,96,251,64,245,184,247,248,252,170,248,36,1,34,239,23,246,167,238,189,242,167,238,210,254,117,244,152,244,244,242,209,242,109,243,232,240,82,241,131,242,252,239,109,247,223,247,104,249,123,242,62,247,247,242,243,242,53,251,116,246,67,237,196,237,250,236,247,238,25,237,147,239,6,242,120,240,76,242,241,244,218,243,90,244,149,236,231,237,16,237,242,234,91,234,66,236,122,233,21,234,25,235,24,241,36,241,131,244,222,235,247,236,180,236,112,237,25,237,229,235,242,242,39,242,24,242,80,237,172,238,68,236,127,236,72,241,191,235,133,235,81,235,200,238,7,238,94,236,24,235,96,234,29,239,188,242,231,234,156,237,244,251,12,241,165,239,112,240,47,238,73,237,83,236,229,237,155,235,164,235,114,238,199,233,175,236,114,237,42,239,232,236,143,235,94,234,255,233,80,234,198,235,188,234,128,235,87,236,75,237,168,235,171,234,233,234,83,234,110,234,22,234,93,236,93,235,36,233,240,233,26,233,172,233,135,246,254,241,44,240,212,242,137,243,34,237,102,236,142,240,86,239,125,239,210,239,154,245,96,241,0,242,31,236,36,238,253,234,110,240,151,238,219,240,13,238,89,239,230,249,231,247,18,237,176,237,47,237,18,245,10,253,47,242,126,244,2,242,76,241,169,237,197,238,123,237,253,237,71,237,51,238,112,237,54,241,20,240,207,236,25,235,77,243,33,237,221,240,80,242,57,242,148,240,125,235,214,234,242,236,31,236,163,238,254,237,231,237,73,255,133,255,239,255,73,255,51,0,152,255,71,0,213,253,26,255,82,0,246,0,60,254,55,255,41,2,230,255,109,0,21,1,146,0,0,0,18,0,3,1,213,255,241,255,74,0,246,255,75,255,8,247,138,247,229,244,14,245,193,246,219,243,171,245,73,12,7,11,39,10,172,9,249,8,76,8,134,250,16,3,45,249,199,243,93,245,125,255,11,245,170,0,0,0,159,8,189,247,6,9,114,255,174,249,111,253,156,240,108,1,53,251,43,249,146,3,110,251,224,2,20,2,226,0,252,255,41,6,120,254,72,254,204,1,43,7,213,0,224,10,240,10,100,12,140,8,177,9,207,6,89,8,192,10,95,8,181,255,167,6,46,6,231,252,248,255,117,253,9,255,11,3,82,11,124,1,80,9,255,7,112,1,47,0,4,0,158,2,254,248,11,254,96,255,188,254,154,248,140,4,144,3,24,245,153,0,92,5,18,249,203,3,253,0,100,245,160,255,140,1,4,255,21,4,224,247,161,245,227,252,123,2,129,236,214,2,240,2,165,245,21,7,157,3,227,249,99,1,197,3,174,0,127,0,150,0,192,255,40,0,230,255,230,0,166,0,198,0,172,255,215,255,133,255,42,0,244,255,254,255,159,0,11,0,16,0,246,3,117,6,74,2,38,1,152,1,164,0,230,0,63,2,14,1,66,0,43,0,81,0,102,242,180,244,215,239,145,240,6,250,216,242,40,252,53,237,190,236,79,255,148,251,128,255,21,238,209,237,35,2,1,0,209,255,254,246,255,247,57,250,243,255,197,0,249,255,57,239,22,254,98,244,228,5,83,1,55,3,209,0,41,1,187,255,247,255,120,1,242,255,0,0,47,237,240,255,16,244,86,255,169,255,205,0,202,255,124,0,80,0,124,0,104,0,166,0,140,0,77,1,91,0,102,0,74,0,81,0,97,0,83,0,49,0,49,0,252,255,100,0,69,0,77,0,77,0,129,0,126,0,71,0,55,0,86,0,20,0,36,0,19,0,31,0,58,0,58,0,228,238,247,243,254,239,82,255,230,240,239,240,218,241,211,241,75,250,30,255,64,255,28,255,51,255,15,255,105,255,5,255,36,255,184,254,225,255,198,255,228,255,131,255,186,255,57,255,59,255,40,255,133,255,17,255,52,255,239,255,201,0,164,0,177,0,156,0,112,0,129,0,4,0,179,0,33,0,204,0,169,0,180,0,135,0,110,0,197,0,124,0,146,0,147,0,24,0,10,1,92,255,43,0,206,255,138,0,105,0,188,0,32,0,85,0,122,0,127,0,254,255,157,255,246,255,1,0,4,0,234,254,213,255,157,255,86,255,223,0,179,1,187,0,20,3,92,0,31,0,63,255,246,255,212,0,91,245,206,244,188,244,197,247,96,251,148,255,59,252,226,252,218,252,164,250,241,251,192,251,206,254,189,1,62,252,153,253,158,252,60,255,134,1,93,246,108,255,130,251,73,0,90,0,239,255,238,255,127,255,237,255,111,1,160,1,9,1,149,2,193,0,207,0,101,5,149,255,36,0,204,0,180,254,36,5,250,1,105,0,235,0,168,255,143,239,99,255,252,240,136,243,99,245,152,1,130,6,185,246,207,254,92,243,26,1,1,0,139,255,97,254,31,0,254,255,153,243,174,254,85,246,253,254,4,245,169,253,61,252,138,253,238,247,41,244,18,243,5,255,228,246,50,248,181,245,220,248,100,254,145,248,230,249,46,247,39,245,151,247,133,243,158,241,217,255,237,255,151,0,104,0,90,1,212,0,128,1,140,254,153,0,122,0,195,255,27,0,240,255,56,1,38,1,157,0,224,0,162,1,112,1,129,1,150,1,160,1,190,1,149,0,231,0,100,1,5,245,87,250,145,241,158,244,251,244,43,250,198,245,68,242,118,241,39,241,152,253,123,242,127,254,18,241,88,241,76,241,221,254,14,255,236,254,206,255,184,1,242,254,25,0,48,242,59,248,18,247,40,240,21,241,136,239,200,255,212,241,21,243,234,255,227,253,127,1,75,1,217,4,7,2,145,5,104,5,22,6,120,4,187,4,21,4,119,0,140,4,188,253,10,2,181,0,202,0,6,0,58,2,29,2,208,6,183,3,196,2,187,254,212,0,12,255,113,0,237,0,1,247,183,0,227,255,7,250,0,0,42,1,137,0,183,0,232,0,4,1,122,255,69,1,69,254,2,2,51,1,154,1,46,1,63,1,145,1,209,1,224,0,111,1,79,1,31,2,112,1,204,1,175,1,98,1,155,1,38,0,17,0,183,2,45,5,126,2,160,1,204,1,191,1,2,3,126,2,238,254,53,255,28,253,166,5,54,0,13,3,191,255,155,255,214,1,5,0,54,0,72,0,192,3,209,3,140,0,194,3,8,2,72,4,212,1,141,1,103,1,185,0,149,0,187,2,35,5,89,0,115,5,171,7,47,2,13,4,56,239,67,250,239,242,230,241,46,247,149,239,93,241,255,0,240,255,207,255,233,255,78,0,157,255,234,254,246,255,2,0,245,255,205,245,215,255,180,255,221,255,225,255,177,255,114,243,214,244,115,241,140,0,170,2,122,0,173,0,213,0,248,255,3,0,237,255,72,0,232,3,38,0,120,1,131,1,17,0,31,0,19,0,140,0,210,0,137,236,127,242,182,244,15,236,159,236,211,236,96,241,17,241,214,237,84,233,220,235,186,233,204,234,121,233,140,232,12,235,223,232,177,232,197,234,113,233,40,248,221,235,237,234,217,232,47,234,121,232,107,233,97,234,28,233,17,234,85,240,91,238,249,237,31,0,114,251,21,0,240,236,26,238,56,237,100,241,136,243,118,249,2,255,106,242,152,242,190,255,113,255,137,255,234,234,17,235,125,234,172,236,192,235,78,236,216,235,242,234,128,235,158,255,161,239,82,238,38,252,40,255,57,254,113,239,159,1,234,255,56,3,5,1,82,255,134,232,227,232,249,232,196,243,44,234,188,234,144,234,130,233,94,235,131,241,22,241,4,241,197,242,11,245,202,242,154,240,157,240,200,244,117,235,31,239,242,240,68,234,141,236,125,234,203,233,213,233,19,241,213,236,210,240,120,241,152,249,171,233,59,234,32,235,75,234,118,237,134,238,10,238,176,235,232,240,8,245,188,242,192,246,39,241,226,255,224,255,20,254,186,255,202,255,176,255,208,249,142,246,102,242,205,241,35,249,59,255,140,253,232,247,146,245,182,249,6,244,135,254,7,1,127,255,234,1,84,2,138,243,36,245,244,0,245,2,96,0,238,245,241,255,17,0,33,0,137,1,189,0,250,1,226,1,114,3,183,1,164,2,38,3,179,255,116,4,198,255,68,2,238,255,4,0,84,3,104,1,78,0,249,255,68,1,92,1,190,255,110,255,235,255,218,255,207,255,210,255,226,255,42,1,15,1,29,0,236,255,136,0,234,255,228,255,211,255,165,255,11,0,175,255,14,0,154,0,207,255,161,255,204,255,211,255,201,255,47,2,220,255,216,255,206,0,58,0,173,1,49,1,41,1,197,0,235,0,157,1,39,1,40,2,202,2,123,2,84,1,156,1,191,2,145,2,59,3,184,1,87,2,99,1,189,2,65,2,224,1,215,1,244,1,18,1,2,240,18,241,196,241,215,241,205,241,38,244,108,245,14,247,118,245,226,244,70,0,85,248,101,255,101,242,233,244,67,243,247,2,200,2,226,0,145,4,241,2,31,3,83,4,153,245,99,255,51,0,120,5,219,1,148,2,159,7,227,5,43,9,39,2,191,6,160,4,255,4,51,7,15,6,114,5,225,8,213,8,110,11,249,7,202,5,186,3,100,6,86,1,104,7,226,6,189,9,64,4,228,4,84,4,55,7,5,5,134,10,90,2,171,3,63,7,82,3,120,3,222,0,106,2,163,1,120,0,12,7,203,3,239,2,30,3,225,6,215,5,143,4,13,5,147,8,203,235,170,234,234,233,235,239,4,235,241,234,57,234,194,234,122,235,250,237,236,245,168,233,239,234,220,237,232,234,134,234,157,233,195,233,153,236,43,235,68,236,168,233,226,232,104,233,63,233,103,232,32,235,49,235,116,234,211,234,0,235,110,235,213,235,192,234,71,238,35,234,101,234,218,233,95,234,40,235,75,234,230,235,174,235,50,235,247,236,230,237,75,246,85,238,136,237,134,238,195,233,138,234,113,234,194,234,198,233,31,235,63,236,240,238,210,235,196,236,193,236,127,236,119,235,31,234,14,235,79,235,127,235,99,235,254,235,219,235,145,235,27,235,10,235,81,235,249,236,37,236,218,234,167,236,17,235,113,235,213,234,170,235,194,234,198,233,56,233,66,242,124,234,163,233,124,234,250,233,175,233,75,233,120,234,246,232,6,235,245,233,33,235,37,233,237,233,89,233,110,238,159,238,22,238,205,239,48,240,183,239,195,238,88,238,234,238,171,239,200,238,153,239,41,238,126,238,90,238,89,239,225,238,195,239,178,236,221,236,236,236,174,238,91,238,162,239,37,237,208,237,191,237,184,238,22,238,116,238,169,255,6,0,74,255,211,239,53,241,191,240,20,242,152,240,64,241,225,240,72,238,136,237,96,239,174,239,110,238,53,239,28,239,68,239,191,240,205,240,12,241,38,240,4,243,133,241,128,239,84,240,24,240,224,239,106,240,242,239,88,236,197,234,205,234,40,235,106,234,2,237,19,235,240,234,237,234,2,237,148,236,54,236,17,238,218,236,160,236,103,237,53,237,103,237,116,237,138,236,175,237,221,235,44,236,27,237,253,235,172,235,173,235,126,235,77,235,187,235,7,240,47,239,250,239,169,238,13,238,114,237,111,236,102,236,54,238,27,238,26,237,131,237,27,237,212,235,127,236,16,239,216,239,111,237,111,239,92,237,97,238,49,240,121,239,236,236,80,238,121,239,60,237,59,235,182,237,121,237,236,241,40,243,172,239,203,240,75,240,156,240,193,239,70,238,61,239,25,239,184,233,173,234,127,235,11,235,249,235,148,238,77,237,86,237,136,237,218,240,128,237,85,236,197,234,16,235,172,235,81,236,27,236,142,235,211,236,117,237,183,236,140,237,33,2,42,5,8,2,120,248,119,243,91,244,165,248,210,237,108,239,94,237,253,255,189,1,88,238,165,238,255,238,21,239,224,238,109,239,19,239,105,244,71,240,29,240,128,234,196,236,43,235,165,234,30,235,205,238,171,236,226,237,167,238,192,237,99,245,6,237,110,238,150,237,150,236,204,235,31,236,6,236,110,0,92,1,45,1,191,0,176,0,61,2,187,1,51,0,191,1,21,1,244,0,55,1,174,1,165,0,126,0,77,1,122,0,128,0,92,0,114,1,217,1,36,1,15,8,233,4,183,3,112,5,105,3,167,6,185,12,38,0,89,0,33,0,33,1,190,0,89,1,49,1,214,0,197,1,142,4,146,3,86,7,85,6,228,1,63,3,77,2,197,2,229,2,27,5,14,235,217,234,187,247,155,238,81,245,100,240,40,255,179,0,19,2,246,1,168,2,54,1,161,0,241,255,47,0,57,1,78,0,37,0,128,0,26,0,30,1,255,1,234,1,26,0,228,0,39,0,177,1,49,1,88,1,152,1,85,1,78,0,147,0,153,0,204,0,59,1,144,0,78,1,56,1,210,0,41,1,187,0,220,0,234,0,217,239,50,239,212,240,22,240,68,240,79,239,208,239,146,241,100,241,163,241,254,239,168,240,244,240,57,240,85,241,1,241,175,239,23,240,104,240,27,240,223,241,56,240,205,240,201,240,181,240,166,239,177,248,82,246,115,243,147,241,41,243,38,242,130,243,238,244,174,245,168,242,80,242,38,242,50,243,208,241,101,242,189,241,190,239,86,241,145,242,16,243,56,242,115,243,200,242,92,243,119,243,31,243,158,243,193,241,117,242,83,243,188,251,200,1,60,243,145,0,157,2,101,250,147,248,68,241,171,241,6,243,70,242,89,243,117,242,194,241,204,252,168,240,171,241,246,254,91,255,238,4,6,242,89,244,49,241,60,243,221,243,203,243,69,241,195,242,61,241,12,241,33,241,53,244,185,242,158,243,183,244,109,244,5,240,63,241,249,239,88,242,245,240,139,243,248,242,110,242,94,0,118,0,124,3,113,0,61,0,159,0,182,2,158,242,199,255,37,0,70,0,134,0,116,0,14,1,129,0,178,0,250,0,98,0,158,0,83,0,102,0,134,0,76,0,157,2,71,4,124,6,181,234,194,234,73,237,99,234,39,235,231,233,211,234,81,247,252,248,25,252,69,239,251,245,186,239,122,0,197,245,244,244,163,237,171,238,171,235,242,239,20,241,209,234,43,239,197,245,209,6,108,249,128,246,145,245,192,245,127,243,12,245,6,243,104,248,133,244,119,244,42,1,57,6,4,1,212,243,146,255,93,1,38,0,136,255,139,244,232,246,51,243,185,243,126,249,151,249,148,2,43,249,173,254,193,254,155,247,45,244,84,243,98,236,251,245,60,242,125,252,121,4,118,240,216,255,77,243,134,240,243,240,70,1,135,0,83,3,205,3,113,0,55,0,36,0,224,255,179,7,8,7,84,6,152,6,18,3,172,7,113,12,222,255,177,0,62,248,193,9,137,8,253,255,1,0,13,1,71,0,145,242,173,252,103,255,167,8,121,0,216,0,255,246,213,242,62,244,246,241,57,242,237,255,6,0,169,0,86,2,153,2,31,0,93,242,97,240,165,237,43,241,181,239,81,8,209,239,143,255,155,242,220,241,172,241,202,237,134,252,164,236,223,238,180,250,235,255,211,255,183,255,26,255,112,243,254,255,237,255,91,231,4,251,249,255,238,255,117,245,215,239,72,249,248,253,0,0,252,255,4,5,52,0,242,0,18,247,73,243,244,254,179,250,54,238,152,239,46,0,115,251,91,241,12,243,102,243,56,255,80,0,242,255,215,255,65,0,172,0,104,0,118,0,180,0,151,0,223,0,117,0,62,0,123,0,119,0,143,0,96,0,119,0,82,1,33,3,82,1,154,0,132,1,96,1,143,1,51,2,160,0,116,0,112,0,102,0,217,0,226,0,180,0,183,0,186,0,85,0,130,0,233,255,228,255,232,255,61,0,1,0,224,0,253,255,246,255,33,0,179,0,57,1,62,0,170,0,67,2,210,0,129,0,131,0,135,0,161,0,76,5,9,10,255,7,165,7,48,13,212,8,214,6,219,13,21,1,162,1,214,2,173,4,185,0,88,3,148,0,109,19,199,1,16,12,117,0,67,0,133,0,183,0,145,0,131,0,82,0,97,0,251,0,144,16,241,0,88,1,223,0,14,1,103,1,151,0,248,0,78,0,102,0,88,0,0,1,44,1,50,2,48,1,147,1,92,1,214,0,199,0,144,0,198,0,36,2,97,2,179,0,165,0,3,1,3,1,92,3,21,2,62,2,218,1,6,255,62,1,232,254,73,2,123,2,138,1,226,247,71,1,163,251,145,249,29,1,241,255,206,254,240,0,210,255,171,2,98,1,147,1,222,0,241,1,223,0,229,1,83,2,55,1,221,3,189,246,162,247,38,246,192,0,220,252,5,244,38,2,119,0,108,0,143,1,249,0,92,1,185,1,42,1,206,1,41,0,113,0,103,0,106,0,159,0,157,1,182,0,114,0,236,4,59,1,69,0,183,0,110,0,127,255,128,3,64,4,173,4,81,5,101,0,98,0,169,4,249,4,208,3,190,255,88,249,181,247,97,254,202,255,127,3,158,1,37,0,68,0,5,1,189,0,241,255,159,251,119,246,54,253,168,2,247,255,237,253,166,248,160,1,229,242,232,2,243,255,250,255,59,247,40,240,56,242,224,238,29,239,176,242,66,241,204,240,74,243,149,235,172,236,128,236,195,239,27,239,185,239,60,239,212,237,232,239,191,238,142,240,159,242,171,2,222,2,147,4,49,236,146,243,172,238,127,252,149,253,131,239,255,238,174,237,245,235,223,6,191,5,53,0,79,4,206,3,253,4,186,255,0,1,15,245,73,0,241,255,235,255,6,1,145,0,86,0,13,0,22,1,134,1,155,241,149,241,161,240,62,244,169,242,158,244,68,247,73,244,235,255,135,250,73,250,239,242,132,1,196,1,108,1,169,0,80,1,241,3,235,247,245,255,170,255,128,249,171,254,93,1,113,5,150,9,68,3,100,1,200,255,64,0,8,2,60,2,182,0,153,4,168,3,159,3,210,1,26,2,126,3,187,252,121,8,153,1,207,242,242,0,96,248,242,241,243,244,152,0,172,1,7,1,126,0,134,0,64,247,146,246,112,246,220,255,193,2,252,1,191,2,132,246,168,0,11,0,133,0,174,0,100,0,192,8,144,4,100,248,164,2,235,5,153,3,89,247,0,0,227,255,92,0,239,255,49,2,144,1,211,3,62,0,246,4,82,0,164,1,134,253,78,1,130,1,116,2,118,1,25,3,47,3,232,2,250,1,146,3,53,3,63,250,253,248,150,1,32,1,126,3,46,3,45,2,95,1,77,3,86,0,70,4,129,3,240,7,173,2,56,4,226,255,27,0,65,3,7,0,227,255,134,5,236,3,31,1,203,255,202,10,159,8,233,8,248,8,30,4,178,5,4,4,150,2,137,1,204,1,111,1,47,2,255,3,84,0,164,7,14,0,122,0,182,0,227,255,84,6,99,0,227,255,196,6,61,0,139,4,160,2,205,1,156,1,173,1,186,1,9,1,81,1,8,1,158,0,62,1,21,1,241,0,89,1,224,1,192,1,81,1,59,1,19,1,30,1,54,1,85,1,63,1,17,1,22,1,138,1,41,1,41,1,26,237,122,238,190,241,56,242,225,238,94,239,216,238,246,255,21,255,251,253,47,245,49,251,50,0,82,237,133,239,195,239,19,244,208,255,225,238,210,239,1,0,188,249,109,245,241,241,98,243,149,242,28,237,126,235,39,236,86,1,77,0,46,0,11,240,193,244,184,0,33,1,50,1,47,1,222,1,67,1,25,1,175,0,79,1,249,0,221,255,224,1,153,0,5,1,189,1,76,0,148,2,169,1,96,1,204,0,99,1,253,0,21,1,52,0,152,0,110,1,143,1,67,0,3,1,117,0,54,0,12,0,37,1,88,1,34,1,38,1,23,1,136,1,168,0,22,1,39,0,165,1,51,0,210,0,74,0,6,1,232,0,177,1,255,0,114,1,43,0,96,0,12,0,186,0,234,0,65,0,44,241,20,239,214,255,68,247,64,241,219,246,189,255,19,0,247,255,3,0,185,237,22,238,79,238,254,236,173,237,208,235,142,239,127,238,186,242,89,240,85,240,30,238,61,0,119,246,145,244,206,236,107,238,181,238,119,2,185,1,37,1,255,0,147,2,87,1,195,1,174,1,62,1,231,255,49,2,84,0,31,233,249,234,39,234,178,232,30,235,180,232,237,235,166,237,59,240,231,239,170,244,207,237,163,244,152,236,175,244,215,241,232,240,247,237,174,243,54,241,75,239,232,239,116,239,81,237,164,242,59,238,169,0,246,0,173,0,68,0,220,255,59,238,63,239,203,239,142,238,16,245,26,239,49,240,34,239,143,239,118,239,80,241,43,239,226,240,81,238,28,239,209,238,7,238,225,237,74,236,76,240,204,238,5,240,101,237,28,237,180,234,246,236,48,235,40,237,124,234,119,236,136,235,22,243,24,240,191,243,240,239,75,241,137,242,80,239,220,240,35,238,192,235,1,236,85,238,67,236,151,238,102,237,211,237,214,237,232,238,245,238,63,237,134,239,104,245,247,242,47,242,252,239,216,240,167,239,223,242,169,241,37,239,227,234,118,235,92,237,130,237,92,235,140,234,27,240,3,238,130,238,146,237,249,238,195,238,57,237,148,235,211,236,42,236,37,234,150,234,219,234,217,233,230,235,8,241,227,237,11,238,28,239,228,238,155,239,210,235,212,234,239,235,155,238,225,239,225,241,144,235,240,238,44,236,85,242,46,238,10,240,242,234,138,236,119,236,217,235,123,239,175,239,99,238,94,238,50,243,12,241,181,248,5,240,101,241,226,242,246,239,236,242,206,241,186,242,186,240,227,242,229,241,115,234,17,235,167,233,201,235,54,236,191,243,200,241,251,239,42,240,237,238,24,240,36,238,55,239,47,238,167,235,184,235,89,242,211,246,38,243,22,236,174,237,82,235,164,235,186,234,26,236,172,234,222,234,108,240,62,238,124,234,19,234,133,237,177,235,159,235,209,236,67,239,200,234,118,235,228,233,62,235,98,234,61,235,153,233,20,234,227,235,138,236,71,236,188,236,249,238,252,236,83,238,25,240,221,237,31,236,169,240,218,237,99,242,25,241,26,240,18,245,81,241,197,241,10,242,207,237,159,240,93,239,184,241,16,237,227,236,39,242,16,240,211,239,179,241,97,238,24,238,78,236,124,236,170,238,124,239,182,236,221,236,72,235,249,239,173,238,104,0,141,0,71,0,57,0,57,0,22,0,67,0,158,0,141,0,144,0,82,0,188,0,113,0,73,0,172,0,214,0,138,0,81,0,149,0,138,0,156,0,183,0,133,0,82,0,105,0,47,0,179,243,178,244,124,242,156,242,95,241,228,246,44,247,141,238,122,238,214,236,225,0,160,247,85,3,127,238,14,239,43,239,89,1,213,0,203,255,139,15,165,0,42,2,66,2,73,239,49,0,110,244,249,12,147,5,66,2,113,13,90,12,51,19,227,247,131,232,170,243,159,0,33,12,251,0,220,16,66,17,231,14,234,11,121,14,75,14,74,241,108,241,49,240,24,237,18,239,110,234,101,15,166,237,147,250,3,4,39,246,54,240,126,0,145,0,112,0,151,0,240,0,68,248,228,8,67,17,144,11,164,8,170,0,217,0,248,0,239,0,209,13,246,0,141,1,68,1,60,239,145,239,227,238,96,239,247,239,236,238,101,239,221,243,139,241,210,241,142,243,230,241,78,242,160,238,84,240,129,238,218,240,27,241,45,240,128,240,192,242,178,240,238,239,212,239,166,239,38,239,55,244,137,243,85,245,227,240,145,241,234,240,164,242,248,242,233,242,48,240,120,240,145,239,155,241,157,240,21,241,85,240,145,240,80,241,33,243,110,243,105,243,80,241,132,243,36,243,17,242,15,243,126,241,231,240,58,241,214,241,185,242,196,243,180,242,189,243,180,240,152,241,14,241,229,241,14,243,116,241,145,243,107,241,10,243,194,242,81,241,249,238,209,240,204,240,251,240,159,241,196,238,72,239,230,236,241,241,220,240,44,241,186,243,122,242,9,244,94,243,9,244,133,239,27,241,117,239,126,241,219,241,42,242,124,243,119,243,92,243,156,241,222,241,252,242,72,243,243,234,210,237,122,236,13,238,129,236,128,237,10,238,218,236,165,236,162,241,107,247,253,242,209,239,63,240,193,241,185,239,130,239,5,239,31,240,248,239,181,239,136,238,140,238,58,238,131,239,22,239,167,239,33,238,31,237,242,237,135,1,93,235,90,13,19,239,59,239,12,239,124,0,53,237,46,237,93,241,19,241,20,242,224,241,151,240,36,241,31,240,81,241,141,241,95,241,177,241,27,242,55,240,5,240,147,255,18,239,150,240,35,241,58,240,58,240,27,240,190,243,188,243,204,243,120,241,189,243,92,242,149,242,245,241,176,242,251,238,38,242,52,241,57,241,11,239,163,241,9,241,242,240,110,240,10,242,94,241,21,243,72,241,157,242,146,241,202,243,50,242,116,244,124,242,19,242,152,243,75,243,107,238,23,244,2,243,111,239,56,240,119,243,234,241,4,240,11,242,224,254,148,239,191,240,177,241,20,242,200,241,96,241,190,241,44,242,1,240,52,240,244,240,187,239,138,242,180,240,55,241,251,240,78,239,233,241,2,242,167,236,81,237,230,238,221,238,176,238,233,237,10,239,112,239,45,240,101,239,100,243,243,241,32,243,248,242,66,242,252,241,148,241,187,242,223,242,42,242,69,241,144,241,158,239,76,240,72,240,145,240,72,240,201,240,206,239,253,242,205,247,55,242,188,239,101,238,186,240,187,239,87,241,30,238,224,241,228,246,21,249,144,239,154,238,122,237,205,241,159,241,176,239,207,240,89,242,233,240,207,239,40,239,60,240,191,240,107,239,83,240,54,239,81,239,15,239,11,242,70,240,83,242,36,242,4,241,39,238,178,238,217,238,68,238,229,239,172,239,195,239,207,239,203,237,54,238,200,238,88,238,77,238,54,238,220,237,242,237,48,239,16,239,125,239,20,239,33,239,164,238,205,237,132,238,56,238,27,238,251,236,172,238,17,239,114,237,221,238,255,237,134,238,82,238,47,235,135,235,203,235,228,234,82,235,53,236,55,237,138,238,195,237,90,237,163,236,227,236,238,238,53,237,251,235,87,235,59,237,129,237,126,236,127,236,214,236,129,236,220,235,249,235,80,236,46,236,180,239,57,245,122,248,156,235,18,239,175,240,158,237,75,237,191,237,184,238,13,240,107,239,69,239,125,243,102,239,51,240,78,240,74,238,181,237,108,237,234,238,240,235,237,237,207,235,109,237,43,237,2,238,53,236,148,240,217,236,235,237,15,239,20,239,82,239,184,238,31,239,172,238,56,240,39,239,198,238,123,238,84,239,172,238,160,238,234,238,173,239,97,239,80,239,32,235,29,235,38,235,131,236,40,234,21,239,57,235,159,237,96,237,20,238,33,235,63,234,141,236,197,239,104,236,205,233,61,241,29,237,194,236,60,238,163,237,146,238,14,237,165,235,187,236,137,242,53,235,17,236,208,234,164,234,49,237,26,236,159,233,240,234,23,235,83,245,146,235,10,236,134,243,125,238,42,234,139,234,29,234,98,233,124,234,226,235,253,234,76,233,247,233,153,232,47,234,230,237,63,234,248,232,206,232,76,239,188,235,219,234,67,0,34,236,113,234,21,236,174,235,123,239,171,240,5,235,83,237,109,235,79,254,208,255,205,235,111,234,66,236,249,233,210,233,115,235,20,234,11,234,11,234,86,247,25,235,13,235,249,238,106,234,203,235,137,239,128,236,80,237,75,235,20,242,121,234,211,232,178,237,17,247,39,237,159,236,59,235,114,236,36,235,180,236,197,238,113,251,37,253,18,237,153,226,197,237,190,245,162,249,187,250,66,236,18,234,75,235,128,233,153,233,245,233,126,234,242,233,20,235,236,245,62,246,247,245,43,245,250,244,204,243,120,247,18,247,118,220,147,236,153,233,45,242,229,240,87,238,241,239,33,242,65,238,65,238,121,238,130,239,122,237,63,241,90,246,113,245,122,239,204,239,175,234,178,234,183,236,219,235,125,236,133,237,24,235,195,236,52,238,78,236,209,235,252,237,21,237,118,237,109,236,33,242,251,234,217,235,182,235,255,234,101,234,13,235,214,238,195,233,56,235,249,249,77,242,252,246,179,237,224,245,221,237,118,243,109,240,11,236,231,238,93,238,233,240,98,235,79,237,129,236,93,236,253,238,237,238,21,235,118,240,70,235,97,234,15,236,198,236,30,234,242,235,220,234,153,244,222,235,211,234,140,234,219,244,137,237,217,251,128,246,190,237,229,235,249,235,15,237,202,234,186,235,1,234,56,235,11,236,12,238,59,239,53,237,203,238,117,239,78,235,84,234,99,236,190,238,144,236,214,235,94,237,35,237,59,237,216,235,45,236,177,235,152,234,184,235,41,235,216,234,216,235,111,240,230,237,92,235,170,235,29,235,60,233,176,235,199,236,2,237,218,234,58,234,162,235,225,234,215,234,128,234,66,234,91,234,27,239,196,237,40,237,125,236,228,235,133,237,123,237,198,236,53,236,39,237,179,235,221,235,153,238,180,240,45,235,14,235,146,235,213,233,171,235,109,237,245,234,80,236,172,245,114,235,151,236,138,255,133,239,71,236,97,235,247,236,156,236,25,235,96,238,137,238,80,238,229,236,162,238,209,235,72,236,119,240,4,235,238,235,35,236,111,241,22,241,30,235,90,234,22,235,130,233,235,233,147,235,253,238,181,231,27,233,232,233,82,233,39,233,244,233,52,233,33,233,157,231,3,232,44,232,132,239,42,234,19,234,34,251,192,250,233,252,83,245,228,242,103,248,239,235,79,233,88,234,163,233,54,234,210,233,208,233,42,226,179,235,244,227,169,233,254,233,199,236,68,234,187,233,234,234,37,234,12,230,155,234,156,237,86,234,205,233,202,236,118,235,92,234,225,232,14,237,40,234,53,233,191,232,65,233,88,234,59,232,92,232,201,233,149,234,23,233,49,234,174,231,93,237,151,232,21,232,68,232,155,232,71,237,243,232,234,232,13,234,83,235,196,232,98,236,4,235,134,234,66,236,243,234,129,233,140,234,247,232,73,233,146,233,200,232,185,232,0,233,199,235,68,245,31,241,241,240,184,239,74,1,212,0,222,4,34,2,211,4,54,1,169,1,169,6,243,6,22,9,177,4,175,3,245,3,178,7,37,5,160,8,110,3,102,2,221,1,12,2,28,5,250,1,222,255,102,2,31,3,152,2,129,0,210,4,133,2,31,0,78,1,43,0,239,4,237,1,47,4,139,0,41,1,137,0,6,5,53,5,183,4,231,255,240,1,2,0,65,6,80,4,193,4,255,4,2,4,141,5,34,4,166,4,60,4,53,4,178,5,134,5,227,255,39,251,168,3,188,255,205,1,194,1,238,0,161,1,172,3,69,1,160,2,177,1,229,3,175,5,59,1,190,0,123,0,45,2,110,0,62,0,52,1,111,1,231,0,197,0,53,1,79,3,240,4,143,3,34,5,67,5,176,4,239,0,34,3,198,2,14,4,101,3,221,5,134,3,122,3,54,3,43,2,214,2,112,2,171,2,216,250,46,236,25,245,77,243,26,237,165,246,101,254,193,236,192,254,48,233,203,232,76,237,21,231,156,233,122,234,37,234,184,234,177,230,60,240,176,252,231,238,209,240,44,0,249,255,109,0,86,0,218,254,84,1,213,0,153,2,69,242,137,240,18,243,15,239,206,239,132,239,203,245,71,241,136,237,148,234,186,233,181,239,217,233,177,232,130,232,3,238,183,234,31,237,43,237,27,235,36,235,11,239,201,235,2,242,82,237,147,236,17,243,98,235,148,236,205,239,5,2,52,1,92,0,189,0,123,0,98,1,181,0,200,0,216,1,65,241,208,240,111,240,134,246,223,241,52,253,149,255,119,252,171,255,9,248,126,249,223,233,173,255,106,248,151,255,63,234,217,239,10,237,233,255,115,0,203,255,190,232,63,236,198,233,213,232,12,236,53,236,122,235,249,235,37,232,116,233,21,0,11,232,208,249,90,3,176,236,234,235,239,236,12,237,25,254,178,2,211,255,77,255,236,243,216,2,18,1,197,241,108,1,40,242,214,0,127,2,80,235,88,234,26,0,196,232,44,0,253,249,201,1,68,249,132,252,222,255,157,0,8,0,4,0,21,0,54,0,107,247,155,251,143,255,149,255,43,253,165,255,210,255,254,255,233,2,37,0,210,255,131,1,225,255,242,255,250,255,198,255,240,255,183,234,248,240,3,233,251,242,46,250,210,232,208,232,24,241,59,233,211,239,245,231,60,235,130,241,93,235,219,237,118,235,183,238,128,237,141,243,79,236,220,239,130,244,20,254,151,250,93,251,110,247,82,244,151,236,27,239,56,238,116,253,88,0,194,231,65,249,16,1,165,240,41,250,50,2,255,2,120,253,92,238,80,237,233,237,227,243,23,237,241,238,74,248,146,248,40,247,166,241,242,243,89,244,228,254,217,251,211,253,18,241,40,242,106,241,206,238,210,237,89,237,122,241,139,240,252,238,204,238,134,246,55,244,153,248,184,249,18,244,79,237,131,238,122,239,141,238,47,238,56,237,119,239,142,238,61,239,39,238,92,236,34,238,148,236,126,236,233,236,64,235,101,236,211,235,110,243,226,240,73,243,155,239,224,239,21,239,28,241,212,239,200,238,12,239,107,238,158,239,251,235,122,239,110,237,182,237,178,241,108,236,140,241,3,247,189,242,1,237,17,236,236,235,44,241,64,235,126,238,192,234,147,234,16,236,86,243,3,244,84,242,57,240,64,239,20,242,60,239,60,240,127,237,161,237,178,235,146,241,193,245,96,252,212,247,108,255,46,250,195,238,180,237,121,239,213,237,101,240,55,237,108,239,205,237,226,237,24,238,137,245,70,238,152,249,82,238,44,239,224,238,249,242,254,255,244,241,13,240,63,241,30,248,141,241,223,237,208,244,233,237,152,251,39,238,174,236,0,238,81,236,217,241,159,243,191,255,84,250,157,245,138,247,250,238,212,239,44,239,222,239,59,240,10,242,142,1,28,0,208,1,163,244,22,250,233,244,66,2,129,0,205,0,166,241,8,3,42,0,213,3,15,4,222,5,217,246,89,1,33,244,179,242,221,244,54,242,24,0,96,243,28,0,247,255,51,242,35,0,32,247,207,255,65,246,193,239,79,239,112,238,164,239,54,238,11,239,196,241,52,244,1,236,43,243,101,241,159,241,101,240,228,238,81,243,71,244,21,243,147,240,199,235,204,237,163,236,142,235,149,236,63,236,123,242,126,239,215,237,238,237,181,240,161,237,111,251,28,3,76,1,193,247,236,237,167,236,196,237,15,237,179,238,130,255,149,245,217,238,87,239,223,239,153,238,101,238,164,237,201,237,204,237,121,237,117,240,164,236,160,235,215,235,14,236,15,236,59,236,212,239,9,237,119,240,1,237,142,236,10,237,189,234,208,235,246,236,86,255,210,253,174,1,29,237,86,241,145,237,223,245,83,244,78,239,130,236,201,236,84,236,5,236,81,236,209,237,55,235,102,235,98,245,181,238,151,235,31,239,230,236,93,239,220,239,189,245,115,245,199,244,165,235,201,235,71,234,220,237,56,237,168,237,64,235,151,238,0,238,91,236,166,236,207,238,34,234,228,235,138,234,213,4,184,2,180,2,222,3,109,3,158,3,74,1,148,4,201,6,66,4,161,3,117,4,15,4,40,4,15,4,91,4,0,4,101,4,201,240,110,244,193,238,15,5,65,4,214,255,47,3,134,5,170,5,190,4,237,4,171,5,123,237,229,235,106,236,40,237,32,239,209,237,253,3,107,249,19,242,247,234,195,3,14,251,127,255,216,3,198,5,226,254,15,0,64,255,226,237,94,242,72,238,35,238,31,237,237,235,186,235,94,239,114,237,160,239,235,236,126,238,213,237,37,241,189,236,82,235,178,250,108,240,213,239,226,243,72,247,148,238,99,0,84,254,48,0,99,252,77,244,117,246,32,245,123,236,199,242,126,236,69,245,208,249,160,255,84,246,45,242,218,240,242,241,84,239,174,237,137,248,171,237,60,242,20,236,19,240,237,237,250,241,146,243,223,242,121,245,149,250,222,245,85,246,174,248,221,242,34,236,184,242,71,240,80,237,99,237,105,237,246,242,116,246,253,249,76,248,249,244,195,248,70,249,24,238,233,239,55,235,141,239,158,237,101,235,170,235,55,241,22,241,109,248,113,246,32,245,214,247,27,246,44,241,89,241,20,239,253,242,39,248,169,241,235,243,122,243,103,238,242,238,171,244,66,242,18,243,176,239,116,240,114,12,82,10,220,11,30,0,22,7,196,6,41,0,143,4,57,254,130,241,17,243,245,242,168,234,178,234,124,235,9,235,114,235,151,235,61,235,115,6,177,253,22,0,183,243,191,242,166,2,235,237,125,238,107,236,179,235,156,236,55,235,88,235,27,247,122,236,220,241,65,236,55,237,109,235,20,12,128,12,214,10,33,15,180,13,138,13,155,11,50,13,153,13,117,12,153,12,17,14,247,10,246,10,157,7,214,14,183,13,215,15,0,12,236,13,144,11,60,14,194,14,207,13,167,12,252,13,180,12,54,15,167,13,180,14,59,239,196,6,165,245,8,241,254,254,106,9,36,11,210,11,153,9,203,6,223,9,103,3,35,2,65,4,76,6,201,9,93,10,131,8,89,241,43,238,68,238,167,236,0,240,110,236,28,236,2,241,69,244,140,240,1,239,87,240,211,242,181,244,108,240,27,239,208,236,243,237,153,236,14,236,17,237,165,237,144,241,174,236,56,240,40,236,9,228,207,236,0,244,41,239,38,236,145,238,17,239,139,238,175,238,135,242,47,245,158,238,213,243,80,243,85,245,76,239,48,239,199,239,5,241,138,247,179,244,86,239,137,241,93,240,51,243,89,243,171,242,24,240,214,241,84,239,154,237,104,235,171,240,244,244,16,239,181,241,239,238,46,237,11,238,73,241,78,238,241,239,205,238,201,237,184,238,37,238,23,239,247,235,18,240,184,234,95,244,182,245,65,243,4,243,193,238,68,241,95,241,139,242,207,242,155,241,131,240,115,250,35,247,10,247,114,246,80,245,251,238,138,239,237,237,91,239,77,243,106,243,89,241,40,241,72,236,40,237,111,237,245,237,67,237,227,237,49,236,176,237,35,237,188,252,97,252,49,255,69,244,159,251,132,254,65,240,64,242,182,238,210,240,204,242,57,238,27,238,66,240,87,240,84,255,152,243,98,243,148,239,255,239,202,239,128,9,209,7,50,10,121,0,57,5,91,6,91,7,27,3,112,2,72,244,138,254,112,251,42,0,180,254,103,254,64,2,75,252,99,0,174,4,245,3,126,4,92,2,88,1,231,7,13,4,100,0,65,0,134,1,60,0,107,0,149,255,15,243,185,243,164,242,71,243,243,242,249,247,138,247,83,246,137,252,252,245,231,240,190,239,218,242,140,244,64,244,13,248,237,243,155,238,232,238,245,239,177,237,211,237,225,236,6,241,190,238,175,238,225,253,78,241,44,242,35,0,231,3,173,1,89,1,128,2,201,242,120,243,178,241,188,253,94,254,98,255,44,0,10,0,35,254,176,245,155,254,114,252,182,0,223,234,47,236,251,236,29,235,142,235,33,235,74,235,229,237,118,235,108,238,6,236,167,235,91,242,43,0,247,235,45,238,255,240,64,238,221,238,83,236,195,236,23,236,104,243,128,241,254,247,1,232,198,238,80,239,135,237,63,236,213,236,222,236,254,236,211,236,12,236,152,237,102,239,206,236,172,235,177,236,247,235,146,238,213,236,118,240,57,10,4,10,18,10,0,9,211,6,233,11,5,14,165,11,51,13,169,12,101,13,75,12,14,0,248,241,17,3,117,5,153,7,220,5,174,9,84,10,174,9,20,8,48,235,4,237,38,236,20,247,110,240,205,239,104,6,25,0,204,237,168,237,84,5,57,243,32,0,110,10,65,10,244,240,59,0,65,241,19,239,80,238,179,253,197,242,90,239,215,238,181,238,41,13,104,11,141,7,199,8,89,9,46,9,248,2,61,238,74,239,225,239,85,239,171,240,96,239,83,254,180,244,86,254,143,254,0,0,73,246,238,11,226,11,235,9,253,10,113,9,63,12,206,12,170,9,68,10,145,9,59,12,38,11,66,12,66,9,18,10,114,9,91,14,237,13,214,13,76,14,126,12,169,13,193,12,60,11,19,12,142,12,61,246,172,243,53,242,24,239,171,240,140,240,247,241,171,241,235,239,55,239,209,238,131,238,219,244,10,239,116,247,215,237,120,238,115,238,179,5,249,3,94,8,118,241,65,254,84,244,242,7,201,4,165,255,253,238,100,241,200,242,83,12,21,12,164,11,183,10,88,8,41,10,145,7,123,10,6,12,82,12,187,241,107,2,110,252,84,246,41,3,186,10,205,8,33,8,87,242,113,236,40,236,171,235,178,236,182,236,132,237,188,235,41,236,1,237,83,237,195,235,182,236,196,235,206,235,64,236,34,253,39,0,195,237,200,238,179,239,52,239,161,237,40,236,229,236,251,236,81,243,91,244,84,243,144,241,6,243,101,243,132,243,105,242,55,241,7,239,15,239,2,239,131,238,207,239,155,238,223,239,73,239,19,240,79,239,1,238,198,235,97,240,182,239,99,242,57,237,132,236,240,236,37,239,84,238,75,240,50,9,250,10,25,8,121,7,15,1,168,2,39,2,80,3,247,4,73,6,205,4,200,1,41,7,114,8,24,240,3,0,11,240,204,1,216,4,139,2,34,0,64,8,231,8,63,6,45,6,82,4,137,236,96,238,245,236,172,236,65,238,250,239,118,254,21,244,20,239,85,240,247,0,217,241,20,254,134,254,88,255,139,244,114,244,12,243,229,246,27,244,165,235,103,0,100,246,191,255,6,234,6,238,208,240,94,2,160,3,121,251,136,254,215,253,181,251,31,255,18,1,30,2,5,247,181,249,122,236,70,239,93,243,245,236,129,253,191,251,234,253,182,247,116,245,181,241,78,241,31,240,119,239,98,238,49,240,74,239,86,239,134,240,129,239,86,236,203,234,33,236,81,254,166,236,10,248,243,235,149,235,140,243,44,238,226,247,251,1,90,238,7,233,174,238,38,254,133,253,167,253,21,243,247,251,165,239,241,238,37,239,145,241,87,238,236,238,144,237,101,240,191,239,31,238,70,235,198,235,202,234,7,236,241,235,102,235,124,235,68,236,151,236,47,238,211,236,70,236,144,237,178,236,25,239,237,234,1,236,91,235,238,236,155,235,84,236,225,250,170,253,218,250,33,249,73,244,73,235,123,235,7,235,59,236,55,239,74,236,24,239,210,237,237,234,28,235,11,251,108,239,205,254,170,10,63,0,89,0,234,9,208,1,159,239,108,241,212,253,174,254,18,244,1,1,119,0,26,7,13,9,72,1,12,9,93,254,201,252,46,254,52,0,45,0,52,0,157,243,52,241,222,241,178,245,252,244,180,239,194,239,139,245,3,243,123,245,26,236,177,237,175,239,248,238,197,243,158,239,157,240,81,241,160,240,134,242,223,244,24,245,224,240,17,245,109,245,10,243,61,240,227,6,199,0,67,245,118,245,158,244,5,247,79,242,182,237,222,237,241,237,188,236,17,247,191,238,127,244,96,247,136,245,3,244,110,239,77,241,179,239,224,239,199,252,150,240,138,242,27,247,234,245,147,243,138,3,48,253,131,5,166,251,28,244,23,242,134,242,88,243,9,240,46,240,132,238,120,239,165,241,20,240,35,242,112,238,87,238,168,240,118,239,198,240,120,238,252,238,51,243,185,241,177,242,86,242,229,241,204,242,215,243,96,243,93,241,252,239,225,240,170,240,234,243,13,244,63,243,148,242,187,244,3,246,214,240,216,239,16,239,125,237,47,241,254,236,59,239,220,239,163,240,224,242,243,237,143,237,217,238,25,238,241,237,91,237,95,239,30,242,91,241,137,240,22,236,79,245,66,236,187,234,61,237,147,234,243,254,87,234,143,233,237,240,184,239,196,240,113,239,30,239,210,239,245,236,237,238,201,237,176,236,105,237,210,238,6,237,122,236,215,236,158,238,65,237,179,238,98,237,121,238,208,236,222,238,214,240,217,239,179,238,13,242,81,238,27,240,70,239,0,239,190,238,194,241,197,243,161,242,182,240,114,240,210,242,134,240,131,241,164,240,91,241,106,246,249,243,171,245,157,248,143,255,83,250,214,243,57,244,224,247,234,245,198,243,153,244,129,251,82,247,116,252,173,240,229,248,125,253,43,250,59,253,132,245,231,241,63,250,228,248,247,0,207,255,112,253,36,1,167,0,187,1,25,251,173,255,55,254,170,0,71,1,97,1,253,237,49,2,85,237,152,0,216,3,7,1,43,250,119,246,85,250,111,239,140,245,17,248,186,246,166,245,222,237,139,1,70,253,30,252,75,240,177,239,108,235,163,238,114,252,194,245,130,238,136,243,13,237,106,237,218,236,186,236,67,236,224,237,210,255,40,238,79,251,254,246,22,238,149,255,209,238,57,237,109,238,174,237,192,237,134,237,139,250,121,241,142,250,210,250,163,252,32,237,187,237,163,238,182,236,63,240,118,239,97,244,22,242,5,237,60,237,211,237,110,236,190,243,46,1,122,253,206,255,131,244,237,255,249,255,46,2,107,238,28,241,40,236,145,238,225,233,245,251,209,243,171,254,205,250,166,248,2,2,10,255,207,252,176,255,139,238,230,245,211,242,168,255,161,255,234,253,253,242,88,1,115,239,195,245,58,0,66,236,66,2,139,1,183,1,207,255,155,0,14,1,66,2,158,1,14,2,254,0,138,1,50,1,241,1,205,1,31,2,137,242,63,253,6,241,113,1,215,255,148,253,16,0,218,255,224,0,121,2,196,1,2,2,35,255,17,2,134,3,232,255,85,0,167,0,143,0,130,0,164,0,211,255,83,0,195,255,236,0,17,0,174,0,195,255,209,255,197,255,229,1,94,2,102,2,208,0,178,1,10,1,250,0,68,1,217,0,249,255,73,1,196,0,40,254,67,0,248,255,157,255,236,255,124,1,60,1,164,1,81,1,229,0,246,255,171,255,214,255,129,0,99,0,252,1,169,0,154,1,172,241,255,244,142,238,174,240,17,243,94,1,177,255,172,235,190,247,110,240,232,1,203,247,171,237,245,235,45,240,218,238,246,235,234,236,193,236,156,238,192,240,202,238,240,0,120,0,22,1,82,1,116,1,67,2,206,0,32,0,32,0,44,0,105,0,115,0,42,1,117,0,194,0,113,0,250,0,78,0,121,0,115,0,94,0,32,1,216,255,228,255,72,1,100,1,181,1,182,235,129,235,141,237,198,233,94,234,117,234,225,235,152,1,171,1,203,1,50,1,210,255,207,0,200,255,182,255,19,0,21,1,97,0,215,1,44,0,48,0,0,235,233,0,254,253,72,0,157,0,142,0,3,234,105,234,155,233,19,234,33,235,118,0,153,252,165,240,244,238,40,241,30,239,64,239,21,239,81,242,22,244,86,242,100,243,65,243,215,245,31,242,147,242,240,241,115,239,81,241,56,242,118,241,246,240,255,240,219,240,55,239,80,235,7,235,79,236,53,234,179,236,166,234,114,234,181,239,212,238,176,238,238,238,213,237,70,239,79,247,93,239,83,239,149,239,252,240,30,237,68,238,244,239,11,240,107,239,139,236,183,238,138,237,70,239,107,240,132,240,186,240,225,243,174,243,46,245,124,244,247,242,204,241,166,243,255,242,25,242,103,241,72,249,99,242,193,241,161,242,88,241,163,239,34,240,215,240,11,241,228,242,251,247,21,245,106,242,230,241,194,241,76,243,42,244,202,239,206,241,62,241,222,239,126,241,52,244,90,243,163,243,223,243,173,242,16,243,162,243,195,245,221,255,164,251,49,0,190,255,41,0,107,248,175,255,228,255,236,255,220,255,191,255,233,255,213,255,70,0,47,0,40,0,84,230,109,234,252,255,204,242,97,243,121,240,226,255,241,255,190,255,193,255,119,237,176,237,84,238,59,237,249,236,61,236,27,238,223,239,250,236,212,232,160,237,119,236,190,234,217,234,21,234,46,234,90,236,179,237,234,255,53,0,223,255,243,253,107,5,190,0,79,247,28,0,88,242,237,235,44,236,144,238,148,239,8,234,23,236,101,248,216,234,136,245,154,242,34,234,157,245,149,233,251,236,29,233,156,250,245,250,133,232,115,233,230,232,72,234,190,233,218,236,85,233,82,233,91,234,59,236,239,235,104,236,247,255,95,242,66,0,212,255,29,0,66,245,135,235,148,233,183,234,139,234,121,235,80,250,186,240,132,234,192,240,54,231,116,235,89,243,247,237,166,238,208,240,23,240,181,239,42,238,95,241,4,244,73,242,47,242,89,241,130,242,241,241,146,241,170,239,162,240,232,245,128,242,39,244,200,244,34,241,63,243,206,242,200,240,224,239,19,240,26,241,150,241,8,241,224,242,52,240,113,242,124,244,80,236,46,238,219,235,62,238,200,237,212,235,192,237,64,237,114,238,177,243,215,243,13,245,115,244,133,240,54,243,177,238,244,240,116,239,175,243,83,238,186,237,23,243,66,237,170,237,50,238,26,236,221,236,193,235,180,236,233,237,208,238,174,235,251,235,171,235,193,237,184,236,240,236,50,237,135,236,234,236,176,236,136,236,217,235,253,234,12,235,161,234,213,235,185,235,3,236,51,240,110,240,241,240,153,241,174,240,204,234,22,235,0,235,140,235,133,236,25,244,168,251,255,255,232,236,161,235,252,238,112,236,243,244,187,234,77,235,236,236,74,236,80,237,25,233,189,233,8,233,184,232,40,235,1,233,129,235,142,245,246,244,77,244,115,243,175,236,20,239,245,234,97,239,250,233,247,237,116,243,114,236,161,240,213,235,235,236,55,236,69,240,160,247,147,237,166,245,244,235,151,236,176,239,137,235,67,235,17,236,207,235,175,235,236,233,218,243,0,234,197,236,150,242,3,240,220,242,213,242,2,240,94,248,141,239,240,238,138,239,94,238,38,240,22,240,55,236,150,235,157,238,3,237,254,236,28,238,152,239,14,239,166,239,253,238,215,234,230,233,82,237,72,235,152,235,56,235,244,240,163,236,126,237,148,238,22,239,111,236,98,237,193,237,183,242,28,235,47,238,177,237,87,244,233,236,37,236,82,237,105,235,234,255,180,244,146,240,249,239,204,240,61,238,34,237,63,234,206,234,11,236,67,234,47,235,239,234,75,242,231,248,251,246,85,237,247,4,228,3,49,4,80,4,160,4,22,4,176,3,139,5,63,5,72,4,154,4,145,5,24,5,102,4,247,4,101,4,118,5,126,6,21,4,4,5,209,4,85,5,149,4,7,4,89,4,220,3,161,246,140,240,94,234,153,235,255,237,240,235,57,237,3,235,81,234,236,234,54,234,218,234,36,234,154,233,117,0,134,247,10,0,71,239,37,240,11,243,183,239,37,239,224,236,202,234,195,235,162,236,227,255,122,5,213,1,29,252,77,248,53,0,76,240,123,244,141,4,206,4,140,234,45,236,231,234,21,235,17,237,178,1,6,240,41,240,153,241,243,235,15,236,94,237,138,236,43,2,232,0,171,240,28,0,92,0,106,252,169,237,128,237,202,238,56,236,18,237,32,239,33,237,188,237,78,236,105,237,102,236,123,1,158,1,166,1,215,1,219,1,58,2,40,5,30,4,42,4,245,2,50,5,236,1,54,2,166,1,187,1,157,1,179,6,37,4,84,7,149,2,17,4,30,5,21,8,79,6,58,7,115,5,102,4,142,1,231,1,180,3,177,5,97,5,222,6,78,240,210,243,56,0,80,250,232,249,25,0,234,0,110,4,181,4,110,4,115,5,191,4,168,5,247,3,114,6,97,5,142,2,58,1,77,5,14,1,101,2,4,1,6,2,43,0,142,5,215,1,43,7,236,6,169,1,253,239,145,243,36,241,233,243,13,255,187,0,96,0,25,0,208,1,248,0,9,1,9,2,145,1,106,1,134,2,172,2,127,2,170,1,252,1,167,1,183,2,240,1,247,1,115,2,107,2,116,4,101,4,212,2,82,6,149,3,95,238,39,239,7,0,81,245,133,252,228,242,131,0,245,2,100,1,110,2,114,2,51,2,126,1,69,1,134,0,140,0,225,0,34,1,80,1,89,1,28,1,235,0,169,1,118,1,125,0,81,1,226,1,6,2,251,2,41,2,134,3,97,2,26,3,74,2,129,2,189,1,142,7,67,2,153,2,79,2,88,1,54,1,62,1,35,3,125,1,57,2,59,1,40,1,196,0,95,2,107,1,84,2,79,1,178,1,239,1,102,1,52,2,37,1,101,1,28,1,72,1,149,1,74,2,254,1,177,2,187,1,227,1,193,1,163,1,250,1,204,1,163,5,162,4,119,4,158,4,72,7,136,7,132,2,220,2,242,1,255,2,41,7,106,4,156,2,90,4,57,4,89,2,51,3,29,3,163,6,5,3,82,6,37,2,118,2,108,2,154,2,163,1,131,1,128,1,191,2,239,2,53,2,182,1,208,2,69,3,242,3,140,1,30,2,107,2,220,2,184,2,197,1,204,2,163,1,198,239,150,242,183,243,114,242,69,246,2,4,7,1,60,1,240,1,144,2,201,255,30,251,71,3,137,4,0,0,255,1,9,2,203,2,3,2,40,0,103,1,61,0,200,2,6,2,218,1,198,1,0,2,105,2,77,1,214,1,199,1,225,1,244,2,161,1,48,2,67,1,79,1,160,1,104,1,150,1,209,236,133,236,49,237,242,236,146,238,69,243,210,243,205,255,159,255,109,0,154,242,12,240,43,249,169,0,90,240,157,240,158,2,213,255,194,0,195,239,96,248,38,240,218,241,124,255,125,245,178,241,221,248,247,242,212,241,128,233,57,232,215,232,121,248,194,234,13,253,26,232,54,232,142,245,157,240,75,241,108,242,198,239,193,244,85,243,173,244,52,245,113,242,154,241,19,3,30,2,182,5,57,5,161,0,101,1,46,1,191,0,84,255,177,1,101,3,168,1,138,1,120,4,223,243,82,255,215,238,43,0,208,255,52,0,166,255,174,255,124,255,165,1,41,2,197,0,49,239,34,0,127,255,159,255,134,255,162,240,166,255,105,255,81,246,8,255,209,5,191,255,249,2,47,1,112,255,90,255,137,255,135,255,189,239,164,240,158,239,184,241,44,240,44,241,228,242,83,245,23,246,244,241,168,242,69,241,235,244,10,244,70,241,156,242,75,242,178,243,28,241,244,241,26,240,159,239,2,239,44,236,117,235,136,234,155,235,210,234,236,233,167,243,217,242,128,241,225,233,168,238,140,239,62,240,178,245,108,237,220,237,97,240,67,237,172,236,54,239,248,238,207,236,172,236,72,235,97,236,157,236,178,242,76,238,29,238,209,235,62,236,132,237,6,244,106,242,10,240,32,241,47,242,183,240,226,239,221,238,32,239,154,238,164,238,249,238,162,237,104,239,219,238,121,239,73,239,150,238,78,238,2,240,135,239,213,239,251,240,175,241,108,239,190,240,211,239,149,240,79,238,148,243,69,242,150,245,205,243,147,240,239,241,43,242,102,242,21,0,149,0,109,0,57,0,253,0,192,0,254,1,29,1,32,1,77,1,82,1,219,0,225,0,37,1,25,1,77,1,89,1,208,1,88,1,161,1,252,1,0,1,73,1,211,2,111,0,169,0,74,0,114,3,157,2,45,3,32,2,99,4,159,0,122,1,111,1,76,0,35,1,68,0,61,1,179,1,157,2,74,2,113,0,222,0,104,0,124,0,119,0,195,0,212,241,34,239,30,0,133,242,156,243,204,246,233,255,230,2,3,3,237,1,57,2,208,3,45,3,43,3,116,1,248,2,123,2,185,3,219,3,3,1,193,3,24,3,245,2,58,3,186,2,80,1,25,2,139,0,102,0,194,0,148,1,141,1,233,2,168,1,68,1,26,2,109,1,142,1,210,0,196,1,222,2,188,2,110,2,194,1,178,244,168,233,28,235,59,236,230,232,218,237,162,236,181,235,103,235,216,235,175,236,201,235,158,235,12,234,150,234,150,235,10,236,243,235,198,235,114,235,205,235,153,234,95,239,232,241,57,239,206,238,201,237,155,255,33,252,182,240,144,246,65,240,202,247,2,245,33,241,93,238,198,238,214,250,176,239,161,247,88,239,86,240,100,239,73,238,180,6,84,0,152,0,69,0,23,0,225,234,65,252,225,255,118,255,3,243,31,0,75,0,133,2,123,3,76,0,254,0,186,255,245,0,8,0,7,0,95,0,24,0,113,237,224,237,2,237,140,236,65,236,78,255,34,244,50,245,95,243,79,241,185,234,222,235,116,235,238,235,103,238,13,238,66,237,107,236,223,232,221,237,236,233,242,233,50,238,144,236,191,236,184,235,27,239,228,234,67,237,116,235,28,234,66,235,20,234,3,242,222,234,175,234,145,234,167,234,106,235,228,234,179,239,199,237,46,238,190,237,45,237,222,238,4,237,246,233,30,235,197,234,158,236,110,236,86,238,236,234,58,236,54,235,183,235,157,236,98,237,79,236,86,236,160,234,15,236,89,236,248,236,7,239,8,237,208,237,80,238,9,238,233,238,231,237,163,240,218,235,112,235,117,235,179,237,15,235,203,236,190,237,75,236,171,234,17,236,191,239,106,239,64,237,20,237,198,235,180,236,212,236,183,234,237,236,64,235,203,245,100,235,226,235,14,235,112,234,189,235,139,234,111,235,250,234,64,240,20,234,253,234,14,235,181,234,174,235,19,235,177,234,251,237,73,239,99,238,34,238,225,237,46,241,197,239,226,239,221,239,120,242,209,239,167,238,37,236,132,238,205,237,107,237,70,242,210,240,245,240,129,239,245,239,172,238,134,246,107,245,52,242,156,244,246,239,180,245,135,244,131,239,71,240,134,239,105,242,39,241,247,240,212,239,121,238,234,240,106,242,130,242,201,242,201,241,181,244,183,243,96,244,89,243,50,244,59,245,174,243,165,241,120,246,151,245,90,240,84,239,154,238,201,239,68,240,87,241,198,241,237,242,205,240,90,242,249,237,94,238,64,239,43,238,247,238,68,237,74,241,234,240,67,240,224,243,91,240,191,238,225,242,148,245,146,243,42,243,219,241,177,239,231,242,184,240,197,241,2,243,122,243,217,241,153,243,45,245,65,245,198,243,75,245,84,243,190,238,145,238,174,238,137,239,112,238,215,240,238,237,191,241,133,239,78,240,172,238,146,236,79,241,205,241,70,239,168,240,202,240,142,242,82,241,63,238,128,240,194,236,65,239,241,239,18,244,101,238,67,238,68,248,79,252,191,244,137,242,25,240,170,240,96,240,166,240,234,239,248,255,124,246,183,238,231,239,33,243,216,239,118,239,22,239,144,238,117,240,125,243,98,244,247,243,57,244,24,245,51,243,200,242,184,242,32,244,144,241,133,242,150,242,105,242,246,241,244,242,65,244,216,240,220,243,213,243,111,241,60,242,221,241,139,240,136,241,89,241,128,242,151,242,156,243,169,240,5,240,107,240,59,240,124,240,242,240,127,240,99,240,213,239,206,239,69,241,138,240,58,241,174,241,105,243,95,240,138,241,177,241,173,238,230,236,180,237,74,237,68,236,209,236,105,236,107,235,26,237,246,236,216,236,196,236,170,235,195,233,223,235,183,233,155,239,185,234,4,234,62,235,48,235,72,235,147,243,215,241,43,242,210,243,67,242,3,241,102,240,217,242,201,240,175,240,226,240,136,241,247,239,73,238,168,240,138,238,77,238,10,239,87,243,60,242,130,250,16,241,104,238,165,239,210,238,198,239,67,238,239,235,99,236,132,238,8,236,64,237,93,237,187,238,67,240,93,240,245,238,217,239,52,239,161,238,129,240,41,241,151,240,84,238,15,237,223,238,25,238,110,236,177,236,106,239,248,239,134,240,92,240,29,240,67,236,25,236,93,236,130,236,124,237,104,239,95,238,246,236,253,242,136,238,146,245,197,247,153,0,247,255,55,250,93,6,65,0,31,255,52,241,205,249,239,243,124,233,201,238,155,236,61,239,13,243,220,241,1,0,20,242,72,245,204,251,73,248,159,247,72,244,119,247,40,245,54,0,79,249,106,247,158,252,83,11,101,0,228,2,116,248,19,253,133,0,204,255,210,255,222,255,218,255,22,0,12,0,20,0,154,255,15,0,250,255,11,239,49,240,43,244,88,254,129,233,142,232,12,236,111,241,18,244,178,244,111,245,163,238,238,249,25,236,188,238,251,239,51,238,53,246,126,239,100,244,160,241,0,240,112,243,15,237,161,247,167,243,203,255,129,0,83,0,224,8,114,254,28,241,42,245,167,242,232,241,36,242,58,238,9,239,142,237,77,238,194,238,244,240,99,239,108,240,98,242,20,239,87,239,14,243,173,243,223,255,5,0,77,244,165,244,11,245,106,242,34,240,144,251,179,241,196,242,44,244,38,232,7,248,202,237,88,238,47,239,96,239,200,234,104,235,41,234,11,237,160,237,9,233,173,235,26,253,11,243,79,238,237,241,186,242,135,252,193,241,185,235,12,235,15,243,38,246,242,236,23,249,168,245,208,247,91,244,248,234,218,235,247,238,38,250,249,253,165,243,125,245,245,237,150,245,117,242,21,246,148,250,177,245,252,253,195,255,161,254,141,250,225,241,30,242,124,239,255,247,127,243,240,244,173,242,70,238,5,239,155,242,172,239,23,244,233,245,132,243,247,243,218,246,241,243,164,243,220,237,208,239,42,244,32,244,160,243,113,0,121,255,71,246,234,237,153,243,28,247,147,246,33,236,59,232,58,234,17,235,131,233,214,234,119,232,26,234,177,231,134,233,108,232,194,232,174,237,226,238,212,234,176,244,223,239,117,243,17,236,17,233,210,233,95,233,250,249,203,245,97,232,33,251,94,237,214,233,6,234,162,239,24,235,250,246,12,234,9,236,152,235,13,234,30,234,41,233,126,234,72,234,115,239,35,239,223,234,160,235,216,235,233,232,1,234,186,233,129,234,40,234,190,234,204,233,95,236,62,239,120,235,195,237,75,233,18,234,197,234,187,233,100,234,79,234,107,236,88,238,71,238,48,242,177,239,172,238,253,239,30,239,51,236,61,231,204,234,115,235,71,233,55,245,119,234,246,233,48,234,249,247,152,234,157,234,17,240,79,236,252,239,20,245,114,240,18,235,31,236,47,235,15,234,65,238,142,242,32,243,224,237,76,238,144,1,132,248,253,253,21,251,239,248,2,247,40,247,161,246,127,246,61,241,251,244,169,0,201,245,23,1,57,254,199,244,222,240,102,254,39,236,130,238,83,238,44,239,105,240,5,236,77,236,44,239,124,238,123,239,0,238,220,238,48,245,136,241,123,241,83,243,211,238,207,241,123,239,124,239,104,239,5,239,178,232,92,233,123,232,165,232,146,232,84,238,176,236,86,241,216,237,91,244,42,239,23,240,72,236,108,236,160,248,55,234,0,241,146,236,74,239,80,238,10,248,238,233,238,242,145,239,108,243,26,249,172,248,224,237,145,244,118,240,234,239,186,239,84,238,86,249,196,242,110,244,54,246,96,244,35,246,66,248,218,240,188,242,187,239,107,240,27,241,65,245,166,239,36,236,35,240,38,238,171,240,212,244,55,239,242,239,95,239,43,238,94,238,117,238,178,237,65,243,200,239,239,238,215,242,247,238,105,240,221,239,113,240,234,238,218,238,167,0,84,244,223,242,81,248,252,255,96,0,191,241,106,241,142,241,112,239,103,246,121,238,175,239,148,246,21,243,44,242,13,240,118,246,83,239,52,0,90,0,217,255,5,0,4,3,14,0,28,0,8,241,3,242,124,243,53,242,116,241,54,243,160,244,18,1,193,1,13,1,103,2,38,2,250,0,17,0,5,3,182,255,181,255,163,255,240,255,167,252,39,245,132,245,210,246,227,239,92,3,255,249,166,2,60,8,169,255,6,240,19,238,1,239,192,239,94,247,201,246,20,249,158,243,26,239,52,0,235,249,135,0,60,3,178,239,215,248,165,248,239,244,38,249,120,247,218,255,234,255,188,255,194,0,6,0,107,255,173,255,144,253,243,255,186,247,96,0,222,3,93,5,64,1,152,0,253,4,174,0,206,0,200,0,200,0,13,1,201,255,188,0,252,3,125,3,167,3,5,0,24,245,114,239,194,255,131,252,97,253,161,251,116,255,219,255,18,1,1,0,53,239,188,239,169,255,169,236,79,251,224,248,92,253,200,255,8,0,243,2,62,0,201,255,31,0,117,5,252,255,130,0,246,255,97,252,234,255,126,249,188,255,52,0,235,255,10,0,204,255,141,255,69,239,60,0,192,244,18,240,48,245,62,0,236,255,104,0,65,0,95,0,210,255,54,255,184,255,201,255,215,255,64,1,0,0,187,255,50,2,49,3,203,1,25,1,91,6,84,11,102,1,203,2,247,7,148,1,166,1,135,6,27,9,203,7,96,5,153,9,215,5,35,7,230,10,58,8,38,8,157,3,128,0,181,0,160,20,74,2,68,4,221,4,45,7,128,19,50,20,92,19,8,12,145,19,136,19,219,20,114,19,103,17,147,17,37,8,56,14,190,4,3,4,60,4,186,4,218,21,249,9,153,20,205,3,45,3,47,7,21,6,54,11,167,5,203,14,100,6,37,4,163,16,66,5,10,7,4,5,248,5,232,18,232,19,203,20,214,17,45,19,122,16,160,10,209,17,181,10,25,9,50,12,124,14,105,9,186,3,194,3,2,16,14,9,41,20,200,10,10,15,50,18,166,4,238,3,55,5,219,3,113,8,143,4,62,3,21,3,221,3,18,245,21,247,64,241,229,240,133,241,234,255,32,251,140,244,249,250,145,245,141,244,75,247,76,243,180,244,224,241,198,242,45,245,202,243,77,244,10,242,170,243,170,242,19,3,6,17,77,1,255,6,215,7,8,15,109,18,254,0,116,0,208,6,32,15,153,16,153,1,212,2,193,6,165,4,137,1,103,4,113,3,186,9,144,5,104,7,196,0,57,1,214,1,210,0,227,0,161,1,187,0,187,2,28,1,237,0,184,1,255,1,237,21,94,18,7,5,196,19,43,0,253,2,70,0,38,1,111,0,134,0,43,0,99,8,170,0,70,246,73,247,7,9,62,0,37,0,147,5,201,2,154,248,226,246,13,246,43,0,78,1,247,255,5,0,50,250,186,255,136,255,99,255,151,255,186,255,7,0,152,255,170,255,79,255,250,255,23,0,59,0,159,255,219,255,185,255,125,0,69,0,5,0,124,0,50,0,159,0,96,255,129,255,250,255,209,255,152,255,234,255,166,255,133,255,112,255,14,1,80,1,92,1,178,1,159,1,23,2,75,1,104,1,45,1,65,2,187,1,146,2,69,1,132,1,79,1,198,1,212,1,148,1,59,0,37,0,13,0,59,1,8,1,44,1,142,0,73,0,229,0,106,1,46,1,21,1,39,255,59,255,67,255,208,255,146,2,56,0,79,2,43,3,138,1,200,0,226,0,25,1,34,1,30,1,119,1,143,255,141,0,231,255,95,2,25,2,62,2,145,1,188,1,97,2,150,1,13,2,227,1,16,0,43,1,27,1,194,255,226,0,70,0,245,255,80,0,223,1,142,1,178,1,166,1,69,1,191,0,126,255,229,0,247,0,115,1,173,0,72,1,230,0,193,235,106,235,7,235,220,235,222,235,192,236,213,234,46,235,9,235,110,236,113,236,78,236,70,236,213,236,89,236,79,236,22,237,144,235,40,241,20,239,185,240,109,235,121,238,148,237,236,237,143,238,44,237,125,235,20,236,72,235,27,241,97,240,34,238,254,245,67,240,96,251,35,236,78,237,138,236,232,255,58,255,241,255,232,241,37,250,234,244,175,255,155,255,101,255,87,236,27,236,243,235,4,236,12,236,246,235,187,236,80,236,162,237,32,241,170,238,73,237,17,0,40,2,92,0,100,0,56,1,224,1,236,1,54,1,95,1,149,244,122,253,25,247,213,255,168,255,132,255,8,0,205,255,234,255,33,0,48,255,184,255,127,0,211,255,69,0,61,255,59,255,95,255,68,0,24,0,104,0,88,236,183,237,164,236,197,236,143,237,181,255,209,255,194,255,108,250,64,242,43,243,208,238,125,241,67,245,172,254,80,241,215,247,56,239,124,246,161,248,204,244,227,245,143,246,106,246,151,240,11,247,89,240,200,242,179,242,7,243,204,242,248,242,127,242,23,244,19,243,87,244,252,238,146,239,132,239,82,242,168,239,123,241,168,239,196,239,215,241,232,244,2,241,46,242,193,246,44,244,174,244,63,245,9,245,176,249,41,243,24,243,173,242,45,255,58,255,34,0,150,246,30,255,6,247,229,255,96,255,149,250,224,245,200,242,164,242,99,242,65,242,144,242,125,241,251,241,237,241,163,243,218,242,131,242,113,254,195,255,205,247,156,255,172,255,174,255,60,255,121,255,87,0,226,242,183,245,216,251,159,252,42,247,108,246,104,255,98,250,153,255,49,255,12,255,237,254,95,0,59,0,169,0,247,254,51,254,223,254,135,255,239,254,64,255,151,243,66,241,75,242,202,242,158,241,143,254,46,250,192,254,197,253,16,243,11,240,100,240,246,239,174,243,76,244,125,241,158,241,24,240,115,0,34,1,18,0,166,1,33,1,131,0,144,0,122,1,227,0,93,1,198,0,212,1,145,2,5,2,98,0,137,1,113,1,16,2,244,254,8,1,253,255,76,3,55,251,188,255,205,255,91,254,173,255,74,255,54,1,64,255,155,0,226,254,157,0,14,1,188,0,57,0,138,255,142,0,222,255,212,255,160,255,47,255,62,254,140,255,233,254,105,1,30,0,135,255,125,254,122,2,65,2,136,1,7,2,219,2,240,1,228,1,120,1,105,1,26,1,211,0,212,1,201,1,40,1,143,2,123,1,82,0,40,0,164,255,190,255,92,0,194,1,41,0,4,1,111,1,185,255,178,255,27,2,157,254,230,1,177,2,174,2,111,0,19,0,178,254,91,1,27,1,249,0,65,1,244,0,200,1,168,0,6,1,127,0,90,0,111,0,172,0,50,0,70,0,4,0,191,0,114,0,208,0,95,1,46,1,70,0,123,0,108,0,79,3,247,255,56,0,23,0,82,1,45,1,142,0,56,237,179,237,229,237,37,237,150,237,213,236,55,239,75,238,224,238,17,237,232,236,140,236,121,237,203,236,196,237,139,236,182,236,33,237,160,255,152,245,199,255,208,239,157,240,60,241,109,251,184,240,204,239,138,237,225,237,138,238,7,250,117,244,195,244,207,249,18,245,215,244,248,250,188,249,67,0,24,0,222,255,18,0,225,247,39,253,51,246,234,255,187,255,160,255,40,238,62,238,79,237,91,247,125,238,166,237,167,240,42,239,62,244,196,250,111,250,188,246,221,255,80,252,189,255,241,255,220,255,137,238,33,242,159,240,234,238,157,250,253,255,205,255,230,255,58,252,223,244,69,246,62,244,138,249,89,237,71,235,132,236,125,234,127,235,90,235,56,235,113,236,240,235,74,236,225,235,126,235,187,234,144,234,11,236,223,232,226,233,205,235,158,234,137,235,218,234,191,235,246,235,249,234,159,235,175,235,237,236,35,234,150,235,224,235,129,237,103,240,93,238,77,241,179,240,84,240,235,247,8,242,80,243,202,240,233,244,124,241,111,243,125,244,103,242,47,242,66,242,27,241,9,236,137,239,146,236,101,244,11,241,194,239,39,238,70,238,254,240,89,243,16,244,93,244,222,236,168,246,218,236,155,240,24,243,220,242,212,238,21,241,36,243,119,237,30,236,134,236,95,240,102,239,190,236,145,239,43,237,15,237,66,242,208,243,228,242,66,242,253,243,188,240,126,239,25,239,41,240,51,241,91,241,46,242,91,238,5,239,140,238,231,236,36,238,193,240,115,238,22,243,156,242,0,241,79,237,186,235,73,237,241,237,137,238,99,237,74,235,146,237,177,235,143,235,197,235,137,235,214,236,166,235,50,236,44,236,32,236,125,233,3,234,68,233,147,234,120,233,34,233,220,234,210,235,189,235,92,233,231,231,128,233,97,235,51,234,79,235,211,232,156,232,158,233,60,234,220,234,166,236,233,246,209,249,119,248,45,237,113,255,60,233,191,249,168,253,7,252,122,237,177,235,40,234,200,233,165,235,44,234,91,234,59,235,125,231,143,234,190,234,0,233,153,231,130,236,167,226,135,233,154,234,227,233,31,232,130,235,107,231,130,237,38,235,238,237,124,232,55,236,208,233,163,234,40,234,39,236,121,232,41,233,54,232,142,232,225,233,187,232,14,233,82,233,44,232,154,235,192,237,93,237,60,237,52,234,50,233,63,234,170,233,75,234,40,234,152,232,255,232,43,233,98,234,44,233,26,233,231,232,141,235,218,232,211,233,151,233,109,234,59,232,2,233,35,233,169,234,25,233,1,233,203,232,248,232,95,237,228,238,167,239,80,237,155,236,43,243,130,241,12,237,219,244,167,239,220,240,84,239,55,236,60,236,69,236,26,236,9,236,97,236,168,236,89,238,183,237,242,236,4,235,84,236,34,237,117,237,222,237,75,236,48,234,91,235,248,235,188,235,144,235,160,238,50,239,147,240,247,238,64,240,86,238,24,239,152,237,71,237,195,238,174,238,205,1,120,242,193,241,14,242,184,236,176,235,227,235,128,234,189,234,83,234,111,236,29,238,21,234,33,234,70,237,206,233,195,233,238,234,252,232,87,238,11,235,156,233,160,239,138,237,68,238,235,236,15,238,75,236,199,234,57,235,164,236,87,239,157,235,246,235,126,236,212,234,146,234,200,237,131,235,198,236,44,4,94,5,5,3,209,4,30,5,113,3,244,2,0,3,10,4,0,0,6,1,246,0,146,1,62,0,165,252,106,254,183,254,121,4,234,1,191,5,155,7,249,3,43,6,195,2,97,1,16,7,109,2,129,5,100,4,224,6,122,235,252,236,64,248,125,238,52,235,125,236,97,244,115,243,230,239,115,238,117,238,11,244,22,236,27,236,250,241,93,236,94,238,75,242,225,0,8,1,183,0,89,255,4,0,40,1,112,248,229,254,242,243,171,237,105,236,136,238,132,248,184,244,218,241,243,250,163,246,177,254,186,241,248,242,19,242,66,2,216,255,100,2,228,248,1,248,243,250,29,1,173,255,140,255,67,240,30,239,104,239,82,242,213,238,193,238,222,241,175,239,27,243,60,255,78,246,50,243,160,253,140,238,37,247,13,249,248,248,138,238,254,240,111,238,33,252,180,239,123,3,73,0,48,1,196,255,88,241,34,240,216,238,172,240,38,242,113,242,227,243,31,243,141,244,168,242,246,240,186,245,106,241,137,243,19,242,16,242,250,247,225,242,60,245,124,240,81,242,242,243,178,241,114,240,136,239,200,240,163,242,65,241,219,243,167,242,203,244,66,244,0,245,166,245,28,245,33,251,206,248,192,250,203,249,47,248,227,250,254,250,163,248,53,242,13,243,193,240,8,245,143,245,46,243,0,247,138,245,108,250,242,242,251,245,47,245,243,245,229,245,175,244,117,247,85,246,146,246,44,248,79,247,54,244,169,237,211,236,97,237,156,237,225,240,234,239,167,238,161,241,100,241,167,238,146,239,4,240,240,239,104,237,194,239,210,237,254,238,253,240,20,241,224,239,34,239,82,239,60,240,105,238,228,243,210,239,64,240,74,237,167,239,110,238,15,245,180,244,252,244,71,248,105,247,211,241,201,239,182,243,105,242,64,244,164,239,227,242,108,242,120,240,251,243,252,243,133,243,188,243,48,237,19,237,83,236,76,237,112,237,182,236,216,237,44,238,84,236,152,235,98,235,42,236,24,234,189,234,108,234,51,236,63,235,176,235,165,232,197,233,35,234,219,232,53,234,194,231,254,234,83,233,147,234,54,235,225,233,164,234,193,241,80,244,25,244,106,238,143,240,70,239,24,242,42,243,167,239,72,235,30,236,182,235,161,236,116,236,0,236,103,237,57,237,121,237,178,236,146,236,245,235,72,238,72,237,132,238,228,235,120,236,105,236,142,237,7,237,237,237,202,243,49,248,202,243,110,240,20,243,26,241,96,243,201,243,46,244,253,234,54,237,221,236,167,243,255,237,146,239,207,237,53,238,146,239,212,234,193,234,204,234,73,247,16,235,77,238,103,236,213,237,234,238,55,239,141,249,108,241,72,235,32,237,109,235,246,234,3,235,38,235,13,236,220,235,66,235,144,235,122,235,184,233,23,234,212,235,175,235,120,236,111,235,237,236,6,235,235,234,111,235,51,235,33,235,171,238,39,239,216,233,152,236,28,238,182,238,250,234,181,242,32,243,141,239,32,237,1,236,180,241,250,233,97,236,105,235,66,237,37,244,126,249,35,242,241,242,114,247,195,234,200,235,166,236,195,236,136,235,175,237,3,238,102,241,158,241,108,247,58,246,37,240,114,247,175,242,134,241,84,240,140,241,198,241,70,240,215,242,12,241,115,238,14,241,182,247,28,239,131,244,28,240,183,239,210,239,107,236,100,235,172,237,233,236,177,236,227,236,248,239,84,238,161,237,194,237,39,239,92,236,145,239,237,237,95,241,60,235,189,235,86,235,238,234,114,236,164,242,148,234,140,235,73,237,254,236,184,235,159,235,113,235,35,236,10,237,92,237,35,237,126,237,47,233,203,233,30,238,188,235,91,236,7,237,209,237,131,238,237,236,147,237,196,236,154,238,195,237,179,238,94,238,194,237,194,238,104,237,62,235,121,236,14,236,162,236,154,233,23,234,101,234,217,234,187,232,8,234,76,234,40,234,248,234,87,235,48,233,197,233,158,232,186,233,70,233,132,234,29,233,40,233,19,234,166,235,99,234,46,237,33,237,155,235,251,235,165,235,245,235,95,235,42,236,86,245,192,235,177,235,196,235,219,235,138,235,65,248,84,234,42,235,251,234,194,234,198,234,156,234,143,235,231,234,35,235,64,235,32,235,228,233,39,234,180,234,174,234,24,235,126,234,34,234,168,234,122,243,81,234,68,237,227,236,172,238,104,236,47,235,61,234,192,238,1,237,187,236,152,235,179,237,152,235,45,234,191,234,16,232,240,233,213,234,204,233,47,234,102,235,3,234,65,232,55,236,223,231,83,231,196,232,25,233,155,235,200,234,92,236,218,243,184,242,235,242,187,243,109,243,226,241,166,238,142,244,52,243,171,242,10,239,97,243,186,240,29,243,104,244,18,244,134,238,0,234,134,238,142,239,29,238,151,238,122,237,123,241,13,240,30,239,183,237,23,237,218,242,183,243,220,243,59,239,232,241,150,235,199,238,246,239,194,238,32,238,141,238,182,240,36,245,233,244,7,243,121,244,42,247,146,241,213,240,176,241,100,242,177,242,22,243,244,242,147,234,163,236,96,237,161,233,226,234,51,242,198,237,243,238,225,240,2,237,198,235,241,233,32,235,134,237,222,235,226,236,56,236,70,236,142,241,28,241,196,241,187,242,163,241,114,240,187,238,63,239,218,238,28,238,61,239,159,241,111,240,150,241,19,241,199,239,7,239,119,240,224,238,167,240,62,239,131,241,95,243,200,255,235,244,193,255,194,244,206,255,180,255,221,236,193,236,23,237,119,237,225,236,89,237,72,238,89,237,22,240,18,255,166,247,70,255,255,253,199,237,251,249,11,238,184,239,181,240,75,242,182,249,70,247,237,243,195,248,4,243,157,245,92,240,73,240,118,241,61,240,1,241,202,240,164,241,171,243,168,236,84,237,5,238,215,237,237,237,72,237,89,239,129,237,138,239,164,240,164,240,11,238,22,239,164,237,171,239,253,237,1,238,214,236,40,239,110,237,66,237,63,237,95,240,76,238,66,239,65,240,61,241,85,246,210,239,87,238,1,239,20,240,23,239,70,238,84,237,165,243,188,243,63,238,16,241,165,239,100,242,72,243,89,236,188,237,242,234,101,236,95,236,153,235,176,236,90,239,123,239,72,237,61,248,37,241,140,245,143,246,175,248,14,236,108,236,92,239,4,240,75,240,238,239,157,241,16,248,55,245,85,246,55,248,28,241,171,240,132,241,10,245,231,239,215,243,111,239,49,235,140,235,220,240,30,242,243,235,216,234,19,235,45,234,226,234,192,234,250,234,218,237,248,237,46,243,126,239,140,235,40,239,247,234,206,234,230,234,116,239,160,243,23,240,104,239,117,239,201,238,231,235,87,236,83,235,7,238,74,239,70,236,68,237,191,237,19,237,63,235,115,237,234,236,50,238,67,255,116,255,84,255,53,255,124,255,80,255,64,255,130,0,175,255,98,255,219,255,199,255,106,255,84,255,63,1,17,0,171,0,135,255,139,255,194,255,225,255,4,0,119,255,60,255,152,255,81,255,217,248,216,253,158,255,35,254,19,255,169,254,37,253,28,0,66,1,94,0,242,1,243,0,158,0,127,255,92,2,17,3,156,1,120,1,145,254,33,1,230,254,170,255,1,0,161,254,108,1,70,255,50,254,236,0,146,1,27,0,188,0,180,255,255,255,122,0,106,0,244,0,159,255,28,1,203,0,133,1,5,1,204,255,221,255,88,255,35,1,6,0,2,0,20,0,235,255,81,1,233,255,225,255,221,255,248,0,59,0,14,0,60,1,39,255,36,255,207,255,51,255,8,0,208,255,237,255,242,255,18,0,6,0,141,255,235,255,50,255,149,255,231,0,201,255,5,255,46,245,0,247,198,249,166,248,128,246,98,250,244,246,151,244,220,244,138,246,250,243,97,244,191,244,192,248,188,245,68,247,160,243,131,244,202,244,177,243,197,245,40,244,250,243,96,245,3,244,169,244,145,11,94,11,57,10,95,11,117,11,178,11,134,5,234,7,36,8,117,8,19,9,27,7,163,6,40,9,112,6,110,9,203,9,127,10,178,245,65,250,149,245,51,0,192,254,201,254,106,253,39,255,181,1,72,10,192,5,122,11,50,244,117,245,24,243,71,243,22,246,234,244,48,245,89,248,39,245,84,3,62,252,205,2,161,243,241,242,241,1,121,1,89,7,205,248,122,2,45,255,1,10,167,6,150,5,247,243,148,255,38,245,169,245,236,254,129,249,117,246,238,246,188,9,219,10,135,10,21,10,126,0,91,252,55,247,195,250,76,0,207,8,97,255,71,1,171,251,154,251,22,250,174,239,199,247,139,248,96,246,38,241,118,249,129,243,174,255,2,255,49,250,241,254,104,255,102,1,114,249,97,250,126,248,28,2,75,1,184,5,140,246,56,255,223,253,121,2,109,0,209,254,15,254,33,248,195,251,0,1,246,255,45,1,145,255,222,1,27,254,228,255,158,0,18,0,1,0,255,0,87,255,182,2,255,0,233,5,144,253,78,255,97,254,190,0,98,253,220,2,24,3,151,255,83,1,218,0,134,0,149,255,235,254,43,255,72,4,74,11,239,11,236,11,16,10,9,11,69,10,230,11,132,11,140,11,102,7,17,8,186,6,237,9,40,9,11,9,180,7,123,8,74,9,223,4,80,8,46,5,3,11,238,9,22,10,104,9,199,9,49,10,92,10,131,10,34,11,173,0,150,255,249,5,48,0,158,253,50,7,36,8,129,8,135,7,28,4,43,7,219,1,121,2,165,7,211,7,160,2,220,5,183,2,216,246,169,248,75,246,62,251,8,255,113,1,62,1,235,253,77,255,88,255,138,255,200,251,206,4,167,4,169,254,208,1,87,255,86,3,27,254,169,252,72,254,146,254,105,12,125,11,46,12,249,11,254,10,242,255,199,5,83,6,152,6,90,2,194,8,99,10,63,6,83,3,130,9,130,7,113,254,188,4,185,4,115,10,128,8,250,9,182,254,86,2,86,255,220,252,243,252,113,0,34,2,24,251,144,0,96,255,18,2,209,1,44,251,135,253,49,252,54,248,43,247,215,246,215,246,183,255,92,250,103,252,91,1,0,0,107,253,221,255,83,254,47,253,212,247,56,253,209,254,89,254,226,253,170,249,242,249,35,251,208,247,188,254,130,253,48,252,75,3,221,4,97,4,232,3,130,5,89,4,188,1,39,245,102,245,122,245,43,245,20,245,69,249,119,2,254,0,84,3,153,2,239,0,150,253,77,254,36,2,82,2,176,246,236,0,170,245,103,0,119,2,208,255,22,1,223,253,140,246,76,2,12,253,2,0,238,255,117,0,241,1,104,1,151,249,217,255,24,4,159,0,66,0,155,1,222,244,175,244,3,245,241,244,233,244,189,255,16,247,44,245,199,245,122,246,191,246,95,245,20,242,109,236,204,1,56,255,31,238,107,255,176,255,165,1,127,1,242,2,66,4,174,2,73,3,250,1,167,255,50,252,31,0,125,255,138,247,111,237,138,4,40,3,47,3,229,3,224,2,199,5,203,246,8,248,28,0,15,252,122,252,113,2,49,3,42,2,21,4,16,2,140,2,216,1,34,3,233,2,76,4,246,255,53,5,215,255,223,0,171,0,133,0,141,0,149,0,147,0,142,0,178,0,148,0,235,255,186,255,197,255,157,0,41,0,3,0,75,0,9,0,68,0,216,0,192,0,170,0,142,0,157,0,175,0,107,0,147,0,114,0,135,0,132,0,205,0,159,255,184,255,166,255,206,255,193,255,199,255,211,254,198,255,196,255,108,0,15,0,16,0,12,0,0,0,41,0,218,255,235,255,214,255,242,0,154,0,116,0,37,0,244,255,149,255,241,255,15,0,237,255,227,255,38,0,5,0,210,255,243,255,253,255,85,1,172,1,191,0,95,8,229,6,75,3,8,2,228,1,239,2,194,1,158,1,195,1,44,1,190,0,87,2,232,0,60,1,187,0,238,1,162,1,227,2,146,1,106,2,99,1,5,3,220,3,170,1,176,255,8,0,205,255,254,255,159,0,127,1,99,0,84,0,29,0,80,0,52,1,97,0,151,0,135,0,224,0,0,0,77,0,38,0,12,244,226,243,197,241,149,241,227,243,137,242,34,244,172,242,188,242,41,242,146,242,109,241,192,240,55,243,248,250,40,250,167,252,104,244,108,248,193,249,253,248,8,250,100,246,230,241,125,240,223,242,148,239,178,238,139,237,75,240,74,237,195,237,62,237,157,255,123,255,133,255,33,245,169,249,48,247,57,255,105,255,93,242,74,239,163,238,114,238,32,240,0,238,100,237,243,237,133,238,27,238,180,237,189,255,87,1,189,255,92,0,143,1,4,0,28,2,191,0,207,255,170,254,187,249,201,254,176,245,45,245,165,244,187,247,8,247,208,250,248,255,124,0,187,0,77,0,137,0,207,255,146,255,76,0,157,255,125,255,158,255,186,255,58,241,225,239,1,238,174,237,41,240,118,0,179,254,111,255,138,251,241,253,106,253,183,246,156,246,10,246,112,245,21,251,18,255,161,242,37,0,82,8,28,6,85,0,254,2,29,2,177,1,131,1,83,1,107,0,128,0,129,2,196,2,38,1,155,4,113,2,191,0,229,0,199,1,255,2,145,1,31,4,172,255,54,1,173,255,178,255,235,255,182,255,221,255,103,0,112,0,133,0,167,1,182,255,1,0,31,0,215,255,230,255,223,255,224,255,31,0,20,0,77,0,216,255,192,237,251,236,218,236,48,237,211,239,22,0,174,255,132,255,126,255,237,255,136,240,216,237,130,255,166,255,134,243,89,255,165,255,128,255,182,255,105,237,109,246,238,238,152,0,220,255,16,0,118,0,92,0,43,1,216,255,190,255,229,255,241,255,128,0,123,0,92,0,93,0,29,0,225,255,128,0,171,0,150,0,176,0,125,0,163,0,92,0,212,0,106,0,155,0,143,0,37,0,54,0,93,0,104,0,84,0,95,0,77,1,38,0,189,0,116,0,55,0,60,0,95,0,106,0,57,0,108,0,78,0,98,0,77,0,146,0,122,0,110,0,108,0,6,0,25,0,79,0,12,0,97,0,86,0,21,0,7,0,8,0,31,0,22,0,10,0,0,0,13,0,24,0,25,0,176,0,77,0,8,0,93,0,0,1,39,3,45,0,104,0,92,0,11,0,70,0,79,0,121,0,75,0,220,0,76,0,78,0,74,0,45,0,150,0,46,0,81,0,51,0,82,0,91,0,70,0,90,0,35,0,41,0,27,0,15,0,13,0,14,0,6,0,28,0,14,0,67,0,75,0,86,0,53,0,102,0,144,0,83,0,42,0,30,0,97,0,110,0,11,0,82,0,68,0,43,0,9,0,53,0,83,0,96,0,92,0,65,0,48,0,50,0,40,0,57,239,242,238,77,239,179,241,195,242,250,241,23,239,91,239,149,240,125,254,18,245,24,244,6,242,55,243,44,255,165,240,245,240,174,240,217,243,145,243,152,250,71,241,224,241,222,241,121,250,83,244,83,243,222,240,63,241,35,241,220,254,236,254,201,254,65,255,48,255,211,254,191,254,17,255,38,255,148,255,123,255,128,255,239,254,237,254,209,254,225,254,0,255,226,254,139,255,246,254,136,255,137,255,154,255,95,255,66,255,215,254,209,254,219,254,51,255,32,255,154,0,213,255,254,255,168,255,214,255,11,0,238,255,208,255,192,255,153,254,168,254,241,255,234,254,175,255,132,254,137,255,99,255,210,255,150,254,192,2,251,255,162,255,28,255,213,255,172,254,227,254,142,254,211,255,208,254,156,255,78,254,122,254,164,254,168,255,37,255,64,255,16,255,174,254,33,255,226,254,55,255,57,0,145,253,205,253,36,254,66,255,121,255,67,255,220,0,253,0,168,0,132,0,199,0,196,0,91,0,254,0,7,1,156,0,141,0,117,0,129,0,153,0,175,0,186,0,149,0,129,0,122,0,126,0,143,0,172,0,33,0,57,0,168,0,228,0,160,0,159,0,116,0,192,0,211,0,161,0,216,0,199,0,135,0,159,0,8,1,216,0,200,0,122,0,210,0,71,0,170,0,107,0,89,0,127,0,197,0,134,0,104,0,209,0,159,0,193,0,150,0,130,0,151,0,168,0,141,0,91,0,159,0,141,0,13,255,1,255,35,255,71,1,223,0,89,0,65,255,72,255,88,255,138,0,109,0,157,0,153,255,17,0,49,0,126,0,71,0,66,0,245,255,18,0,71,0,200,255,231,255,5,0,70,0,15,0,206,255,242,0,194,0,200,0,189,0,149,0,130,0,184,0,197,0,54,0,7,0,45,0,129,0,199,0,169,0,139,0,129,0,237,0,49,0,52,0,50,0,80,0,232,255,235,255,226,255,252,255,18,0,170,254,164,255,183,255,196,255,171,255,206,255,236,255,39,0,24,0,19,0,253,255,2,0,24,0,10,0,236,255,28,0,249,255,227,254,192,255,173,254,160,254,212,254,87,0,211,255,173,255,27,0,200,255,192,255,160,255,193,255,96,1,196,254,11,255,112,1,204,255,173,255,98,255,118,255,234,254,55,2,31,0,170,0,215,0,110,0,69,0,52,0,61,0,108,0,161,0,66,0,98,0,85,0,148,0,134,0,89,0,103,0,32,0,132,0,11,1,151,0,141,0,126,254,143,0,197,254,123,255,152,255,7,0,88,0,8,0,0,0,175,255,95,0,120,255,239,255,137,0,19,0,178,255,255,255,96,255,123,244,231,244,73,245,58,246,214,246,213,252,161,248,56,246,120,244,235,244,252,243,119,244,80,249,49,248,210,249,246,250,95,248,37,250,196,246,27,245,175,245,115,247,129,255,176,255,20,255,190,253,173,251,164,255,158,251,34,255,36,254,40,253,229,250,238,253,3,251,54,250,16,254,232,255,160,251,79,251,198,248,93,249,105,248,66,251,163,252,143,255,22,254,207,250,172,4,150,7,222,254,141,7,153,2,195,5,232,253,182,248,37,249,126,0,5,255,76,255,52,254,223,254,40,255,222,255,255,255,15,252,81,254,227,252,223,1,107,255,5,2,224,253,46,255,150,251,28,251,86,246,4,246,110,245,131,246,224,3,153,0,107,5,101,255,242,247,131,250,194,248,172,250,196,254,101,255,22,249,27,252,192,248,219,0,58,0,198,0,135,0,91,0,90,0,44,0,206,255,43,0,140,0,242,255,78,0,123,255,174,255,21,0,38,0,212,255,7,0,20,0,40,0,78,0,67,0,116,254,58,1,161,1,50,1,11,1,106,0,1,1,205,2,27,2,62,1,47,0,50,2,29,1,177,2,229,2,225,1,238,0,196,0,44,1,2,1,88,0,123,0,245,255,4,1,168,0,220,0,87,255,144,255,28,3,49,254,143,254,201,254,251,0,74,0,100,0,34,1,98,0,41,1,142,0,114,255,157,254,198,1,44,2,228,4,156,1,164,255,66,2,184,3,239,2,243,2,208,0,216,5,139,0,1,0,182,0,121,0,95,0,77,2,7,1,117,1,119,1,128,0,36,0,7,0,198,255,44,0,63,0,224,255,171,255,221,255,67,239,37,240,74,239,59,239,225,245,130,2,117,1,70,240,209,248,128,244,94,248,87,252,147,240,39,251,91,240,97,240,1,253,84,241,152,240,124,240,178,245,80,243,95,6,243,4,48,1,160,2,102,0,218,8,121,8,181,241,212,242,105,242,248,254,241,254,240,254,115,245,89,250,6,255,189,3,200,0,253,6,129,4,204,255,142,1,42,255,115,0,46,0,161,1,126,254,198,254,252,254,154,254,23,254,80,254,171,255,177,255,90,255,111,1,235,255,157,2,208,254,138,255,127,242,67,246,38,244,6,255,46,247,20,248,132,247,131,247,53,255,154,255,148,255,200,255,117,3,66,255,111,255,236,255,155,241,105,243,4,249,130,243,88,244,176,254,125,255,41,253,217,247,211,255,127,255,145,247,252,246,47,246,138,255,106,254,106,255,55,255,113,249,204,254,220,254,183,244,213,251,228,249,76,252,132,251,147,248,4,252,237,245,102,243,153,244,64,244,237,243,126,250,248,245,20,248,5,255,134,254,202,254,155,254,63,255,18,243,191,247,176,245,249,245,37,244,140,247,93,252,137,255,25,255,212,255,64,0,13,244,176,244,236,244,59,252,233,246,115,249,129,6,221,254,17,1,35,255,224,254,52,250,210,248,35,250,219,248,162,250,193,249,107,251,73,244,218,244,92,246,204,244,139,249,249,245,180,251,230,251,164,254,93,251,0,251,109,243,58,247,198,250,108,248,124,246,160,244,218,247,147,244,103,243,231,248,33,242,226,242,156,245,104,243,164,243,73,243,30,246,140,255,184,255,146,255,141,255,85,0,157,255,123,0,55,1,118,0,165,0,97,0,62,0,50,0,6,0,173,1,112,1,121,1,228,0,21,1,63,1,23,1,35,1,176,0,45,0,76,0,127,0,65,1,168,255,77,255,92,254,49,0,202,255,66,1,140,0,39,0,59,0,211,255,205,255,61,0,72,0,48,0,0,0,76,1,106,1,75,0,131,0,84,0,71,0,18,0,148,255,37,0,26,0,43,2,24,1,172,1,168,0,158,0,60,1,34,1,234,0,185,0,173,1,220,1,231,1,235,0,129,1,101,1,8,1,136,1,235,0,202,1,198,1,154,1,110,1,187,1,147,1,89,1,170,1,170,1,189,0,161,0,37,1,36,1,170,0,169,0,187,0,148,0,11,1,80,1,12,1,236,0,197,0,132,1,18,1,42,1,65,1,63,1,182,0,253,0,220,0,190,242,51,243,82,248,224,245,26,243,213,244,164,248,100,241,58,244,64,244,80,243,7,243,27,242,17,249,79,246,239,248,26,249,32,254,204,250,98,250,235,243,180,245,245,244,123,248,240,246,213,250,92,242,139,241,112,241,84,242,165,241,215,242,15,241,66,241,53,241,63,255,151,254,43,254,133,242,36,246,182,245,173,244,141,246,184,242,15,241,29,241,50,241,50,241,31,241,9,241,155,241,65,241,157,241,219,241,162,241,112,241,67,255,90,255,243,255,197,0,127,255,0,0,128,255,92,255,251,255,208,255,204,253,106,254,56,0,96,255,1,1,85,0,234,255,51,255,10,255,115,0,79,255,202,254,154,254,13,255,77,254,233,254,104,241,116,242,180,241,172,241,22,243,107,255,110,254,23,255,26,254,230,244,36,252,145,245,27,246,78,253,187,253,211,245,126,248,252,243,178,239,218,239,119,239,43,241,190,240,138,240,153,236,86,240,96,237,90,255,251,244,219,245,58,255,83,252,225,255,220,241,222,242,213,241,131,4,175,4,11,3,96,245,161,255,63,255,112,4,49,0,128,255,92,241,85,242,201,240,177,2,116,3,216,1,217,4,181,3,207,2,52,6,104,4,186,2,117,6,118,7,222,0,242,3,156,5,239,3,187,4,22,7,25,8,47,255,65,2,220,0,5,4,223,5,125,5,144,5,220,2,225,4,110,6,244,4,231,2,217,255,229,255,35,245,157,2,18,2,68,3,204,255,211,0,76,4,13,11,233,1,28,2,233,1,73,3,11,3,112,0,252,1,140,0,79,0,80,1,235,0,99,1,208,1,157,0,169,2,138,1,15,4,31,1,245,1,68,2,171,6,68,3,248,4,158,4,103,10,214,4,213,2,51,4,48,3,55,2,99,3,96,8,155,3,129,2,36,4,145,4,83,3,111,4,34,255,61,254,180,255,45,0,67,255,149,0,27,254,218,0,184,255,150,0,76,254,31,254,137,0,223,255,58,0,146,0,198,255,158,0,49,1,28,0,143,0,91,0,33,244,16,252,199,246,182,244,37,245,42,1,15,1,233,255,36,0,73,0,47,0,239,255,170,255,183,0,162,245,175,249,183,255,54,255,241,254,217,253,188,254,92,248,196,0,34,1,10,1,98,1,177,2,53,1,175,1,230,0,64,1,197,1,159,1,227,0,141,1,146,0,149,0,187,0,39,1,157,0,158,0,146,1,86,2,241,0,90,0,80,254,244,0,176,255,169,255,52,1,18,2,246,0,188,0,186,255,224,255,191,255,147,0,224,0,46,2,87,254,25,2,183,254,120,0,175,1,43,2,216,1,174,1,235,1,53,1,174,1,146,1,84,1,166,1,147,1,126,1,43,1,140,1,95,2,1,1,6,2,225,0,225,1,107,1,58,1,225,1,59,1,61,2,64,1,170,1,45,1,213,1,221,0,224,0,121,0,22,3,1,1,129,1,7,3,72,2,230,1,81,1,179,1,167,1,35,1,125,1,111,1,170,1,47,1,118,1,243,1,63,1,154,1,27,1,90,1,89,1,236,0,43,1,106,1,52,0,15,0,205,1,36,0,55,0,53,0,43,0,4,2,203,2,235,3,114,2,80,3,232,3,238,4,212,0,231,0,151,1,86,1,8,1,78,1,33,1,34,1,36,2,132,3,104,3,191,2,170,1,40,1,182,1,192,1,221,1,217,1,48,3,167,1,188,1,220,1,83,2,93,1,253,1,129,3,83,2,4,2,18,2,242,1,92,253,196,254,215,250,94,255,63,255,80,255,101,254,97,255,38,255,110,3,39,4,200,3,200,1,146,2,7,3,52,2,205,1,160,255,92,4,98,3,40,2,112,255,190,255,117,255,134,3,11,3,173,1,117,255,153,255,108,255,26,0,10,0,6,0,179,0,220,0,180,0,78,0,71,0,74,0,59,3,37,2,240,0,107,7,80,3,194,3,154,1,236,0,85,1,158,4,14,8,59,4,198,0,23,2,169,0,171,3,225,4,188,5,158,0,185,1,247,0,94,2,40,1,128,1,251,1,99,2,34,2,233,0,148,1,27,1,147,2,203,1,190,2,211,0,54,1,58,1,33,1,24,1,175,1,129,5,46,3,211,2,156,0,141,0,65,0,105,0,134,0,203,0,169,1,170,0,16,1,30,4,48,4,203,3,106,7,119,5,91,4,132,0,244,3,245,3,144,4,229,1,116,3,9,3,242,0,185,1,238,3,237,1,103,5,80,244,163,250,45,239,23,239,101,251,21,243,0,241,68,244,49,242,77,241,241,241,184,242,42,242,161,240,217,245,226,249,234,251,172,240,78,244,163,251,69,240,43,240,154,239,25,239,141,239,86,239,216,0,14,1,136,0,230,0,204,0,215,255,211,255,206,255,217,255,237,255,106,255,219,255,197,254,126,2,3,1,209,0,102,2,123,255,201,255,68,2,18,254,102,255,1,0,78,0,59,255,149,255,245,255,249,255,0,0,230,255,247,255,26,0,246,255,247,255,250,255,196,249,96,255,208,252,188,255,167,255,165,245,211,255,196,255,222,255,217,255,213,255,211,255,225,255,237,255,244,255,212,251,196,255,202,255,240,255,231,255,87,0,2,245,227,243,17,244,55,243,186,243,174,255,29,245,61,248,87,249,104,247,142,247,9,242,244,240,243,241,105,243,129,243,176,242,173,242,69,1,170,0,124,1,25,1,102,0,130,3,246,2,128,0,90,0,26,0,227,0,139,0,125,1,147,1,238,0,87,1,50,1,83,1,227,0,175,0,206,0,204,0,23,0,241,255,46,0,9,0,62,0,246,255,242,255,254,255,2,0,6,1,245,255,245,255,181,1,43,3,206,0,206,0,155,1,110,1,14,2,240,255,22,0,68,0,20,0,14,0,73,0,126,0,71,0,73,1,48,1,93,0,90,2,86,0,176,1,90,1,242,255,240,255,129,0,12,0,57,0,9,0,76,0,78,0,53,0,250,255,62,3,17,0,150,2,56,1,97,0,245,255,108,0,35,0,159,0,151,1,101,0,62,1,200,0,120,0,205,0,230,0,130,0,246,0,12,235,228,236,2,236,102,240,98,237,16,243,47,244,84,246,201,240,21,236,198,231,33,238,73,235,242,235,108,233,181,241,151,235,154,238,227,235,252,242,102,239,128,240,29,242,128,237,210,234,232,236,177,235,45,238,228,235,217,238,205,233,37,234,58,234,45,232,163,234,230,233,178,233,241,231,248,233,195,235,222,233,11,234,65,233,222,234,76,231,164,234,207,232,142,234,142,233,81,233,35,233,230,232,13,234,143,233,102,232,189,232,40,233,71,233,30,233,66,233,235,236,118,235,51,234,67,233,240,237,210,234,242,232,47,233,147,235,121,235,160,237,220,233,109,233,84,236,238,233,237,231,15,237,170,235,125,233,3,233,80,233,80,234,125,234,104,234,61,235,252,233,232,232,36,237,230,233,124,235,20,233,180,233,13,234,71,233,76,234,161,232,64,232,230,231,180,232,91,233,74,237,37,234,25,235,193,234,254,233,204,235,22,235,13,235,230,244,169,238,104,238,52,234,143,240,150,236,204,238,236,238,85,238,183,255,249,255,164,255,87,239,236,255,135,253,115,255,98,255,110,255,155,236,247,236,134,236,13,238,64,237,207,237,19,238,78,237,136,237,132,234,40,237,69,238,110,241,100,242,31,243,179,241,197,241,98,241,127,255,20,245,216,255,188,252,56,249,129,255,194,248,196,246,190,248,156,241,138,242,214,241,186,255,194,255,177,255,180,255,170,255,191,255,100,255,128,255,101,247,162,242,46,243,251,246,221,234,67,234,203,233,130,235,88,235,35,235,6,234,189,234,242,234,109,236,24,236,135,236,46,236,122,236,225,236,105,236,56,236,61,236,127,234,83,235,164,227,49,234,10,235,143,234,30,236,130,236,150,235,184,235,100,235,22,235,170,255,167,255,155,255,198,255,209,240,108,240,204,236,152,228,153,245,173,0,152,236,114,237,215,237,47,237,229,237,146,241,46,235,136,228,117,251,197,253,157,253,187,254,200,253,70,253,226,253,22,254,122,255,242,230,236,254,22,247,224,255,137,255,37,249,109,253,27,1,74,255,245,0,222,6,208,255,63,1,139,3,94,1,196,252,6,3,14,3,218,255,156,2,150,0,208,233,22,232,43,234,74,231,168,232,232,233,5,233,58,232,218,231,168,238,74,246,59,237,188,234,29,241,115,246,172,232,162,239,38,235,50,234,219,233,124,234,69,232,180,233,205,233,94,233,176,233,60,234,172,232,193,233,211,232,76,241,34,241,36,241,250,241,87,241,225,241,240,240,3,241,252,240,145,241,237,240,102,242,228,240,185,240,146,255,153,243,239,240,8,252,166,248,102,255,57,231,213,240,179,240,196,240,43,248,25,244,220,241,56,241,185,241,239,240,149,235,1,233,212,234,159,232,66,229,228,236,212,236,187,236,126,243,7,237,6,237,100,231,66,237,19,232,183,232,199,236,1,242,216,239,77,232,9,234,91,234,0,232,7,232,96,233,20,235,95,234,66,235,53,234,41,236,106,235,4,234,247,233,211,232,121,233,199,233,9,234,221,233,223,233,2,234,219,233,30,241,252,249,6,241,33,241,40,241,9,235,98,255,227,249,228,247,243,251,204,240,186,240,128,250,199,237,43,241,86,241,69,252,184,242,83,243,158,247,253,251,22,241,77,232,32,234,179,236,41,239,61,231,124,233,45,234,201,234,17,234,99,234,211,234,231,230,149,237,60,237,234,233,27,238,195,235,202,233,122,235,9,233,220,233,219,232,117,227,94,236,187,236,33,237,251,235,85,237,234,235,247,235,123,228,120,235,222,235,212,234,144,233,214,232,241,233,58,236,233,236,241,235,185,240,167,240,126,240,218,240,2,245,8,245,210,245,81,244,189,244,52,245,254,248,128,242,34,241,34,241,41,248,220,247,145,243,227,241,30,245,26,245,5,248,101,249,241,255,241,255,215,255,221,255,232,255,247,255,223,255,25,254,74,255,187,255,39,255,31,255,137,253,211,255,190,255,205,255,154,255,170,247,207,255,180,255,35,251,122,255,60,255,210,255,170,255,207,255,254,240,139,241,245,240,8,241,143,246,193,240,130,249,22,241,9,241,94,254,157,244,78,249,210,246,0,241,37,255,119,252,163,251,251,251,75,255,17,255,24,247,159,247,224,252,124,252,176,253,205,247,5,245,214,245,106,245,18,245,218,245,140,251,199,249,95,251,250,251,121,248,106,242,25,246,78,243,51,243,143,244,24,248,223,249,250,248,206,254,76,252,62,254,64,255,70,255,188,0,181,0,151,255,208,255,120,255,52,1,169,255,145,3,113,2,163,255,215,1,57,4,85,3,5,0,50,254,146,255,127,255,43,242,196,241,124,255,125,242,18,251,46,242,45,244,229,2,212,0,50,0,92,1,205,0,148,1,25,1,59,2,34,2,61,241,139,255,202,252,4,242,191,0,119,255,226,1,56,2,12,1,162,255,75,0,0,0,38,0,38,0,22,0,25,0,61,0,176,2,183,0,160,0,34,1,0,1,43,0,67,0,173,2,217,0,234,3,43,0,134,1,60,0,107,1,1,3,14,1,18,0,189,0,13,0,240,2,235,255,174,0,149,255,155,255,123,4,30,4,180,2,119,2,250,255,204,1,246,255,74,2,198,1,130,2,176,1,169,2,230,255,100,238,64,255,31,239,69,235,196,255,200,0,1,0,37,1,36,1,125,1,59,5,78,255,206,255,216,255,244,254,9,0,62,0,245,255,60,0,22,0,42,1,152,255,82,255,9,0,94,1,84,0,69,0,198,0,65,6,127,0,255,255,230,255,203,0,33,0,220,0,185,2,66,1,202,1,240,0,119,3,133,1,34,3,215,0,111,0,161,0,43,2,83,1,85,2,117,255,175,245,156,255,116,255,144,255,137,255,186,255,214,255,243,255,235,255,233,255,3,0,210,255,193,255,213,255,226,255,223,255,209,255,210,255,186,255,237,255,224,255,233,255,191,255,219,255,192,255,56,2,31,0,144,0,145,1,78,0,31,0,6,0,247,255,236,255,67,0,247,255,42,2,46,1,6,0,15,0,21,0,182,0,219,0,241,255,251,255,252,255,236,255,232,255,218,1,182,2,238,255,131,0,152,0,131,1,42,0,214,255,203,255,227,255,221,255,215,255,216,255,219,255,243,255,234,255,231,255,114,248,154,255,55,255,145,255,254,255,163,1,211,0,213,255,108,0,75,1,186,255,167,255,180,1,199,2,87,2,90,0,208,1,29,0,193,0,171,255,208,255,180,0,213,254,205,255,198,255,207,255,22,0,160,255,134,255,207,255,196,255,217,255,156,255,196,255,202,255,207,255,6,0,161,0,204,255,206,255,225,255,217,255,210,255,210,255,206,1,99,2,85,2,5,3,72,0,213,255,205,255,206,255,28,0,52,1,208,255,212,255,225,255,4,0,197,255,108,1,210,255,5,0,16,0,240,255,1,1,91,0,149,0,90,0,165,0,129,1,145,1,36,1,130,1,118,1,103,1,36,1,244,0,235,0,217,0,210,0,235,0,238,0,29,1,215,0,11,1,230,0,39,1,194,0,73,1,75,1,26,2,109,1,197,2,94,3,5,1,105,2,57,2,157,2,227,1,181,2,244,1,128,2,87,2,114,2,148,1,54,1,228,0,210,0,246,1,14,2,209,1,18,2,4,2,247,2,46,3,80,3,217,3,142,2,162,2,43,2,16,3,201,2,224,2,0,1,166,1,250,0,73,2,228,1,28,2,62,2,233,1,211,1,177,2,75,2,148,2,218,2,164,2,32,3,56,2,121,2,81,2,73,2,161,2,170,2,253,1,18,2,5,2,118,1,130,1,189,2,195,1,233,1,230,1,229,1,252,0,85,1,255,0,11,1,6,2,108,1,164,1,87,1,229,239,86,240,19,241,64,242,189,240,118,240,136,241,144,241,205,241,252,240,155,242,16,242,60,242,150,241,185,241,141,241,190,245,142,254,172,242,205,243,213,244,202,244,124,251,197,241,145,242,200,241,169,244,220,244,156,244,91,246,109,245,247,248,110,245,238,244,185,245,81,9,119,0,131,1,10,248,218,0,198,255,139,255,68,2,79,253,96,241,104,243,149,242,67,245,203,243,144,243,251,244,45,243,101,246,165,245,113,246,208,245,89,2,174,1,75,6,243,7,12,3,198,4,44,3,255,255,34,8,112,2,248,4,223,2,110,4,101,6,117,4,185,3,104,4,82,4,118,3,156,3,111,5,231,5,151,2,113,6,54,4,55,6,186,242,145,245,70,244,121,243,216,244,221,6,168,0,108,3,87,255,45,255,35,255,215,244,193,253,13,0,200,255,13,0,226,255,198,252,198,5,79,4,107,2,37,7,120,4,168,3,252,0,171,2,183,1,140,7,156,10,242,7,21,7,146,7,164,7,139,8,251,7,185,6,174,255,59,8,182,7,70,3,110,1,144,1,42,5,59,4,38,7,134,8,172,7,87,7,90,5,74,5,110,6,53,5,173,5,35,10,48,6,218,5,8,8,45,8,170,5,179,8,27,8,224,8,223,9,19,10,61,8,47,13,174,13,111,10,255,10,22,12,108,12,87,10,66,6,85,8,73,8,68,6,209,8,213,7,210,253,125,1,106,255,26,5,106,4,65,6,134,7,173,6,55,5,106,6,163,5,27,9,63,8,41,4,177,6,184,7,242,4,95,5,180,5,49,3,251,8,254,4,67,5,87,8,180,7,255,6,222,6,93,7,241,5,213,6,234,6,158,9,184,5,216,5,155,8,15,5,193,6,191,8,112,5,1,5,223,5,43,7,71,6,1,7,101,7,102,8,253,6,108,5,54,3,232,2,227,2,116,2,73,2,248,3,59,4,184,8,222,10,218,7,167,4,194,3,235,2,230,2,29,3,141,2,157,4,105,3,90,4,232,2,221,4,184,2,181,255,39,3,172,0,211,255,96,0,41,7,156,5,83,1,196,1,134,2,207,4,20,3,70,6,111,8,244,3,121,255,110,7,56,4,209,1,9,3,152,3,70,1,176,3,242,2,98,3,25,4,114,4,15,3,234,2,4,4,88,4,182,3,76,4,47,3,137,6,139,8,26,5,141,5,56,7,232,5,99,4,34,3,193,3,241,5,234,3,64,3,134,5,29,5,253,5,223,6,242,5,51,4,122,5,143,2,17,3,229,5,200,4,16,4,125,4,115,6,110,3,8,6,24,235,80,235,62,235,15,235,217,234,224,234,196,237,175,234,32,234,24,236,153,234,155,234,138,234,156,234,106,234,1,234,105,236,112,234,162,238,45,238,249,231,134,234,89,234,15,234,80,235,158,240,28,236,31,236,52,237,76,234,134,235,227,234,2,238,53,237,133,236,20,234,185,233,118,233,82,233,40,233,235,232,86,234,198,232,28,234,241,236,97,236,56,235,203,236,88,236,28,238,122,233,61,234,56,234,44,234,213,233,37,235,196,233,72,233,209,233,200,233,170,234,182,233,212,234,242,233,29,236,142,235,188,236,75,234,168,234,165,234,116,233,123,233,235,232,54,234,164,233,138,234,78,232,196,233,248,233,179,234,54,234,27,233,122,234,49,233,91,233,240,233,175,233,208,233,255,232,104,232,57,235,32,233,36,234,182,232,98,234,28,235,15,233,234,232,175,232,47,233,206,234,235,234,209,234,51,234,232,235,174,235,232,234,255,234,116,235,96,235,227,234,245,234,212,234,1,235,233,234,31,235,15,235,103,235,92,236,180,237,200,238,73,235,253,235,177,236,207,235,177,235,200,234,249,234,67,234,99,233,103,234,227,233,91,235,154,234,144,234,137,234,166,234,155,234,64,234,237,233,113,234,253,233,127,235,123,234,21,235,134,234,139,234,177,234,199,235,134,234,177,234,208,235,46,237,90,235,56,235,203,234,2,235,42,235,182,235,151,234,19,238,172,236,167,235,31,237,157,236,55,237,148,237,167,238,197,234,117,239,68,241,75,238,140,236,170,237,238,236,238,237,248,238,172,237,230,232,190,233,74,233,76,234,2,234,109,233,63,234,217,234,231,234,151,236,82,235,159,235,93,234,68,234,225,234,6,234,144,234,181,232,79,234,196,233,25,232,57,234,240,238,81,235,67,237,14,237,46,235,179,234,145,234,92,234,190,239,77,239,154,236,236,237,244,237,35,238,61,238,22,236,155,236,67,236,100,236,230,235,43,237,33,237,50,236,109,236,191,235,114,238,67,237,188,237,86,234,223,237,249,235,171,236,200,236,108,237,93,234,121,234,29,234,121,234,161,234,231,234,209,235,199,235,42,235,123,235,239,234,169,234,151,234,113,234,192,235,88,234,106,236,23,236,55,238,227,235,146,235,30,236,40,235,229,235,120,235,73,235,182,233,249,234,103,235,168,234,181,234,203,235,253,233,192,235,47,234,162,235,31,236,220,235,93,236,33,236,167,236,11,236,111,236,42,236,210,235,246,234,170,235,98,236,41,237,10,236,237,234,54,236,174,235,204,236,148,236,255,234,177,235,72,235,90,235,225,235,253,235,165,235,111,235,62,235,124,235,240,234,165,235,117,235,112,235,125,235,15,234,18,235,251,234,68,235,187,235,128,234,237,240,7,234,137,233,217,232,136,233,90,234,15,234,56,233,30,233,65,233,206,233,191,233,165,234,10,240,53,233,195,234,200,236,249,233,224,233,246,236,74,234,244,233,112,233,4,234,53,234,84,235,196,233,34,234,119,233,86,234,93,235,15,234,153,233,142,233,26,234,68,234,66,233,183,233,139,233,174,233,244,233,162,233,120,234,239,233,231,236,21,235,60,234,153,233,56,233,135,233,157,233,223,231,242,234,154,235,20,235,200,236,215,234,207,234,123,235,230,234,114,234,25,234,53,235,233,233,151,233,112,233,100,233,89,232,73,232,148,234,114,233,186,235,95,234,248,234,204,233,173,232,104,233,8,233,97,233,142,233,41,233,84,233,113,239,27,238,201,238,94,239,57,238,214,238,217,237,83,238,53,238,38,240,186,239,225,240,241,239,154,239,167,238,208,238,63,239,25,239,164,238,82,238,121,239,70,238,161,238,61,238,248,238,244,238,168,240,141,238,76,238,148,238,163,239,170,239,195,239,136,239,252,238,87,239,52,240,19,239,94,240,192,237,70,238,196,237,144,238,83,238,106,238,132,238,208,237,223,238,144,240,37,239,97,239,134,238,236,238,243,238,4,239,234,238,7,239,143,238,147,238,187,239,57,237,125,236,234,236,65,236,222,236,91,237,237,236,113,236,65,237,146,238,47,239,101,238,248,238,96,238,116,238,98,239,202,238,167,238,8,237,73,237,203,237,184,237,144,237,55,237,253,237,197,237,53,238,252,236,239,237,106,237,214,238,123,238,116,237,116,238,147,238,250,237,57,238,248,237,0,238,94,238,126,239,34,238,199,238,241,238,200,238,60,238,71,238,200,238,126,1,232,255,131,0,126,255,69,2,56,1,31,0,205,1,68,0,29,240,158,240,139,240,177,240,91,240,228,239,202,241,147,242,178,240,163,240,251,241,132,241,77,251,166,242,10,255,63,240,47,241,217,240,99,239,107,241,43,242,224,237,246,238,148,238,30,239,188,238,43,243,126,238,22,239,51,238,64,239,174,239,65,238,156,239,253,239,25,240,2,240,9,241,231,238,33,239,186,241,255,238,229,241,144,239,148,239,169,239,127,239,157,239,183,239,155,239,52,238,193,240,240,241,145,240,176,240,102,241,229,240,140,240,2,241,177,240,170,241,90,241,147,241,244,240,21,241,203,240,208,240,5,240,78,241,111,239,15,239,213,239,81,240,43,240,217,237,85,240,231,239,3,240,101,239,87,240,48,240,80,240,138,239,93,240,138,239,95,240,251,239,139,240,39,241,9,240,5,240,173,240,97,240,74,240,162,240,211,239,123,239,206,239,153,239,181,234,47,235,77,233,119,235,80,235,169,234,165,234,228,234,7,235,198,236,146,232,58,236,100,234,12,234,210,234,46,235,71,235,176,234,44,235,177,234,23,236,44,235,148,234,26,234,141,234,101,234,201,234,78,236,143,234,235,234,120,236,233,236,114,236,110,237,161,236,32,237,102,236,149,236,112,236,200,237,236,236,152,236,186,236,104,237,87,236,40,237,139,236,21,237,20,237,23,237,241,236,100,236,203,236,127,236,153,237,137,237,235,236,188,237,105,237,152,236,217,236,189,236,159,240,215,236,34,237,189,236,106,238,81,237,88,236,186,235,187,235,96,236,151,235,253,235,44,235,68,237,67,236,251,235,189,235,171,235,166,235,102,236,41,236,143,236,170,235,89,235,208,235,245,236,83,235,134,236,83,237,62,235,56,237,121,235,137,234,65,236,36,235,94,235,119,235,97,234,145,235,78,234,8,235,89,235,164,235,152,235,232,235,251,234,133,240,111,240,168,239,147,239,98,239,10,239,168,240,6,239,179,239,223,238,162,240,26,240,24,238,129,237,15,239,95,239,231,238,251,237,249,238,221,239,231,238,186,239,14,238,146,237,223,237,254,237,180,238,155,235,91,235,206,236,32,236,218,236,181,236,194,236,105,241,87,238,158,238,122,238,143,237,21,238,71,237,227,237,199,237,66,237,202,236,94,237,80,236,68,237,62,237,33,237,255,236,80,237,115,237,78,237,153,236,219,236,191,236,129,238,178,236,179,236,91,236,3,236,200,236,84,236,104,236,141,236,100,239,126,239,129,238,126,240,117,238,190,236,171,236,23,237,102,238,87,240,37,238,194,238,26,238,238,237,95,237,213,237,94,237,153,238,64,240,13,239,97,239,148,241,73,240,88,237,226,236,147,238,46,237,4,238,41,238,198,238,117,240,33,240,187,240,184,240,23,239,8,240,254,238,115,239,146,239,253,239,91,235,194,235,194,235,150,234,220,234,164,235,92,234,229,238,128,237,73,235,231,237,4,238,153,238,0,235,193,234,56,234,208,237,133,236,94,237,223,236,144,238,31,238,120,237,74,232,239,237,178,237,60,246,98,244,253,244,108,244,123,242,240,242,252,241,34,240,116,240,36,240,249,239,81,239,9,241,165,242,221,239,103,240,163,239,66,241,7,240,97,241,17,240,39,240,194,240,133,241,200,240,187,241,111,237,196,238,21,238,232,237,70,238,202,239,135,239,169,239,112,239,16,239,0,240,224,238,135,239,130,239,106,239,176,239,251,238,222,238,240,234,46,235,65,235,243,234,237,234,23,236,235,233,93,234,203,233,90,236,165,234,38,234,224,235,111,235,242,234,32,235,209,236,230,235,6,236,199,234,72,233,108,233,162,237,227,239,61,238,68,237,67,238,183,236,85,237,155,236,138,238,137,238,222,237,237,236,59,237,97,243,223,237,87,238,6,237,158,236,84,238,151,235,219,237,75,237,94,237,152,237,74,237,86,237,187,234,36,235,35,234,214,233,42,235,72,234,108,234,242,235,19,236,204,236,32,237,20,239,229,237,116,236,209,237,243,235,94,237,90,235,14,233,160,235,93,236,89,236,87,236,235,234,158,236,57,234,214,235,43,237,46,237,138,237,160,236,27,237,103,237,203,236,149,238,16,237,218,236,227,236,31,236,8,237,169,237,59,237,159,236,135,237,21,0,47,0,254,255,156,255,95,1,206,6,112,2,79,253,240,0,103,255,205,3,21,0,26,242,171,240,76,246,232,242,123,241,176,241,195,246,182,6,253,250,206,255,114,245,79,245,2,241,36,245,231,238,5,0,214,4,28,237,191,237,200,237,125,240,50,238,49,239,162,237,81,238,186,238,217,3,69,3,13,0,111,0,107,252,118,2,168,248,34,241,6,243,135,1,23,239,179,237,226,238,185,239,184,237,1,239,223,237,3,240,244,238,91,238,65,239,169,239,23,239,65,239,26,238,251,253,35,239,111,238,105,240,89,238,59,239,164,239,93,240,5,238,155,238,171,238,81,0,98,240,170,0,23,0,9,253,187,237,59,239,75,238,83,238,134,239,104,240,81,241,159,240,126,239,62,240,102,239,162,239,53,240,83,235,189,234,59,234,107,235,211,234,254,236,83,236,174,235,141,235,61,236,224,235,185,234,63,236,93,236,204,234,248,234,73,234,68,234,202,235,80,235,110,235,171,234,197,237,235,237,116,238,101,239,97,239,30,237,62,238,159,237,137,238,36,237,82,237,204,237,70,238,92,237,143,238,223,237,45,237,161,238,138,237,17,238,171,237,82,238,50,244,85,242,14,243,65,243,116,238,158,236,98,240,96,238,160,236,31,237,65,240,103,241,98,237,144,237,152,237,74,237,21,237,129,236,148,236,174,239,14,238,134,238,241,236,178,236,21,237,215,235,100,236,148,236,157,235,18,236,162,235,253,235,227,235,114,235,102,235,21,237,99,236,170,235,180,235,216,235,59,0,138,0,146,0,127,0,102,0,44,1,79,1,71,1,77,1,159,1,24,1,230,0,169,0,122,0,111,0,131,0,31,1,210,0,27,1,226,0,10,1,148,0,121,2,41,2,28,2,89,2,139,1,62,2,21,2,197,1,67,1,70,1,169,1,126,1,185,1,100,1,134,1,118,1,236,0,217,0,193,1,30,1,96,1,74,1,127,1,20,1,117,1,135,1,173,1,43,1,129,1,8,1,61,0,155,0,212,0,114,0,182,0,168,1,37,1,116,1,243,0,62,1,64,1,72,1,5,2,216,0,225,0,180,0,41,0,66,255,49,0,164,1,190,1,169,1,118,1,145,1,87,1,155,1,120,1,4,0,179,0,38,0,1,2,133,1,153,0,89,1,48,1,47,1,132,1,192,1,50,1,166,1,152,4,64,4,184,4,34,5,118,5,115,5,45,8,42,3,203,3,131,3,127,4,173,4,177,4,49,5,149,3,6,5,131,7,153,9,127,8,223,6,215,5,96,7,180,6,13,5,97,8,184,5,92,0,20,0,55,0,150,0,34,0,84,0,105,0,48,0,105,0,173,1,217,0,12,1,57,1,255,0,97,1,93,2,232,0,212,0,208,1,180,1,187,2,136,0,246,0,154,0,77,1,121,1,243,0,235,0,205,0,128,0,78,4,23,3,246,5,6,5,101,3,109,4,182,3,2,9,209,8,67,5,93,6,250,4,174,7,153,5,105,1,207,1,214,1,37,3,58,2,90,2,11,3,170,2,124,3,31,5,85,4,185,3,157,2,211,1,35,2,216,3,162,4,205,1,79,3,139,2,193,1,31,2,227,9,187,4,254,6,219,6,141,4,88,3,196,3,226,3,218,234,189,234,248,234,219,234,83,235,224,234,129,235,113,244,225,240,163,242,117,242,227,255,159,238,82,236,232,252,224,252,108,254,211,239,125,245,180,241,218,255,188,251,152,243,153,235,232,238,98,236,3,0,211,0,224,1,71,2,156,0,28,1,123,1,214,0,255,0,15,1,22,2,100,1,108,3,49,1,113,1,133,1,225,255,48,251,78,0,18,0,36,0,3,0,88,0,52,2,225,0,178,0,69,0,51,0,130,0,178,0,147,0,101,0,221,0,156,0,12,1,234,255,22,0,235,255,143,0,84,0,62,0,92,0,66,0,127,0,147,1,116,1,27,1,247,1,55,2,178,0,211,4,89,1,87,1,14,1,0,1,232,0,223,255,94,0,249,255,252,255,1,0,236,1,1,1,96,3,57,2,5,1,242,255,18,0,241,255,23,0,147,0,153,0,123,0,37,0,142,2,90,2,155,2,66,2,20,2,83,1,96,1,113,1,84,1,101,1,161,1,43,2,70,1,50,1,100,1,37,1,50,1,127,1,79,1,220,1,145,1,190,1,97,0,157,0,112,0,51,0,56,0,214,0,191,0,187,0,150,0,142,0,183,0,139,0,20,1,34,1,114,0,65,1,239,0,73,1,140,1,94,0,120,0,104,0,71,1,119,0,33,1,25,1,153,0,52,1,218,0,215,0,57,0,130,0,241,0,131,1,97,1,223,0,157,0,33,1,254,0,230,0,25,1,200,0,7,1,185,0,206,0,214,0,253,0,20,1,248,0,238,0,193,0,246,0,175,0,204,0,90,1,249,0,11,1,37,1,12,1,150,0,212,0,185,0,100,239,165,238,17,240,114,240,232,239,230,238,90,239,118,240,149,240,41,240,47,240,150,240,56,240,217,239,173,240,85,240,13,240,103,240,146,239,111,239,36,239,175,238,242,239,190,239,155,239,187,239,174,241,83,241,138,241,47,241,132,241,37,241,82,241,207,241,157,241,77,240,245,239,86,240,102,240,141,240,122,240,193,240,96,240,218,240,117,240,173,240,168,240,57,241,237,240,222,240,3,241,222,240,254,240,66,241,34,241,74,241,167,239,216,239,204,239,58,240,84,240,26,240,165,239,186,239,142,240,119,240,115,240,213,239,174,239,79,239,159,240,8,241,157,240,158,240,109,240,67,240,189,240,195,240,125,240,195,239,233,240,146,239,206,240,244,240,25,241,162,240,72,240,107,240,68,240,196,238,136,240,197,240,228,239,45,240,98,239,139,239,236,239,83,240,238,239,215,239,107,249,151,247,45,246,172,245,78,248,132,246,72,244,144,245,216,244,118,241,42,242,189,241,156,242,124,242,76,242,184,242,111,242,251,243,17,243,137,243,108,242,143,243,46,243,36,243,148,243,205,243,19,245,108,245,151,245,101,245,154,242,236,241,52,242,95,243,82,242,201,242,90,240,30,242,177,240,130,243,66,243,199,243,213,241,97,242,231,241,214,241,187,242,168,241,136,241,120,241,6,241,94,240,228,240,92,240,201,242,171,241,233,240,69,241,168,241,42,239,205,241,254,241,240,241,119,243,161,242,198,242,39,242,134,242,214,242,152,242,99,242,139,242,147,242,32,245,240,243,18,243,253,242,85,243,107,243,39,243,132,243,192,242,57,243,105,242,56,243,97,243,226,242,104,243,22,243,22,243,229,241,186,242,209,241,170,241,57,242,95,243,127,242,177,242,28,243,93,242,55,244,74,242,204,242,214,243,223,242,36,242,129,242,135,242,111,0,132,2,44,255,234,249,174,6,60,0,36,0,171,242,227,243,195,0,44,254,152,246,153,255,42,0,100,7,249,255,241,255,11,0,5,0,216,2,151,244,115,250,237,245,255,251,11,254,253,254,1,240,218,240,192,240,9,241,63,241,185,241,206,241,18,242,107,241,193,241,186,243,116,243,73,243,144,244,248,241,173,243,133,240,130,241,128,242,92,242,51,243,162,241,255,252,3,243,102,242,205,241,185,239,192,241,58,242,126,0,90,244,135,1,121,243,48,242,25,242,4,0,77,4,252,3,219,236,139,0,135,241,184,7,59,4,40,2,150,240,103,242,132,241,8,244,217,243,27,243,143,242,57,244,107,244,168,245,96,244,12,244,156,242,103,243,12,243,92,243,206,243,93,240,48,238,9,242,126,242,233,242,184,252,110,245,85,245,31,243,129,243,92,245,250,244,149,245,249,241,99,241,3,242,178,241,14,241,44,243,182,242,12,241,170,241,220,241,112,241,40,241,37,241,156,239,214,240,62,241,231,240,252,240,200,240,99,241,48,241,42,241,82,242,221,242,158,244,186,242,0,244,107,241,141,242,254,242,103,242,217,242,15,243,157,244,64,243,107,245,123,243,74,243,27,243,165,243,209,243,81,244,113,244,195,245,107,240,100,240,68,240,246,240,119,240,54,241,84,243,244,240,199,240,230,242,223,241,104,240,96,240,65,241,113,241,64,241,12,241,44,239,231,243,45,240,66,240,109,240,113,244,31,243,185,243,39,244,245,242,113,237,243,242,151,240,212,241,147,242,41,239,72,242,187,241,17,242,213,244,106,241,36,236,215,242,174,0,216,0,119,0,212,0,51,0,76,0,43,0,174,0,155,3,9,1,207,3,189,1,161,3,87,0,79,0,104,0,43,2,67,0,100,0,35,0,171,4,56,2,41,1,89,0,26,1,172,0,11,244,39,250,57,251,130,243,35,241,121,246,237,255,51,0,58,0,59,0,119,0,220,0,47,0,89,3,185,0,174,255,59,0,217,0,20,0,7,0,249,0,98,0,187,0,14,255,225,0,140,1,233,0,211,0,246,0,212,0,228,0,177,0,172,0,214,0,152,0,110,0,102,0,69,0,117,0,136,0,113,0,149,0,117,0,181,0,90,0,104,0,74,0,149,0,156,0,152,0,95,0,135,0,99,0,200,0,127,0,193,0,17,2,70,1,30,1,164,1,221,3,64,0,51,6,31,2,180,1,146,2,113,0,66,4,154,0,131,0,111,0,117,4,132,0,218,1,185,234,184,234,111,234,164,234,10,235,108,235,43,235,2,0,111,235,196,238,213,234,197,234,111,236,193,234,139,234,140,234,94,233,166,233,183,234,55,234,116,234,169,235,200,234,100,234,85,234,81,234,30,247,106,250,207,251,144,247,27,249,12,244,201,251,106,255,58,1,25,245,14,239,26,244,133,247,245,240,75,251,65,239,234,241,210,247,202,255,90,252,255,244,179,242,255,254,53,1,237,241,25,251,227,247,30,250,208,244,238,250,249,239,19,242,221,241,103,238,186,236,148,238,107,238,198,234,221,234,107,248,143,226,131,236,120,225,54,246,144,239,128,240,153,240,130,238,3,240,143,238,36,251,226,235,199,254,248,255,71,251,24,236,130,249,127,255,125,252,0,0,132,244,246,246,99,0,35,243,8,255,122,3,86,235,205,234,243,234,162,235,45,244,250,255,132,246,120,255,218,246,225,246,77,247,75,245,67,246,226,245,131,251,8,246,111,245,187,243,27,243,215,246,195,243,134,242,131,244,247,242,149,244,5,245,49,246,89,250,208,249,165,249,61,250,1,250,146,243,169,246,84,243,9,245,112,243,142,244,241,0,20,1,219,0,195,11,13,7,206,1,104,1,211,1,255,10,190,250,1,253,35,0,174,241,28,244,23,242,43,4,40,0,16,6,81,245,204,240,89,244,118,3,31,1,70,2,60,246,94,244,155,242,71,0,203,255,136,0,241,249,166,250,57,248,209,244,80,253,42,253,101,242,59,243,99,244,233,248,112,0,188,250,91,5,44,2,164,255,212,255,102,0,236,247,137,2,172,255,71,1,70,243,0,0,164,244,62,0,242,255,214,1,12,244,204,250,92,242,9,246,76,247,241,243,204,246,168,242,97,242,164,242,233,242,52,244,225,243,246,248,179,243,245,243,162,244,12,252,52,244,17,249,70,240,234,240,60,236,219,236,47,238,20,237,4,241,72,239,138,252,181,243,190,255,88,237,179,236,96,0,87,0,105,248,117,1,203,2,216,1,22,0,153,238,235,246,100,248,117,246,30,241,61,241,95,245,1,240,92,0,102,245,77,246,100,246,112,1,77,243,209,241,123,241,169,242,248,239,220,239,0,243,64,240,29,241,59,241,237,241,126,240,60,1,182,0,228,0,139,1,157,8,95,0,116,0,210,11,194,0,104,1,136,0,151,0,11,8,206,0,22,4,86,9,105,0,254,2,171,1,44,1,238,10,167,10,184,246,78,254,125,252,0,0,237,255,84,0,147,4,23,0,11,0,71,0,170,0,186,0,29,1,237,6,29,0,185,0,34,0,79,0,191,3,16,9,212,8,221,9,30,6,205,7,53,11,174,4,86,7,74,4,12,9,52,10,93,3,104,2,148,5,31,5,14,6,189,2,39,5,49,6,29,5,7,5,55,247,234,2,246,12,235,4,249,6,41,1,113,3,156,247,9,249,62,244,139,4,5,0,47,1,248,255,4,0,108,5,71,9,185,9,14,7,84,7,128,8,62,8,98,7,52,9,175,7,6,8,9,0,45,0,73,0,42,0,219,255,0,0,221,255,142,2,220,1,24,0,187,0,79,0,166,0,116,0,101,241,125,244,3,245,43,253,77,249,229,249,235,255,26,251,180,255,12,0,242,255,225,255,24,8,42,7,32,7,146,5,155,5,112,255,69,0,7,0,196,0,140,1,75,1,231,1,44,2,186,0,206,0,247,8,216,0,187,3,116,249,172,247,95,248,204,247,217,244,131,244,49,244,5,242,108,243,113,242,75,246,214,244,18,242,198,241,236,242,161,241,91,242,187,241,151,241,145,243,20,242,110,243,13,255,233,255,96,0,3,0,4,0,236,255,245,255,156,6,149,6,42,0,55,0,26,0,158,255,200,1,164,3,16,2,189,255,18,245,110,0,247,0,34,236,217,255,192,255,95,2,165,1,90,0,5,243,15,240,250,239,49,242,235,241,112,242,29,240,29,242,86,241,122,240,254,240,191,240,80,240,103,240,218,7,80,0,171,4,197,234,222,255,203,255,71,242,102,237,174,240,187,239,120,240,19,240,74,243,26,244,125,243,189,242,142,242,198,255,179,241,227,232,31,249,78,240,155,241,138,242,249,241,133,241,136,241,127,241,73,241,19,242,149,234,178,239,6,236,161,236,117,236,221,252,180,252,42,236,221,251,236,251,35,247,112,238,243,236,176,248,73,236,84,236,191,237,225,237,98,237,26,238,254,236,95,238,64,0,255,255,203,253,174,255,152,247,16,0,89,0,79,247,134,245,210,242,215,255,104,255,221,255,229,243,57,243,125,243,1,0,87,255,40,0,42,0,31,0,19,0,254,255,81,255,221,255,239,255,158,249,171,253,16,232,221,239,221,244,252,236,0,0,243,255,201,251,162,0,14,0,0,0,55,0,9,251,252,255,249,255,129,247,84,242,238,241,98,238,242,253,3,0,15,0,2,245,225,241,162,247,243,252,11,0,230,255,181,252,254,255,211,255,35,252,58,255,229,255,9,0,67,255,130,249,0,0,251,255,28,254,5,0,81,253,157,254,227,0,7,1,74,6,55,9,189,2,125,0,228,7,236,255,99,0,6,0,44,2,116,0,239,242,130,241,218,255,93,247,94,249,151,245,26,252,34,0,200,255,6,0,210,255,18,235,105,248,193,255,44,250,43,248,196,242,34,238,44,238,3,0,72,238,98,241,254,255,224,1,160,253,12,241,239,255,8,254,39,243,5,244,4,238,199,236,0,0,218,252,239,255,111,255,23,249,90,241,100,241,103,241,140,241,124,241,54,243,254,248,17,244,109,242,109,245,26,243,180,255,242,247,15,242,190,247,21,243,46,245,252,0,69,0,1,1,109,0,235,255,218,254,220,255,204,255,240,255,24,0,162,241,253,255,182,248,106,241,137,254,18,0,235,255,254,255,176,0,137,0,98,0,140,0,40,1,125,0,159,0,99,0,96,0,138,0,116,0,126,0,112,0,73,0,218,0,122,0,221,0,180,0,229,0,51,1,123,0,210,0,141,0,112,0,140,0,111,0,148,0,94,0,98,0,76,0,73,0,87,0,58,0,230,0,130,0,11,1,71,0,139,0,124,0,151,0,139,0,122,0,98,0,86,0,42,0,92,0,87,0,102,0,62,0,60,0,69,0,49,0,153,1,93,1,111,1,158,2,146,2,0,2,87,2,62,2,99,3,233,0,5,1,193,1,201,0,177,0,147,0,142,2,10,1,122,2,123,1,105,1,45,1,168,2,20,2,246,1,134,0,84,1,23,1,226,3,116,2,92,3,110,0,99,0,93,0,121,0,113,0,208,0,113,0,72,0,116,0,78,0,113,0,107,0,140,0,107,0,102,0,104,0,96,0,106,0,194,0,193,0,245,0,185,0,213,0,170,0,182,0,111,0,125,0,127,0,193,0,158,0,193,0,132,0,147,0,145,0,164,0,97,0,128,0,148,0,182,0,167,0,139,0,193,0,151,0,163,0,137,0,229,255,237,255,233,255,230,255,246,255,227,255,227,255,227,255,145,0,170,0,253,0,6,0,25,0,27,0,183,0,77,0,34,0,242,255,18,0,29,0,242,255,245,255,239,255,21,0,8,0,0,0,240,255,248,255,237,255,211,0,210,1,226,0,171,0,239,0,218,0,147,0,104,0,133,0,135,0,127,0,83,0,85,0,209,0,15,1,161,1,232,0,119,0,186,0,174,0,243,0,245,0,248,0,167,0,132,0,87,0,0,1,88,0,54,0,228,0,197,0,192,0,119,0,106,0,89,0,58,0,107,0,46,1,175,0,176,0,95,0,81,0,126,0,215,0,118,7,200,7,207,6,204,12,201,9,147,2,251,10,217,7,142,15,194,15,31,14,141,14,19,4,107,7,123,1,72,3,133,14,160,3,177,2,62,2,185,1,241,10,4,10,180,9,16,1,134,2,70,4,114,12,216,11,20,12,126,1,210,3,87,2,184,1,181,1,55,1,26,12,235,2,82,14,153,0,1,2,137,0,117,3,212,0,65,1,218,0,142,1,96,1,146,16,34,14,10,17,235,7,121,11,19,16,222,3,143,5,51,8,217,3,253,11,139,6,168,0,166,0,204,0,84,0,32,0,66,0,171,0,120,0,59,0,212,0,163,0,189,0,164,0,211,0,180,0,107,0,181,0,144,0,104,0,128,0,152,0,70,0,78,0,53,0,185,0,94,1,145,0,98,0,112,0,147,0,238,7,226,1,154,13,95,5,6,2,201,0,183,0,190,0,238,0,4,1,214,0,209,6,11,1,187,0,244,0,219,2,179,1,231,2,4,1,91,1,233,1,195,0,145,0,244,1,54,2,243,0,139,1,27,1,111,2,53,2,187,0,124,1,143,0,162,0,108,0,100,0,190,0,79,1,187,0,176,0,99,0,29,0,149,0,115,0,67,0,102,0,87,0,150,0,78,0,67,0,53,0,29,0,52,1,132,1,207,0,229,0,216,0,48,1,178,0,143,0,177,0,87,0,88,1,220,2,154,1,195,1,121,1,37,1,67,1,216,1,114,1,35,2,175,1,40,2,156,0,152,0,59,1,17,1,195,1,248,0,69,1,94,2,102,1,21,2,211,0,171,0,254,0,63,1,224,0,65,0,240,0,177,0,106,0,81,0,9,1,206,0,50,1,67,1,7,1,91,0,151,0,169,0,89,2,144,2,83,1,50,2,124,1,35,3,204,2,40,1,214,0,78,1,119,0,152,0,138,0,247,0,196,0,168,0,209,3,80,1,71,4,147,1,98,0,121,1,8,0,14,1,129,0,55,2,101,2,200,1,191,1,102,1,35,2,2,1,200,1,186,1,20,2,129,254,163,254,22,252,8,2,90,1,44,0,0,0,73,0,127,0,194,2,111,2,185,1,169,1,171,2,13,2,15,2,35,2,90,2,217,1,91,2,91,2,224,0,6,5,187,249,114,252,31,252,164,250,173,242,172,244,21,245,156,254,8,251,58,1,218,0,204,0,152,255,23,254,86,253,165,254,214,1,10,250,23,255,119,254,143,254,239,244,1,253,64,245,254,0,198,0,127,1,199,0,83,0,153,255,72,0,224,255,155,255,253,255,33,1,61,0,139,4,142,1,182,1,96,0,94,0,23,0,85,1,7,1,7,1,147,1,79,1,74,1,43,1,18,1,128,1,28,1,92,1,66,1,100,1,32,1,30,1,113,1,31,1,187,0,142,2,121,2,191,2,134,1,160,1,46,2,78,2,177,1,84,1,220,0,251,0,35,1,147,248,45,246,153,247,79,244,91,244,254,245,31,250,160,246,255,254,172,0,218,0,209,0,183,255,205,0,185,255,167,245,226,244,224,243,129,1,31,0,43,0,5,0,248,0,73,0,195,0,7,1,148,0,78,246,27,0,118,254,131,1,111,1,208,1,103,1,72,1,2,2,246,0,254,0,209,0,247,1,191,1,138,2,174,1,200,1,95,1,128,2,65,2,105,1,90,0,85,0,35,0,154,0,57,0,84,0,168,0,113,0,185,0,253,0,198,0,178,0,226,0,181,0,28,1,214,0,203,0,83,0,188,0,132,0,57,0,78,0,127,3,247,1,199,2,54,2,92,1,190,0,2,1,55,1,131,0,140,0,176,0,136,0,130,0,100,0,183,0,50,3,247,0,215,0,131,1,175,3,223,0,215,0,245,255,69,0,238,255,189,0,166,0,208,0,239,0,106,0,146,0,247,0,29,1,16,1,174,255,2,0,87,2,81,4,122,255,45,1,167,0,229,0,241,0,226,4,126,0,50,2,143,1,185,255,68,2,66,5,88,0,92,0,178,0,96,0,2,1,85,0,71,0,100,3,118,0,80,0,41,4,143,3,86,253,10,4,116,4,89,5,103,4,178,3,170,1,170,255,20,249,8,250,119,255,22,248,235,255,30,250,197,247,26,0,211,251,197,254,26,0,119,2,14,0,249,254,115,0,218,0,146,0,25,2,50,0,126,0,120,0,237,3,74,5,11,1,255,2,19,6,18,1,152,5,108,1,190,0,0,0,155,1,2,0,51,0,130,0,218,1,100,0,133,4,11,3,108,0,232,0,36,1,247,0,127,0,106,0,178,255,69,0,22,0,235,255,28,0,216,248,197,251,100,0,78,252,217,245,181,247,218,248,53,0,102,252,139,0,125,246,55,0,103,252,212,242,216,244,174,255,109,255,150,252,146,255,207,253,237,255,161,255,28,247,170,255,3,244,186,245,125,245,8,245,213,0,112,254,205,249,149,254,226,255,125,255,145,1,240,255,70,255,133,245,121,244,151,247,244,245,128,242,111,250,227,245,232,3,54,2,74,252,3,0,164,246,62,251,247,243,110,0,126,251,245,255,238,0,143,242,106,249,182,243,143,244,232,2,19,243,0,254,93,1,11,247,247,242,139,240,158,241,7,240,129,242,229,241,110,243,226,244,94,238,83,238,118,237,216,236,29,238,114,239,33,237,44,238,33,237,188,240,50,242,198,243,118,240,17,241,221,239,120,241,246,240,199,237,111,238,234,235,16,236,105,236,60,236,23,236,194,237,44,236,223,236,223,236,217,236,182,236,221,239,199,239,51,240,140,238,79,239,105,239,90,239,77,239,252,238,140,247,57,240,230,240,128,240,60,241,110,238,200,242,157,241,147,238,13,239,49,240,94,243,240,238,56,238,132,238,188,244,173,238,156,243,147,238,207,238,191,238,82,3,93,2,23,4,64,2,23,2,215,1,179,3,190,3,55,3,20,236,131,236,140,236,183,236,129,236,210,235,53,254,2,250,179,255,201,255,96,242,164,242,24,1,27,254,0,2,186,237,216,239,6,238,38,1,54,245,11,1,167,244,212,241,194,241,142,241,0,239,25,240,209,236,213,237,172,245,153,239,249,235,182,235,188,238,243,235,1,236,30,242,231,237,250,242,52,2,97,0,86,1,132,2,55,7,100,3,44,0,121,4,180,4,189,1,93,5,159,4,37,2,52,5,219,0,133,2,165,4,38,2,40,255,40,253,154,249,62,0,193,255,105,0,241,250,199,250,193,0,76,4,99,3,143,3,141,0,1,0,246,255,105,0,243,255,58,0,178,255,233,255,209,255,93,0,58,0,113,0,203,2,247,0,246,5,141,0,115,0,141,0,210,1,187,1,107,2,180,255,0,0,156,0,166,251,94,255,177,254,52,0,41,1,244,255,29,241,19,241,160,240,244,241,102,241,24,242,117,240,13,241,9,241,173,245,29,243,192,244,103,242,174,242,104,244,222,243,102,243,234,242,94,0,101,253,43,0,216,244,213,242,1,242,249,243,50,246,154,242,39,242,19,242,178,241,27,2,138,246,240,255,27,1,164,255,114,0,101,245,123,0,183,1,189,0,54,249,122,246,255,243,19,244,145,243,222,242,23,243,45,243,162,1,174,1,192,1,131,1,119,1,124,1,212,1,143,1,80,2,126,7,86,3,242,3,163,2,113,3,66,255,223,1,54,2,153,1,40,0,183,253,8,2,73,2,37,253,134,0,39,250,154,248,179,255,242,1,174,0,245,2,52,2,81,251,69,4,188,255,169,251,132,250,96,2,100,254,112,0,134,3,164,3,190,3,87,7,201,6,241,9,0,7,100,4,230,5,42,8,97,0,46,8,104,2,254,255,158,1,34,255,0,0,179,255,149,3,52,1,224,255,162,1,168,1,11,1,118,2,74,2,190,2,17,1,146,1,145,1,3,5,41,4,179,3,252,2,111,3,126,4,158,3,172,3,134,3,87,2,181,2,239,2,169,1,29,2,121,1,225,3,229,2,211,2,191,2,140,2,103,2,22,0,229,255,213,255,0,0,61,252,205,3,38,6,191,4,48,6,189,0,97,1,241,254,191,255,188,7,131,6,240,255,30,7,187,255,42,240,52,246,45,240,221,239,155,239,158,0,209,255,160,241,47,254,124,245,204,244,171,241,163,242,62,245,124,241,227,245,164,246,80,244,46,244,18,241,253,239,132,240,178,0,216,0,172,0,100,0,84,0,101,2,186,1,253,0,45,1,151,1,87,1,43,1,84,0,97,0,99,0,122,0,238,0,116,0,196,0,208,0,184,0,132,0,98,0,34,253,158,0,227,247,139,250,188,244,103,248,132,246,167,246,99,250,13,255,73,250,89,4,230,3,221,255,60,3,31,5,194,5,173,252,1,247,122,248,125,247,192,0,135,1,239,0,103,1,222,251,106,3,112,3,150,3,235,2,104,2,204,244,77,245,237,245,245,249,55,255,43,3,252,255,47,251,126,0,96,0,140,0,148,0,217,0,56,0,16,0,95,0,73,0,19,0,102,0,104,0,135,0,123,0,205,0,111,0,131,0,87,0,115,0,121,0,174,0,121,0,102,3,234,3,54,4,8,5,42,6,165,3,115,4,112,7,181,5,92,9,39,254,213,253,219,247,242,4,240,7,200,5,58,247,104,255,108,3,178,248,94,247,112,247,8,250,132,4,170,2,11,2,29,0,103,0,227,255,227,255,0,0,0,0,0,0,97,0,4,0,156,0,12,0,74,0,254,255,230,255,236,5,170,5,248,8,208,3,178,8,120,1,200,5,125,3,178,0,227,255,254,255,235,255,202,0,150,247,89,251,247,255,250,255,173,252,44,2,43,7,193,248,117,247,30,0,37,0,11,0,11,0,144,0,65,0,117,0,14,0,88,1,119,2,113,1,195,1,97,1,70,0,148,252,189,253,77,252,208,252,233,255,200,1,229,0,155,0,179,0,170,0,155,253,107,1,232,2,153,2,212,1,45,1,35,1,16,2,55,2,72,2,127,1,27,3,253,2,160,2,168,2,201,1,73,4,13,3,218,3,208,1,159,2,79,2,228,3,222,3,124,3,206,3,23,4,229,3,98,3,86,2,76,3,239,2,157,247,221,255,108,253,11,250,61,249,7,248,94,2,136,2,0,0,39,3,241,4,55,3,27,1,27,0,4,3,2,3,54,3,99,3,254,2,156,2,44,4,119,2,92,3,199,255,123,255,203,2,132,4,223,3,191,3,178,0,8,0,187,2,233,3,102,3,219,3,251,4,1,0,108,252,70,252,57,253,148,5,116,4,80,5,161,1,237,5,216,4,136,4,69,4,170,3,41,3,215,3,16,6,183,6,193,2,100,9,94,10,44,9,11,2,93,3,245,1,61,4,220,1,239,1,222,4,169,2,5,3,239,255,51,1,233,255,180,0,101,0,75,0,50,0,109,3,11,7,28,5,207,3,137,4,34,3,0,0,227,255,227,255,164,0,249,0,75,0,100,0,6,4,247,6,236,3,39,1,212,2,76,0,236,255,17,0,212,2,196,255,206,255,220,255,46,2,202,9,67,7,21,7,109,7,141,6,163,2,132,6,23,7,251,5,173,3,134,5,3,10,33,5,143,5,53,6,197,6,11,4,35,6,31,6,54,6,92,4,238,5,222,3,12,8,235,2,67,5,184,3,213,2,197,2,41,1,27,6,85,3,134,1,177,4,141,3,188,3,193,4,73,252,241,1,198,251,241,255,251,1,38,2,249,2,209,0,222,1,208,0,208,2,248,2,107,5,197,5,225,1,53,3,111,1,13,4,150,1,245,1,86,1,238,1,63,0,232,255,247,255,227,0,54,1,81,9,157,11,7,0,21,1,77,3,187,3,9,0,115,1,34,1,60,1,81,1,22,0,115,0,8,0,4,0,1,0,191,0,227,255,227,255,0,0,0,0,0,0,135,7,123,8,56,7,236,10,17,5,66,4,14,2,207,10,241,4,0,0,0,0,10,7,157,0,58,8,81,0,234,255,0,0,40,1,33,0,63,0,76,0,144,0,91,6,119,8,131,7,106,7,69,5,87,7,31,1,76,3,78,7,11,5,220,0,166,4,234,0,84,2,52,2,89,2,234,1,250,0,172,1,51,1,221,1,43,2,129,1,157,1,131,1,48,2,242,1,50,1,250,0,24,1,11,1,42,1,152,0,86,1,21,1,161,1,166,1,135,1,91,1,185,255,63,0,246,0,219,0,26,1,124,0,221,0,75,1,245,0,107,1,24,1,247,0,63,1,253,0,249,0,240,0,253,1,226,1,157,0,202,1,130,1,222,1,90,1,14,1,68,1,153,1,31,1,33,1,88,1,55,1,107,1,131,1,18,1,42,1,16,1,52,1,59,1,95,1,0,1,93,1,252,0,132,1,97,1,80,1,77,1,27,1,82,1,27,1,37,1,48,1,61,1,19,1,34,1,33,1,53,1,28,1,169,1,96,1,120,1,114,1,176,1,67,1,43,1,54,1,68,1,137,1,3,1,72,1,32,1,43,1,32,1,103,1,61,1,247,0,207,237,35,238,222,237,10,239,80,237,152,237,4,238,67,248,157,240,66,239,119,243,51,243,249,242,40,237,33,239,119,238,171,237,57,237,216,237,167,237,138,240,112,239,57,241,4,239,43,241,23,239,220,255,250,255,206,255,0,0,247,255,43,0,52,240,190,250,249,239,57,250,108,255,2,0,157,243,25,248,23,243,36,0,57,0,2,0,223,237,65,238,105,239,48,238,241,237,26,237,33,240,51,239,37,241,72,250,250,242,169,240,47,247,33,251,168,241,89,244,230,255,117,249,241,251,69,237,190,237,142,240,6,239,228,240,157,238,139,239,251,255,174,249,106,248,183,255,234,255,8,0,13,244,44,247,100,243,135,241,124,242,73,245,191,242,80,241,204,240,103,252,220,242,137,244,75,243,242,243,43,243,138,242,151,238,249,241,129,240,191,240,80,242,175,242,239,243,5,243,237,236,69,236,107,236,69,237,76,236,47,237,10,236,84,236,215,235,118,0,187,0,83,0,221,0,159,0,184,0,85,242,74,0,188,255,101,244,147,247,53,0,209,238,62,241,175,238,25,0,145,253,59,0,25,251,175,255,75,247,30,1,67,1,2,1,13,1,70,1,91,1,50,1,52,1,39,1,105,1,99,1,51,1,58,1,103,1,244,1,16,1,37,1,44,1,206,0,154,0,98,0,37,1,166,0,240,0,55,1,191,0,239,0,39,1,19,1,59,1,188,255,245,255,251,255,123,0,61,0,1,0,184,1,82,0,165,1,181,0,233,0,148,0,83,3,163,1,50,2,63,0,254,0,100,1,79,2,134,1,107,1,190,1,139,1,4,2,185,1,159,1,98,2,29,1,252,2,244,1,109,0,1,1,66,1,43,1,240,0,79,1,171,1,95,1,97,1,38,1,175,0,153,0,240,0,247,0,110,1,86,1,89,1,248,0,245,255,216,0,223,0,230,0,87,1,37,0,16,0,242,0,113,0,98,0,76,0,128,0,130,1,137,1,62,1,132,1,79,1,168,1,181,1,191,0,189,0,7,1,6,0,255,0,59,1,58,0,22,0,115,1,64,1,117,0,133,0,71,0,246,1,195,1,47,0,14,0,46,0,51,0,44,0,37,0,92,0,63,0,78,0,56,0,39,1,25,1,8,1,17,1,5,1,105,1,73,1,15,1,65,1,169,0,70,1,55,1,30,1,164,1,15,1,22,1,7,1,33,1,28,1,20,1,28,1,55,1,47,0,213,0,49,0,77,0,46,1,247,0,203,0,254,0,23,1,181,0,125,1,210,1,150,1,97,1,226,0,186,0,12,1,237,0,94,0,182,0,202,0,150,1,27,0,57,1,83,1,116,0,95,0,157,0,61,0,5,0,0,0,119,0,66,0,55,0,155,0,106,0,5,1,16,1,126,0,180,0,197,1,195,1,174,0,55,1,130,1,18,1,56,2,46,1,53,1,178,0,207,0,76,1,80,1,230,255,28,0,247,255,39,0,86,0,11,0,12,0,96,0,141,0,216,0,155,0,192,0,230,0,137,0,139,0,49,0,98,0,114,0,190,0,134,0,170,0,220,238,27,238,150,240,153,239,14,240,27,240,70,241,233,255,126,255,74,255,94,255,231,255,173,243,177,241,140,242,63,245,203,255,32,242,209,242,6,241,198,255,73,247,184,253,237,242,168,247,183,243,74,0,15,0,33,0,29,0,17,0,233,255,241,255,220,255,0,0,241,255,9,0,31,0,53,0,251,255,249,255,10,0,234,255,237,255,96,237,12,238,106,238,85,238,215,237,254,240,4,239,49,238,91,238,211,236,103,236,36,236,222,239,121,237,114,238,220,236,175,242,143,238,161,242,60,240,230,243,85,238,159,238,31,239,77,241,52,239,15,239,5,238,78,242,137,237,65,238,224,237,184,240,96,240,118,239,101,239,165,238,46,239,218,246,117,0,68,255,235,255,243,255,36,0,6,1,9,242,69,255,146,251,230,235,46,237,15,237,56,238,175,237,57,237,94,243,44,248,146,244,245,240,145,240,74,239,136,1,135,2,90,2,158,1,178,1,146,1,15,1,27,2,88,1,74,0,245,0,7,1,182,1,20,1,160,2,181,2,225,1,74,2,1,1,226,0,164,0,32,1,106,2,161,2,183,1,92,3,101,1,228,1,114,1,241,1,19,238,80,0,197,247,118,245,104,242,239,0,212,1,238,2,73,2,161,1,45,0,21,247,255,247,186,0,168,0,14,2,155,1,78,0,79,236,27,237,147,234,241,234,254,233,199,233,143,233,156,233,21,234,178,235,25,234,153,235,37,235,186,234,130,236,249,233,34,236,89,232,171,233,37,233,73,235,90,233,10,235,39,234,152,233,54,233,116,238,65,239,181,238,78,237,14,237,8,240,35,242,234,237,201,237,215,237,114,242,49,237,47,243,241,237,45,238,176,238,231,234,9,234,30,239,51,238,183,240,3,238,170,242,132,241,134,244,101,245,138,242,243,242,167,238,170,237,26,242,66,247,1,242,211,240,111,243,228,237,77,242,218,236,145,242,166,242,127,238,131,241,55,241,3,245,167,238,88,240,208,238,222,240,218,241,167,240,127,239,225,238,129,241,254,243,104,241,52,241,171,237,153,240,34,237,52,236,174,235,27,238,77,237,59,243,151,238,224,241,18,237,21,239,187,235,204,236,197,240,201,237,181,238,87,236,137,1,187,0,221,0,71,1,106,0,156,0,38,1,19,0,187,2,12,0,44,2,142,0,249,255,200,255,43,0,6,0,27,250,3,0,57,0,149,0,72,0,67,0,56,238,85,241,71,238,175,238,245,238,86,239,73,238,177,238,231,240,16,239,27,239,236,239,96,245,234,255,159,239,216,241,21,240,30,242,77,238,91,238,97,238,142,238,19,238,101,241,222,238,142,237,59,238,113,242,218,240,248,238,139,239,36,239,4,240,212,239,58,238,180,238,178,237,184,237,82,239,237,240,135,242,215,243,55,243,146,237,234,255,74,240,108,242,217,255,72,244,127,238,228,238,205,238,193,238,115,238,201,242,77,243,208,243,110,240,23,239,53,240,58,240,137,241,137,243,138,239,15,243,143,238,231,237,98,239,23,239,178,237,196,237,95,236,245,236,185,235,102,238,104,237,60,237,72,236,55,238,209,237,175,239,95,239,28,239,82,238,39,239,41,239,247,238,195,238,70,239,107,238,66,238,39,238,67,235,210,237,252,235,13,237,79,237,71,236,141,237,44,237,51,236,16,238,40,237,176,238,28,236,58,234,251,234,85,237,244,236,18,237,31,236,136,235,191,234,183,234,63,234,22,235,47,237,85,234,156,233,5,236,166,234,29,236,32,240,94,242,189,242,241,242,147,245,114,244,190,242,164,245,120,244,71,240,125,240,95,242,166,239,39,240,130,239,228,243,163,241,15,242,99,239,49,238,7,238,46,241,138,239,158,241,195,238,105,238,74,239,15,241,151,239,205,241,54,237,19,235,2,234,220,235,76,237,232,236,152,236,28,238,140,236,127,237,100,240,94,238,249,239,94,239,174,237,187,234,37,237,76,237,176,236,125,238,115,237,248,237,138,238,114,236,56,239,18,238,230,238,92,240,22,238,17,240,85,235,83,238,136,238,82,236,158,238,149,237,243,246,224,242,14,239,16,239,19,239,124,240,227,237,22,239,8,238,135,237,117,237,68,237,23,245,2,245,65,244,53,244,241,246,75,244,233,244,120,245,105,243,186,239,30,240,239,239,199,240,253,241,24,239,125,240,118,239,218,244,229,240,225,238,160,238,250,241,225,241,69,243,210,239,240,239,37,240,238,241,119,241,210,241,199,236,162,234,149,234,46,236,242,233,227,234,211,237,253,236,43,239,136,238,86,235,20,236,34,236,243,235,156,238,241,233,65,234,235,235,30,241,187,238,94,238,178,238,141,240,76,240,150,236,78,238,114,236,251,234,200,236,126,236,179,238,17,239,227,237,158,237,63,239,158,240,100,238,32,238,48,240,96,239,207,239,48,240,222,237,3,236,235,238,188,238,154,238,140,238,50,238,8,237,6,237,169,235,66,236,15,237,109,235,42,236,98,235,168,234,23,235,231,235,22,234,57,236,182,234,196,234,122,234,162,234,229,234,104,235,22,235,246,233,117,234,20,234,89,235,85,235,2,235,15,235,223,234,113,235,62,240,41,241,36,240,9,238,7,240,140,239,46,239,118,238,213,237,26,243,180,240,50,242,37,237,240,238,54,238,240,239,189,239,86,238,88,236,213,233,226,235,222,236,143,235,197,236,236,235,108,236,189,236,156,236,41,238,125,236,173,240,243,240,169,241,72,239,53,238,202,239,14,242,236,239,194,241,76,236,197,236,72,236,54,237,29,237,187,235,126,237,245,236,47,237,21,242,43,241,67,241,121,240,83,240,70,239,250,237,60,241,104,240,223,237,6,238,158,239,78,236,69,237,7,237,47,235,219,236,142,241,154,237,204,238,179,238,129,236,90,233,234,235,196,236,187,236,48,236,245,236,119,237,254,236,37,237,17,237,17,238,38,237,156,237,167,240,109,240,204,240,67,239,251,239,248,239,186,240,239,237,62,239,200,237,50,238,36,241,231,239,167,240,166,237,151,238,197,239,177,243,175,246,182,241,71,244,133,243,61,244,84,243,213,244,234,245,45,245,142,242,219,244,185,238,219,240,44,241,84,240,81,243,87,241,134,242,245,244,173,242,92,243,230,240,142,244,249,241,254,237,190,239,177,240,2,241,75,244,43,242,205,242,252,242,104,244,88,241,153,243,242,239,177,240,180,244,236,241,90,243,161,242,31,243,157,238,182,241,70,242,71,243,181,241,162,250,112,242,178,243,163,245,177,242,199,241,4,240,44,243,106,241,92,242,245,243,154,241,150,242,137,240,55,236,205,233,116,234,122,236,186,235,135,234,254,232,88,233,118,234,32,234,145,232,120,233,67,237,174,237,150,236,11,237,191,234,230,235,52,235,65,235,221,234,35,235,128,241,228,243,195,241,28,244,112,242,50,245,118,242,163,238,92,240,133,238,235,240,15,240,24,239,51,239,156,239,64,240,16,236,233,236,57,241,171,240,151,237,188,240,152,238,70,240,105,240,141,241,172,250,44,241,160,237,178,241,79,237,33,238,88,238,254,236,159,236,122,236,251,235,171,235,109,236,18,236,245,239,207,241,42,240,65,240,65,246,101,242,98,237,8,239,111,238,133,236,182,239,36,239,166,235,167,236,13,238,251,235,137,234,74,239,224,235,107,237,117,239,83,237,74,236,137,234,167,235,44,235,83,235,236,236,109,237,96,234,181,236,143,235,37,236,1,237,119,235,105,235,60,234,104,234,7,237,101,234,43,236,64,235,133,235,83,235,250,235,43,235,98,235,177,234,130,234,21,236,173,233,239,235,61,241,142,241,174,236,248,239,234,238,31,239,48,239,188,234,16,236,220,234,73,235,183,235,248,233,56,235,81,239,162,236,3,235,116,233,149,237,10,236,44,235,36,235,148,235,37,237,8,238,86,238,228,236,105,238,156,237,142,237,210,236,245,236,119,236,29,235,44,235,36,234,213,234,64,235,205,235,158,236,159,234,4,235,145,234,229,235,147,234,64,235,40,234,135,233,17,234,223,236,161,234,237,235,34,234,250,234,233,234,64,233,219,234,212,233,222,233,15,234,239,233,228,233,225,234,57,234,108,237,128,234,244,233,197,233,0,235,161,233,75,236,4,236,10,236,111,236,224,235,35,240,204,237,205,235,223,237,254,235,255,236,66,236,78,238,138,240,153,236,157,236,140,238,69,238,12,237,78,236,4,236,68,236,189,239,216,243,37,237,3,238,190,236,37,242,105,242,107,237,151,236,60,234,6,238,102,236,13,238,32,237,122,237,50,237,10,252,11,245,112,244,108,247,223,237,40,242,190,238,141,237,216,238,56,239,188,242,191,241,252,243,169,241,89,241,104,241,220,241,177,239,219,241,226,245,237,241,190,241,194,242,107,243,236,243,241,240,197,241,25,242,44,241,203,238,136,245,64,242,17,246,143,243,116,243,29,243,240,237,173,237,50,237,156,235,73,237,41,240,16,241,176,242,246,237,155,236,152,240,108,241,231,239,194,239,214,239,31,238,98,240,203,235,124,240,9,241,190,241,105,243,108,243,152,237,136,234,165,243,184,237,166,238,81,236,131,235,253,238,0,239,211,240,11,241,118,241,177,242,87,241,70,241,155,243,60,241,244,240,144,240,31,240,112,239,132,237,128,243,72,240,10,237,221,236,187,239,59,239,142,239,27,236,53,236,101,238,67,237,31,236,170,236,130,236,55,239,222,238,245,238,196,237,34,237,220,236,202,236,130,236,221,240,195,242,27,238,101,240,43,238,50,245,39,241,178,238,64,248,139,236,50,237,175,238,117,236,143,236,165,236,62,236,108,236,237,235,91,238,239,237,49,238,133,240,240,233,133,237,55,237,72,240,216,237,76,238,153,240,35,240,228,237,232,236,117,234,149,236,110,237,125,0,197,0,21,0,74,0,26,0,166,0,67,0,69,0,67,0,60,0,64,0,60,0,47,0,29,0,51,0,61,0,65,0,39,0,38,0,46,0,49,0,59,0,32,0,48,0,55,0,65,0,201,0,187,0,114,0,117,0,150,0,156,0,125,0,131,0,135,0,122,0,95,0,146,0,125,0,95,0,159,0,82,0,89,0,89,0,92,0,118,0,52,0,72,0,108,0,107,0,114,0,132,0,178,0,151,0,156,0,21,1,146,0,203,0,162,0,163,0,148,0,117,0,97,0,131,0,100,0,96,0,85,0,205,0,169,0,230,0,153,0,153,0,163,0,139,0,180,0,150,0,114,0,133,0,111,0,163,0,93,0,191,0,52,0,81,0,65,0,48,0,72,0,135,0,92,0,109,0,120,0,97,0,50,0,52,0,70,0,83,0,53,0,86,0,86,0,58,0,172,255,233,250,159,244,98,244,235,243,69,250,119,248,20,240,78,240,166,239,10,243,69,243,146,240,177,241,147,241,198,242,156,248,174,250,188,246,49,247,63,244,91,247,51,244,88,243,70,243,138,245,85,238,64,237,94,237,9,236,26,237,220,236,88,237,237,237,156,238,46,10,154,2,95,11,21,246,162,255,87,255,48,255,127,255,215,244,225,238,11,239,202,239,44,238,144,238,25,238,202,238,25,239,110,238,140,235,0,236,191,238,199,0,192,0,181,1,60,1,187,0,203,0,15,1,137,246,22,0,67,15,4,0,31,0,93,0,30,15,6,5,118,3,115,9,181,0,144,0,132,0,75,6,14,1,244,5,133,3,85,3,251,0,252,239,51,235,186,239,150,240,77,241,183,9,235,3,107,6,33,0,235,252,175,246,190,241,159,244,106,251,230,0,217,250,125,0,2,236,246,11,152,18,36,16,143,17,12,17,42,13,124,241,176,3,148,251,86,18,108,16,133,14,41,3,140,10,194,5,128,15,65,15,130,18,87,239,35,242,114,241,134,235,136,239,77,243,30,237,84,240,171,243,213,10,98,9,103,255,163,0,187,0,198,0,86,6,209,0,224,0,211,8,232,0,72,8,43,17,122,15,155,19,8,16,57,17,129,14,124,11,210,15,242,9,131,13,112,15,214,15,72,14,132,15,119,14,87,14,94,14,100,14,104,15,137,14,87,16,143,237,14,242,234,237,17,239,5,244,17,242,149,243,140,245,0,243,174,235,141,236,70,237,190,237,141,236,42,237,46,239,134,236,15,238,111,17,246,2,131,6,242,232,175,247,103,2,216,231,7,236,199,239,238,238,22,238,205,239,18,19,160,8,48,15,201,10,98,3,49,3,12,236,155,248,0,0,195,4,146,237,153,228,45,239,10,238,32,239,95,251,177,229,242,243,178,0,128,0,145,0,132,0,124,0,212,3,174,2,215,0,166,0,252,0,172,0,115,0,187,0,187,0,137,0,149,0,180,0,216,0,191,0,107,0,169,0,155,0,196,238,163,246,154,238,30,237,107,247,63,17,138,16,239,15,178,14,245,2,187,14,60,1,203,15,203,5,178,255,205,9,242,4,61,15,186,15,209,255,32,17,144,255,154,0,178,0,146,0,158,0,176,0,223,0,230,0,30,1,30,1,16,1,176,0,157,0,203,17,12,17,12,6,69,10,26,1,160,1,241,0,170,0,189,0,194,0,254,0,80,3,186,1,152,0,14,1,47,14,201,1,204,5,232,3,79,3,248,0,24,1,16,1,19,1,85,1,28,1,210,1,15,1,126,238,76,239,41,239,39,239,5,239,197,239,190,239,41,239,179,239,231,238,150,239,111,240,166,239,178,239,125,239,110,239,213,239,138,239,183,239,162,239,104,239,185,239,81,239,127,239,55,239,175,238,14,243,74,242,175,242,236,241,67,242,111,244,17,242,79,242,182,241,77,242,125,242,114,242,26,241,162,241,122,240,81,242,30,242,72,243,30,239,21,239,88,239,79,240,139,239,162,239,88,239,40,239,224,239,178,241,172,239,168,240,38,241,95,241,24,241,96,241,240,240,16,241,224,240,181,239,15,240,54,240,28,240,184,239,118,240,220,239,189,241,228,241,189,241,130,242,135,242,89,243,160,239,119,241,161,240,113,240,120,240,228,240,172,239,33,239,150,239,85,240,84,239,41,241,248,239,43,240,0,240,237,239,26,239,17,239,81,239,96,239,156,239,147,239,89,239,47,239,9,244,255,243,7,244,27,242,174,243,84,245,74,245,129,244,172,244,182,240,18,241,12,241,150,241,17,241,11,241,81,242,180,241,216,241,37,242,5,244,230,243,92,244,168,242,73,244,252,241,166,243,211,242,210,242,188,241,8,244,61,241,137,241,211,240,83,241,232,241,78,239,250,239,75,240,236,239,241,240,19,241,147,241,42,240,250,240,152,240,110,240,91,242,73,239,1,241,88,241,54,241,239,239,96,240,52,240,79,240,146,240,119,240,114,240,74,240,22,240,176,242,26,243,107,242,172,243,5,243,58,247,199,243,105,243,251,243,6,243,168,243,219,244,247,242,27,243,71,242,160,243,141,243,45,244,199,241,161,241,152,241,36,243,248,241,238,242,105,242,23,242,166,242,142,245,64,243,226,243,196,240,140,240,175,240,93,241,111,241,234,240,22,242,155,241,188,241,144,240,107,242,84,241,188,241,193,242,137,242,26,241,182,241,134,241,93,248,146,255,170,242,251,242,79,242,12,243,139,241,29,243,79,243,32,242,181,242,10,242,202,242,241,242,187,240,185,240,149,240,252,241,253,240,188,240,101,241,212,240,63,242,76,243,178,242,93,242,198,241,26,242,75,242,144,242,241,241,203,242,113,244,47,240,55,241,138,241,116,242,193,241,116,241,115,242,128,242,74,243,15,243,9,243,241,242,72,243,127,242,197,242,101,242,67,243,43,243,125,243,241,241,25,240,36,242,223,240,23,240,242,240,117,239,234,239,214,238,207,240,116,239,54,240,3,240,85,240,32,241,201,240,191,240,192,240,205,239,185,239,164,242,98,239,188,237,212,238,157,239,125,240,145,239,118,239,96,239,187,239,184,242,34,242,71,242,59,242,213,241,67,242,155,240,74,241,224,240,134,241,47,241,51,241,217,240,223,240,205,241,90,242,10,241,162,240,190,243,56,244,179,244,103,243,42,243,206,243,100,242,195,243,178,243,73,243,140,243,161,243,192,243,158,241,70,243,0,243,162,243,148,243,245,243,119,244,27,244,164,243,21,241,145,238,155,239,182,238,162,239,42,240,121,239,148,240,251,238,226,240,120,238,9,240,102,241,83,242,96,240,151,241,160,241,72,241,117,240,243,238,28,239,217,239,83,241,74,242,88,241,81,241,64,243,118,242,43,243,193,243,127,243,185,243,135,243,208,242,159,241,254,240,254,242,234,240,239,242,206,241,247,243,195,243,218,244,200,243,49,242,133,241,32,242,133,242,87,243,9,242,225,242,24,241,36,241,234,241,199,242,117,243,189,243,184,243,219,243,219,241,221,240,12,242,215,235,46,236,127,239,251,236,3,237,35,235,92,235,105,235,191,236,72,238,140,237,189,234,198,236,46,237,29,237,43,236,57,236,23,236,38,238,191,237,116,237,32,237,161,235,175,235,230,236,91,236,181,236,202,237,187,236,46,238,69,245,209,243,79,245,234,240,61,242,231,244,79,241,156,238,133,243,142,240,173,240,205,241,237,239,92,239,67,239,130,241,148,240,31,241,195,239,33,239,189,238,6,240,199,239,107,240,191,238,19,239,74,239,130,241,52,240,213,239,116,241,10,240,10,241,62,239,26,240,146,240,77,239,131,240,43,239,104,238,159,239,162,239,254,237,214,237,98,237,196,238,140,239,59,239,136,239,130,239,185,240,80,239,242,239,252,238,94,236,57,239,252,237,250,238,22,238,239,237,8,239,50,239,24,238,48,238,180,237,0,240,158,238,140,240,116,239,188,237,215,236,48,237,80,236,29,237,117,237,12,239,195,238,89,237,10,11,73,6,248,8,36,240,241,243,219,237,214,11,252,2,108,255,111,240,201,239,162,239,211,238,216,239,18,242,134,238,229,238,93,241,116,0,1,255,55,255,207,254,35,253,136,1,107,239,77,237,29,240,225,239,207,239,98,236,241,241,81,241,124,241,70,240,127,241,118,241,39,240,51,241,124,240,220,241,162,240,62,239,81,241,111,240,116,240,242,239,18,240,248,239,99,240,98,240,154,240,18,240,188,240,244,240,225,242,171,240,29,242,169,240,120,240,181,240,112,242,105,242,82,242,45,241,101,242,213,245,110,242,158,241,124,241,178,249,34,242,230,1,159,240,210,239,250,239,11,254,202,238,76,242,192,239,199,241,1,240,176,241,27,240,210,240,77,240,201,240,49,240,162,240,111,240,24,241,1,240,47,241,137,243,157,247,215,239,101,240,35,240,105,241,148,240,204,240,159,238,149,240,88,240,0,240,29,240,204,240,113,240,56,240,98,244,51,244,3,244,252,242,228,243,190,242,68,244,17,244,213,242,159,241,200,241,154,242,48,243,235,241,28,243,250,245,173,243,63,244,84,241,234,241,51,242,100,243,253,242,65,242,158,242,90,242,245,243,97,244,12,243,242,242,94,240,219,240,39,241,140,241,194,239,85,238,188,241,58,239,173,239,103,241,120,240,51,241,219,239,234,239,216,239,101,240,217,237,53,239,229,241,249,240,255,240,56,241,4,241,72,241,203,240,94,240,46,240,74,239,186,239,14,240,74,244,102,241,254,241,63,241,98,244,105,242,103,241,96,241,62,241,232,240,10,241,152,240,31,241,179,241,84,241,26,241,192,240,6,240,71,245,64,243,190,243,65,244,27,243,84,242,58,241,72,243,77,243,165,241,246,242,198,241,58,241,191,242,38,239,62,243,222,242,218,242,110,241,175,240,153,241,36,241,211,241,8,242,185,244,254,241,161,241,162,243,18,243,114,244,179,241,46,242,84,242,52,243,29,244,43,239,143,238,186,243,141,240,24,242,46,241,214,242,35,241,75,240,127,242,137,241,135,241,139,242,135,242,110,243,90,243,3,243,169,241,188,241,251,242,210,240,253,239,193,243,49,244,60,241,101,241,208,243,12,243,143,240,14,240,20,240,77,240,107,240,127,242,138,242,100,241,165,240,46,241,6,240,196,240,112,239,65,240,251,238,8,239,131,239,36,239,215,240,169,238,119,239,123,238,153,238,52,241,65,241,3,237,94,241,215,242,132,241,105,241,29,239,77,238,104,239,236,240,217,242,132,241,149,240,235,243,196,242,90,243,255,242,88,243,179,243,102,238,42,243,0,241,132,240,205,240,126,241,25,241,83,243,107,243,15,241,153,243,38,243,251,241,14,240,57,240,189,239,184,239,203,239,125,240,163,240,93,240,176,239,234,240,201,240,2,240,45,240,80,240,242,240,111,240,66,241,32,242,48,241,65,241,128,244,230,241,203,240,43,241,87,240,182,240,71,239,161,241,241,241,125,240,84,240,145,240,121,240,5,242,187,239,143,241,41,242,85,240,120,241,205,240,197,241,191,241,212,244,166,236,206,237,177,237,183,236,31,237,203,236,66,237,101,239,97,238,42,239,238,238,19,239,110,238,50,238,147,238,212,238,158,239,129,237,16,238,228,237,176,240,250,239,36,240,181,239,35,239,233,237,29,240,64,240,105,240,44,240,106,239,153,241,210,238,44,240,61,240,93,241,199,238,187,239,153,239,43,239,219,238,170,239,125,239,110,239,163,243,22,243,206,243,132,243,196,245,85,241,194,241,212,242,250,242,240,241,243,241,121,243,5,242,22,241,9,244,80,243,182,246,134,242,3,244,4,243,13,244,127,243,179,242,22,242,209,243,113,243,160,243,3,242,39,241,134,240,223,240,237,242,58,242,163,243,195,246,169,244,65,242,110,241,30,242,94,242,117,241,59,243,230,241,124,241,179,241,123,241,1,242,38,241,118,239,1,243,200,239,214,239,216,238,149,239,104,239,56,241,209,239,237,239,39,240,107,241,150,240,10,240,42,240,153,239,249,240,43,240,207,239,34,239,1,241,183,239,30,240,231,239,143,239,184,239,66,244,196,243,107,242,196,241,243,243,8,242,75,242,223,241,6,243,71,242,13,241,217,246,165,243,183,240,53,241,242,243,253,247,36,244,165,2,36,242,188,237,250,231,235,239,190,237,144,243,203,240,127,241,187,240,195,241,15,240,215,238,15,247,150,238,81,239,186,240,189,239,54,240,31,239,145,243,8,240,56,238,24,238,250,239,10,239,197,238,43,243,119,240,13,241,88,244,174,243,135,239,214,242,72,240,153,238,160,243,233,241,168,237,26,238,43,238,109,237,96,237,48,238,15,239,13,245,99,239,78,239,5,241,168,241,12,241,217,240,57,242,194,240,195,240,163,240,148,239,213,240,143,240,83,240,132,240,214,240,81,247,226,240,73,239,50,240,248,241,204,242,105,240,209,240,213,241,147,241,210,241,0,242,14,239,246,238,1,238,127,239,53,240,176,240,107,241,165,246,205,240,88,239,180,240,138,241,121,240,112,239,105,240,6,240,29,241,140,239,76,243,25,239,29,239,186,240,197,238,33,241,187,240,7,240,227,240,229,241,149,239,96,239,16,239,62,238,165,239,213,239,61,239,12,238,125,239,38,239,218,248,95,240,129,242,157,242,233,241,236,243,164,241,111,241,192,240,12,241,129,241,97,240,84,244,105,243,121,242,224,240,0,241,126,244,119,240,244,240,111,240,203,241,214,240,113,242,221,237,164,237,147,237,95,238,125,238,249,238,221,238,230,238,130,238,235,238,241,238,72,238,81,239,205,239,89,238,149,238,51,239,179,238,234,238,63,238,171,238,235,237,245,240,81,240,237,240,221,239,77,240,84,240,45,239,206,239,79,240,88,240,211,238,18,240,130,239,168,239,246,238,93,241,85,239,23,240,92,238,124,238,201,237,2,239,51,238,227,238,150,237,181,238,96,238,31,238,27,239,203,238,87,238,164,237,182,237,21,238,181,238,7,238,27,238,189,237,162,238,81,238,69,238,128,238,9,238,199,237,216,237,59,238,67,238,242,238,150,238,157,237,79,239,219,238,111,238,207,238,12,239,43,239,65,239,109,239,248,238,103,238,195,239,145,238,15,240,97,239,186,238,118,238,98,238,6,239,41,239,232,238,252,237,231,237,2,238,40,238,137,237,247,237,16,238,69,238,151,237,133,237,239,237,115,238,41,238,182,237,178,238,207,237,77,238,223,237,228,238,135,238,52,239,175,238,22,238,149,238,11,238,243,238,26,240,34,238,9,238,34,238,187,238,184,238,221,238,47,238,230,238,202,238,197,238,11,239,245,238,212,238,82,238,118,238,120,238,184,237,144,237,181,238,99,238,90,238,28,235,1,234,47,235,92,235,167,235,254,234,177,234,138,235,41,235,90,235,171,235,7,235,132,235,74,235,216,234,38,235,183,235,174,236,63,232,122,236,23,235,209,235,235,233,18,235,11,235,213,238,113,239,37,238,40,238,160,237,31,238,147,238,100,236,95,237,176,236,8,237,179,237,82,238,110,236,103,236,5,236,157,238,35,238,32,238,95,236,170,236,109,235,92,236,74,236,189,236,224,236,41,236,121,236,179,236,86,236,176,236,36,237,88,237,211,236,10,237,190,237,71,237,243,236,61,237,222,236,118,236,90,236,48,236,178,236,146,236,143,237,37,237,7,237,69,236,139,236,184,236,69,236,2,236,163,235,89,237,111,236,144,236,162,235,49,236,167,235,0,236,67,235,151,236,144,236,22,236,140,237,237,235,23,237,37,236,30,236,213,237,2,236,185,235,213,235,206,235,95,239,179,239,144,239,145,248,242,255,218,255,173,248,152,255,130,239,144,238,123,238,157,239,188,238,124,237,203,237,93,243,119,243,96,244,87,237,251,236,63,237,87,236,29,237,123,241,208,238,130,236,63,237,45,238,126,237,250,239,147,238,254,238,224,239,196,239,133,239,39,239,55,240,108,239,34,242,100,239,3,239,117,239,182,254,253,241,86,242,45,240,100,239,232,239,99,240,47,240,127,239,156,242,123,239,21,240,48,239,168,239,10,240,84,240,175,243,64,1,45,238,93,238,229,238,221,237,22,237,141,237,118,238,19,238,229,237,218,234,165,235,133,235,150,237,232,237,42,237,106,238,59,236,123,236,11,238,161,237,18,238,78,238,47,239,151,237,89,238,1,238,63,238,86,241,219,242,54,238,192,237,50,238,189,237,154,237,102,237,169,238,31,241,40,239,237,238,25,239,38,236,102,237,135,235,21,236,237,236,92,238,149,237,0,237,184,237,117,237,60,238,202,237,128,238,218,238,103,238,233,238,103,239,33,239,13,238,193,237,119,238,114,238,211,238,60,239,53,239,70,239,119,239,20,238,140,238,24,238,215,238,75,239,87,240,69,239,200,238,235,239,235,237,129,238,241,238,133,238,175,238,14,239,119,238,135,238,207,238,130,238,56,239,4,239,76,239,236,238,194,238,63,239,163,238,198,239,93,238,106,238,162,238,39,240,123,238,177,238,182,238,239,238,20,238,13,238,180,238,159,238,175,238,146,239,84,239,221,237,57,238,123,238,210,237,67,238,237,238,224,238,88,239,195,238,161,239,81,238,41,239,57,239,42,239,179,238,150,238,161,240,200,238,154,239,94,239,83,239,122,239,161,239,119,235,67,235,95,239,4,238,37,236,217,234,1,235,52,234,122,234,212,233,118,239,205,235,238,235,240,234,29,235,74,235,98,235,135,236,91,235,10,235,68,235,46,235,19,236,36,242,92,237,147,240,164,235,103,236,92,236,218,236,210,240,37,240,61,237,202,248,137,237,90,235,131,235,23,245,80,234,167,234,240,234,99,244,248,234,99,236,147,235,150,234,227,233,159,237,55,235,124,237,22,234,241,233,181,235,13,235,40,234,135,235,114,237,162,236,96,238,7,238,230,252,40,236,35,244,140,236,212,237,158,255,121,237,145,244,160,238,160,239,174,236,81,237,249,236,215,236,219,237,110,237,159,237,197,237,78,237,97,244,204,242,222,242,175,234,144,235,241,234,91,235,3,236,45,236,1,238,22,237,238,235,232,235,79,236,117,238,140,236,106,236,56,237,50,236,110,250,192,236,231,234,24,235,102,233,176,234,167,234,86,235,201,236,141,234,171,234,165,235,113,234,70,234,107,235,182,234,44,234,151,235,208,236,14,240,220,233,106,233,76,233,154,234,8,233,62,234,10,243,236,235,113,236,128,235,75,235,231,234,222,243,195,238,255,236,0,235,204,235,82,240,191,236,93,235,242,235,67,237,33,235,102,235,4,239,38,237,99,233,223,235,24,242,61,237,80,233,76,232,2,234,135,234,54,232,77,234,255,233,1,235,28,235,57,242,109,235,73,239,216,233,117,235,85,235,229,241,155,235,28,239,148,236,100,235,63,237,36,233,252,231,136,232,152,234,248,233,104,235,115,232,170,232,253,231,207,234,162,235,13,235,21,236,163,234,139,233,95,237,86,235,2,234,13,238,53,235,142,237,163,232,60,233,14,233,7,233,19,233,140,235,242,232,1,234,154,233,210,232,12,234,245,238,203,240,213,233,242,233,148,232,74,233,155,232,203,234,78,235,234,235,62,235,107,235,120,235,142,235,60,239,58,235,177,235,181,0,63,247,14,235,78,236,183,233,227,234,194,233,205,235,63,235,205,233,144,236,3,237,171,237,52,236,40,236,163,236,125,236,116,237,211,242,82,246,19,239,119,238,29,237,149,234,87,235,63,235,193,237,90,235,131,236,34,237,9,237,195,239,55,238,166,236,40,239,167,236,131,239,212,244,199,237,23,238,226,239,243,238,145,239,161,236,134,237,143,247,74,235,201,235,9,235,10,235,230,234,63,234,130,234,169,234,191,233,176,233,3,234,81,235,210,234,141,234,85,234,110,234,151,233,27,234,232,234,150,234,206,233,158,234,73,234,180,234,211,233,80,234,110,253,25,239,189,239,150,237,52,241,123,234,230,233,132,234,79,235,177,236,167,234,54,237,108,235,10,234,62,234,68,237,84,235,12,237,236,235,238,233,239,235,9,237,189,241,253,234,96,233,14,234,60,234,254,233,181,233,207,233,62,245,242,240,216,248,141,249,196,235,201,243,127,235,200,239,62,236,11,237,110,240,99,240,57,236,178,236,250,234,206,234,93,235,178,235,98,234,145,235,214,234,179,235,90,235,109,233,180,234,0,235,154,239,138,235,29,236,144,244,216,237,131,235,230,239,47,238,170,241,85,244,17,238,67,242,18,237,36,236,172,236,122,237,74,242,35,238,197,234,103,234,18,237,166,236,156,234,116,235,46,236,157,237,84,237,88,237,212,232,38,247,167,233,107,235,45,236,2,235,73,236,241,234,185,235,180,238,30,245,153,235,196,237,64,244,140,236,252,235,4,237,44,236,189,252,57,248,239,247,183,241,90,244,34,222,165,245,48,247,56,247,179,234,189,245,207,233,10,224,108,234,24,237,113,233,238,232,91,232,253,246,232,253,114,251,124,248,99,249,101,244,88,251,196,246,215,247,24,241,25,243,238,247,123,234,46,234,206,235,236,233,245,233,62,234,74,234,42,234,231,233,161,233,12,234,203,233,192,233,138,233,198,233,20,234,232,233,96,234,214,237,124,236,43,235,2,234,250,233,93,234,87,233,41,235,125,234,36,233,163,233,252,233,67,2,195,251,69,253,50,248,176,251,228,244,116,247,70,246,175,247,236,249,131,251,9,247,80,247,111,245,45,245,211,242,185,250,143,248,73,229,222,241,241,231,32,245,41,252,102,250,64,246,214,253,26,248,114,247,230,246,14,246,59,235,175,235,99,235,239,234,106,238,84,233,29,227,96,231,218,233,200,234,62,248,6,240,208,250,170,250,248,250,220,234,150,227,234,232,158,251,188,241,207,240,233,239,135,240,173,247,189,238,64,241,86,244,213,236,63,238,116,236,121,237,153,237,81,238,128,244,9,242,71,238,206,238,171,237,238,237,88,238,190,237,210,237,238,237,56,237,247,236,191,238,238,245,82,239,161,241,94,243,255,241,173,243,151,240,110,236,19,244,177,245,204,245,100,235,74,234,58,235,46,237,207,235,224,237,234,233,83,235,82,236,76,235,162,233,216,236,55,237,107,235,64,235,4,236,10,236,68,236,5,243,131,241,40,245,246,234,60,236,72,234,129,237,61,237,227,236,157,236,89,236,204,236,31,237,12,237,47,236,136,238,129,237,254,237,190,236,40,238,199,236,95,236,223,236,12,239,119,236,79,236,160,236,148,236,137,237,114,238,147,238,206,237,57,239,143,236,2,236,244,235,20,236,13,236,53,237,86,242,140,237,231,236,37,236,114,235,252,237,50,238,194,245,37,244,180,235,105,236,90,240,15,235,78,237,218,234,242,235,147,234,25,236,116,234,86,234,53,233,43,235,123,236,152,236,166,231,27,234,85,233,57,234,213,233,18,233,144,236,212,234,209,236,184,232,232,233,162,233,176,233,72,236,166,237,87,233,238,234,155,232,159,245,115,246,63,246,69,250,92,249,204,248,202,241,207,249,23,242,222,237,209,241,66,246,92,241,23,238,253,238,81,239,1,238,201,255,114,237,220,236,164,235,202,247,221,242,50,246,116,237,189,239,71,240,140,243,47,241,193,243,19,241,221,240,214,247,55,238,72,238,118,241,32,239,89,240,206,239,250,233,28,235,109,233,237,237,91,235,161,236,231,234,166,234,202,234,158,236,56,237,203,237,209,235,11,236,114,235,163,240,227,238,172,247,39,239,19,236,104,240,30,235,76,235,83,234,109,234,87,233,240,237,221,239,255,240,171,241,87,239,238,233,240,234,239,232,80,235,49,236,118,236,255,235,162,234,253,238,2,236,131,235,255,234,160,233,208,234,77,236,64,236,159,236,55,235,77,236,190,236,177,234,240,233,116,233,212,234,174,235,237,233,119,235,66,235,105,235,84,234,227,236,123,234,47,235,191,236,221,234,10,237,229,236,135,236,78,236,75,238,32,236,221,234,75,234,106,234,161,234,205,233,158,233,45,234,24,236,191,237,7,234,61,235,242,245,85,247,199,249,148,246,10,248,5,234,176,221,207,246,134,237,134,233,4,0,35,247,23,239,166,255,178,247,146,240,200,228,234,244,235,245,103,246,30,249,4,248,48,234,15,245,176,233,97,234,10,235,17,246,147,237,142,238,109,237,212,234,224,234,75,237,0,0,238,235,215,235,78,234,161,236,35,236,154,234,235,233,40,235,76,235,218,234,84,235,229,234,208,234,18,235,206,235,48,235,115,233,114,235,237,235,195,234,155,234,74,235,94,235,218,235,75,234,65,234,195,235,43,238,138,237,229,240,215,236,14,244,242,235,166,235,222,237,245,238,129,238,74,236,27,239,148,235,229,239,136,238,172,237,77,235,85,234,40,237,90,236,234,235,83,235,152,235,236,237,7,250,114,239,115,237,155,238,237,236,24,237,19,239,229,237,166,236,19,237,189,237,144,236,104,236,172,235,88,237,81,236,132,237,99,237,127,237,55,237,214,236,239,236,56,237,28,237,46,236,69,236,118,236,179,236,50,236,78,235,146,235,212,236,82,236,184,236,31,236,26,243,30,236,73,235,158,238,97,235,110,236,115,236,205,235,177,235,159,236,55,236,78,237,39,239,101,234,88,235,184,234,192,236,238,234,194,234,74,236,55,234,33,234,245,247,116,236,19,236,86,235,232,234,122,234,249,233,128,235,166,234,3,235,15,235,224,238,15,241,156,244,196,244,247,236,153,239,203,235,163,234,115,234,249,234,38,234,53,233,105,233,18,237,20,235,188,241,86,234,73,234,117,233,159,234,7,235,194,234,198,234,56,236,250,233,109,234,84,236,165,238,83,236,219,236,183,238,77,237,96,237,47,235,92,232,228,234,210,233,23,234,50,234,48,235,229,235,4,235,163,235,106,234,231,234,29,235,194,234,156,234,147,234,19,235,165,234,194,235,114,244,101,239,62,236,139,234,86,234,76,235,41,235,138,235,193,234,241,227,27,235,189,234,206,234,87,235,91,238,59,234,138,234,147,234,118,239,128,249,33,239,128,239,135,238,30,237,102,243,107,236,8,237,23,238,72,236,201,237,255,235,6,236,237,237,30,237,74,236,219,235,33,236,130,239,39,237,232,237,233,237,110,237,219,237,78,237,105,237,185,237,161,237,2,236,26,243,191,235,148,238,253,235,236,235,120,236,9,236,193,236,35,236,140,236,121,237,194,236,230,234,180,235,86,235,136,237,111,235,155,237,41,244,164,241,123,240,205,242,133,238,143,239,83,238,68,236,168,235,123,234,244,235,113,235,35,235,89,239,66,236,152,235,170,235,177,235,231,234,130,236,9,235,164,234,90,235,221,236,31,235,28,234,241,241,188,236,152,237,58,237,255,237,162,235,187,234,199,235,200,235,235,235,137,235,248,234,125,234,160,234,118,234,187,237,27,235,4,237,250,238,126,239,217,237,212,248,198,247,158,235,181,235,2,237,192,235,2,241,86,235,36,236,113,239,225,238,88,244,97,240,254,242,89,247,132,238,180,237,146,238,86,247,129,242,149,239,192,245,127,237,112,241,226,235,209,235,136,237,239,236,108,235,75,245,96,235,209,234,73,235,65,242,51,235,108,235,53,235,122,235,162,235,123,237,191,240,187,238,192,241,51,239,106,238,182,236,231,237,211,237,216,241,130,237,225,242,5,237,2,238,247,237,166,235,88,237,126,237,207,237,215,236,235,242,23,238,123,237,127,237,149,235,103,235,214,235,70,238,97,236,226,235,193,238,176,235,172,235,110,236,238,238,110,238,113,246,183,255,3,239,137,235,186,237,155,236,106,235,72,235,139,244,9,236,29,235,42,235,214,234,81,235,249,235,204,240,139,238,202,238,148,236,224,238,100,234,158,235,55,235,195,234,34,237,184,234,6,242,21,235,56,236,155,246,115,236,132,235,91,236,238,234,197,234,0,234,105,234,182,233,93,233,160,233,217,234,48,234,108,236,9,236,172,235,154,234,156,235,163,237,223,232,9,234,8,234,55,232,134,235,63,251,235,235,215,233,156,234,53,233,244,232,0,234,127,233,78,233,215,232,249,232,160,232,170,232,253,232,241,233,125,233,2,233,241,232,31,233,36,233,32,233,112,234,157,233,52,232,66,232,44,232,247,231,142,231,74,233,225,232,118,232,36,233,162,233,242,232,220,232,177,234,34,235,135,237,220,247,233,240,179,233,45,233,243,232,29,234,195,234,80,234,226,241,164,233,14,234,18,233,181,234,117,233,183,232,8,251,36,252,63,251,224,250,80,251,51,252,236,251,131,0,249,242,13,243,27,243,58,247,39,254,41,249,197,242,234,250,178,254,38,226,196,252,8,252,188,253,245,253,24,249,219,252,228,247,243,250,177,232,248,232,184,233,166,233,171,233,11,233,74,234,118,234,254,234,123,234,63,234,131,234,116,235,157,234,3,235,138,233,214,233,199,233,123,243,203,227,36,239,23,235,60,236,234,235,134,236,139,236,246,235,242,234,23,235,157,234,75,233,233,233,175,233,237,232,11,234,38,233,25,234,30,235,115,235,163,234,226,235,186,236,247,234,234,233,27,234,112,234,30,234,48,235,124,234,231,233,117,234,134,234,153,233,169,233,70,235,99,234,78,239,63,236,106,227,226,240,196,234,68,234,61,234,44,235,188,234,200,234,90,238,190,228,105,234,22,237,247,235,27,236,46,236,224,234,147,234,159,246,162,233,158,232,153,244,209,234,189,236,248,235,245,233,185,234,87,234,50,236,62,237,94,236,80,235,143,233,223,233,210,233,137,239,29,234,241,231,10,233,71,233,96,233,142,233,122,235,237,235,166,233,167,233,41,234,77,233,133,232,221,233,255,232,197,232,162,232,155,234,33,233,81,233,250,232,212,232,100,238,49,232,40,232,91,232,104,232,94,233,124,232,28,234,124,234,49,238,48,233,141,233,188,234,189,232,209,233,218,232,167,232,10,232,1,233,161,232,36,232,70,232,183,247,16,232,231,235,141,232,46,232,208,232,211,232,190,232,148,232,151,232,75,232,63,233,16,232,26,232,214,231,100,237,96,233,196,233,193,233,174,233,149,233,7,234,119,233,166,232,226,232,230,232,112,232,178,234,201,232,116,233,198,238,137,234,112,233,217,233,128,232,125,232,115,232,51,233,5,234,206,232,156,232,78,232,172,232,222,231,208,232,92,236,228,234,91,237,252,234,159,234,149,234,182,234,183,235,188,234,61,234,88,234,182,233,7,237,189,233,34,235,141,235,245,237,208,239,109,240,219,234,32,237,242,236,207,232,16,232,33,232,141,233,223,232,183,238,155,237,168,234,69,233,23,234,22,233,213,232,106,233,196,233,110,233,252,232,212,233,159,233,99,234,129,233,147,233,81,233,215,232,145,232,31,233,154,233,133,233,196,233,140,231,153,233,246,231,255,233,39,232,233,232,15,237,170,239,72,233,145,233,234,240,78,239,226,234,212,232,103,233,97,233,213,233,116,240,1,236,45,235,154,237,42,241,50,243,237,242,235,237,251,235,26,234,35,237,52,238,106,235,199,240,249,239,182,237,137,237,212,0,210,0,20,1,131,1,242,1,145,0,51,1,158,6,170,6,78,4,170,1,106,3,55,2,69,3,4,5,53,1,58,1,145,1,162,0,144,1,90,2,111,1,4,2,31,1,28,1,10,1,140,5,57,7,201,5,207,4,212,4,176,5,139,7,140,5,174,7,6,3,21,4,120,3,205,3,2,4,186,3,102,3,92,2,236,2,130,8,217,7,77,8,117,6,90,7,102,7,167,6,45,7,119,7,200,4,95,4,124,4,71,1,55,2,33,2,57,3,161,4,241,4,236,3,65,2,204,1,219,4,127,1,44,2,14,2,99,1,138,4,167,3,15,6,223,6,142,6,168,5,116,6,125,5,50,3,139,2,144,4,167,1,204,6,39,2,83,3,63,2,32,2,113,251,199,2,95,3,36,4,176,2,249,1,228,1,234,1,36,2,47,3,78,3,203,1,55,2,87,0,117,1,41,2,245,0,108,0,172,0,122,3,28,1,13,4,22,0,41,0,148,0,165,3,108,0,66,5,56,0,62,0,149,0,52,5,154,4,57,6,75,1,252,3,191,1,47,5,224,2,18,2,85,1,173,4,106,3,158,0,90,0,55,1,67,1,252,0,197,0,5,0,49,0,29,0,51,4,194,4,3,4,28,4,130,5,113,5,163,3,32,4,38,2,2,0,234,255,8,0,51,0,5,0,232,255,26,0,9,0,244,2,255,1,31,4,152,1,164,8,196,5,93,4,236,3,162,5,63,4,249,3,243,5,233,3,86,5,14,5,95,5,16,6,189,4,211,4,6,4,110,5,111,7,33,5,183,3,5,4,65,3,158,3,98,3,179,5,225,3,120,5,122,5,253,5,9,4,16,0,62,5,14,0,60,0,96,4,137,4,110,5,168,5,204,5,137,4,181,4,41,6,39,4,159,4,68,4,123,3,251,5,136,3,131,249,78,249,138,255,52,255,248,255,190,255,9,0,127,2,68,0,236,255,221,255,56,0,147,255,94,255,47,0,16,1,57,3,4,0,191,0,133,0,41,1,23,1,163,0,202,255,177,0,58,0,185,1,140,3,204,4,124,2,148,3,39,3,69,4,126,1,39,1,64,3,3,2,204,2,131,2,183,2,153,2,20,3,76,3,35,2,40,5,9,3,8,5,111,2,206,4,52,3,205,2,205,4,38,1,167,0,190,0,160,2,146,0,212,2,142,0,130,0,159,0,221,0,95,0,36,0,240,0,222,1,210,1,67,0,91,0,107,0,55,2,125,1,12,2,24,1,31,1,245,0,166,0,95,1,164,0,11,1,158,1,172,1,31,5,14,2,60,4,177,0,68,3,18,1,10,1,17,1,59,1,191,1,71,6,231,3,125,3,117,1,197,2,69,2,63,1,171,2,125,5,138,4,36,5,177,5,209,5,165,4,69,3,188,3,45,4,234,3,9,4,218,3,156,3,67,3,104,8,139,4,84,4,239,6,112,4,8,5,145,4,186,5,161,0,137,0,127,0,152,0,78,1,70,3,128,2,10,4,188,3,9,3,47,2,166,0,58,3,190,4,70,3,121,3,173,2,123,3,142,3,136,1,222,3,23,3,123,4,53,8,204,2,29,3,202,2,47,4,40,4,130,4,161,3,170,3,1,3,9,3,253,2,16,3,127,2,29,2,100,2,18,2,112,2,50,3,125,3,197,3,28,3,93,2,142,2,102,3,227,2,71,3,219,3,170,2,106,2,102,2,203,2,39,3,56,3,137,3,151,2,53,3,235,2,171,2,226,0,49,245,89,0,20,237,167,234,216,235,41,236,195,234,5,237,138,248,195,243,143,243,71,236,208,237,172,243,250,251,8,251,120,239,90,242,236,255,22,239,110,237,194,243,28,244,233,241,73,246,227,237,57,236,188,236,149,236,105,238,180,236,15,239,138,233,129,231,172,232,68,239,20,234,76,239,55,238,150,232,130,232,231,232,7,233,82,231,201,233,31,234,145,233,252,235,81,236,224,231,239,234,160,233,47,234,99,222,9,235,88,234,236,232,198,232,133,233,106,239,69,240,76,239,253,248,238,243,26,242,91,254,198,238,210,249,191,240,225,254,189,247,211,251,238,250,116,237,70,255,213,255,190,255,200,255,70,0,253,255,202,254,240,255,169,253,167,2,12,0,240,2,0,0,0,0,97,253,34,243,189,2,152,250,17,0,45,0,145,255,31,253,0,0,254,255,225,2,21,239,65,238,104,0,107,240,59,247,26,3,115,252,200,3,127,245,84,243,38,238,39,241,0,242,102,242,179,249,220,242,214,242,196,236,176,238,66,238,182,237,212,237,253,236,71,246,21,240,135,243,163,239,216,238,94,237,65,243,17,243,181,240,18,237,97,238,121,237,171,247,37,240,249,238,143,242,52,244,129,243,175,234,88,233,21,233,160,236,18,239,27,240,132,233,242,232,90,232,128,233,247,232,13,234,159,232,90,232,110,232,123,237,192,238,1,239,117,237,160,237,32,236,5,239,49,241,211,235,7,234,67,234,140,235,151,239,119,238,79,239,47,235,211,233,162,235,237,234,33,241,32,242,160,236,32,236,98,237,108,237,68,238,111,235,175,238,57,236,166,236,254,231,236,236,244,233,166,236,17,241,58,236,209,236,23,236,211,234,128,236,228,235,231,236,100,238,235,236,207,235,55,238,27,238,211,235,55,235,217,236,176,235,207,236,208,237,142,237,142,238,4,238,28,237,94,238,148,236,100,237,118,0,26,0,39,0,74,0,43,0,191,0,196,0,118,0,68,0,224,1,1,1,87,0,20,2,167,1,144,1,32,1,245,3,38,5,115,1,113,1,127,2,31,0,114,3,114,0,72,2,17,1,237,1,174,1,72,1,217,0,188,239,127,240,208,239,40,240,1,241,220,240,253,240,150,240,86,241,99,244,58,243,184,244,38,245,194,240,99,242,229,2,167,245,160,241,199,255,143,255,218,255,92,248,178,253,156,249,149,254,204,254,132,250,83,241,56,244,206,241,56,233,36,232,11,241,172,253,78,247,223,254,66,234,179,230,62,229,201,255,151,255,174,255,198,249,213,254,190,0,145,255,97,255,96,250,157,233,108,235,94,235,104,233,56,234,72,234,108,234,91,231,77,240,217,253,23,0,114,248,35,0,197,255,209,255,159,0,81,0,116,243,204,2,116,240,106,255,25,248,212,255,220,0,4,0,178,255,147,5,230,255,235,255,196,255,7,233,139,232,165,232,62,233,121,234,48,233,36,236,192,234,128,234,50,235,105,233,147,233,160,235,180,235,208,233,247,233,12,235,60,234,192,233,27,233,51,233,20,233,210,239,188,235,68,236,172,234,134,233,253,233,98,232,56,234,207,233,228,235,147,235,254,234,56,232,169,233,207,233,28,233,241,233,47,233,145,234,114,239,148,234,252,233,116,244,4,0,143,247,230,249,218,255,216,224,30,0,181,239,158,253,198,236,0,0,171,255,223,238,98,235,193,4,19,1,85,243,131,244,75,241,189,244,246,237,38,3,235,234,215,239,65,234,219,235,105,234,2,234,229,242,150,236,147,234,72,234,248,234,254,234,104,235,244,235,8,241,234,233,134,238,134,235,82,250,18,0,90,252,34,251,93,252,159,3,237,2,79,0,179,255,153,252,123,2,193,255,26,243,116,243,80,252,63,245,108,255,224,247,203,255,255,0,221,255,37,255,109,2,150,2,8,0,220,2,75,1,65,1,109,1,213,241,42,242,149,243,119,0,35,242,251,242,124,242,161,241,42,0,109,0,103,0,169,0,7,1,117,4,159,0,40,2,173,1,164,0,64,0,232,233,29,234,92,235,225,234,193,232,68,235,81,230,120,0,171,249,74,251,243,249,23,2,150,231,87,235,190,250,62,2,14,243,146,248,58,3,96,255,235,253,15,254,141,253,55,235,79,236,58,227,166,3,121,249,124,2,88,255,136,253,217,241,245,255,124,0,63,242,69,249,34,245,216,255,168,253,60,255,128,1,119,252,133,255,137,255,29,0,82,0,27,0,78,0,53,0,116,2,102,1,14,0,139,0,7,0,251,0,182,0,91,0,244,0,35,0,39,0,15,0,24,0,46,0,46,3,27,0,53,0,66,236,152,243,113,251,111,253,89,255,230,254,138,249,169,255,111,255,85,255,188,255,151,255,189,255,231,252,110,255,177,252,194,255,16,0,207,255,154,255,196,255,194,255,198,255,241,254,168,255,133,255,15,2,227,1,83,0,224,0,27,3,149,2,84,0,32,0,244,255,231,255,116,0,222,255,219,255,29,0,166,0,12,0,87,0,129,0,6,0,235,0,182,255,199,255,178,255,204,255,186,255,0,0,5,0,223,255,246,255,4,0,4,0,182,255,178,255,167,255,170,255,199,255,29,0,2,0,0,0,226,255,208,255,222,255,218,255,248,255,19,237,239,232,91,232,99,244,163,245,31,235,145,243,125,233,166,233,234,235,34,233,6,233,13,247,204,244,91,246,255,241,4,242,143,244,3,237,184,229,47,229,209,239,89,233,161,232,219,233,15,234,172,235,177,232,145,232,189,249,91,242,108,252,201,234,127,222,166,225,90,227,8,223,95,234,254,231,157,233,29,232,163,231,208,232,192,232,208,232,49,234,160,232,19,232,80,250,232,247,119,235,110,235,57,237,143,235,190,237,80,237,235,239,26,237,84,236,77,238,157,238,220,236,18,240,133,239,196,245,202,235,250,237,252,236,174,243,246,238,38,239,52,243,66,236,240,234,216,234,23,229,210,234,64,244,179,246,73,242,24,245,117,242,53,240,149,244,203,240,63,242,126,247,245,244,131,244,86,246,251,241,230,245,254,3,19,253,96,6,211,5,220,243,122,255,235,1,250,250,137,247,185,248,226,3,113,253,41,250,206,245,104,243,248,242,62,251,190,248,58,245,120,247,53,244,242,243,91,237,114,241,9,242,200,240,114,243,202,239,211,238,79,237,158,239,75,237,86,239,233,236,87,0,166,255,104,255,29,0,35,1,241,1,133,248,65,240,134,237,162,244,140,233,37,230,165,238,230,233,83,234,195,246,21,255,26,0,61,3,53,3,81,1,91,254,112,253,51,246,206,227,111,244,165,246,92,251,168,255,28,244,3,0,2,228,133,255,106,3,71,1,80,255,169,255,70,240,14,0,89,248,38,243,94,251,255,247,176,247,176,244,211,0,129,4,225,255,239,1,24,255,4,238,172,237,77,238,121,237,59,238,119,237,252,244,146,238,78,244,25,241,92,247,104,238,72,239,223,239,47,241,183,237,74,238,23,237,231,250,222,251,130,251,173,249,109,250,25,248,46,248,147,249,48,248,173,237,187,238,189,238,18,242,84,243,132,242,10,245,161,244,253,250,43,243,130,243,24,243,93,249,241,252,81,253,184,253,12,254,0,255,201,250,202,253,133,245,99,240,110,241,215,241,47,242,231,241,82,241,176,251,67,242,51,243,204,244,228,243,10,243,108,237,249,236,230,236,73,237,243,238,58,238,177,238,179,240,254,241,86,248,106,239,72,243,240,250,92,241,149,245,198,238,163,238,60,238,202,238,212,239,129,241,213,245,246,238,116,244,125,241,0,240,63,240,247,238,233,247,137,248,47,247,239,251,156,249,214,241,44,247,102,250,91,246,93,245,42,255,58,252,241,245,127,245,70,247,84,243,68,245,216,250,83,247,236,249,156,238,67,238,245,237,219,237,98,238,186,238,143,239,141,238,139,238,0,238,93,238,186,238,252,238,238,238,30,239,249,237,139,238,231,237,84,238,173,237,120,238,127,238,236,238,118,239,38,240,34,239,109,238,20,238,125,239,209,238,49,239,79,238,32,239,168,236,112,237,41,238,46,237,87,237,63,236,255,237,233,236,57,237,122,235,182,235,67,237,11,237,50,236,112,236,221,235,60,235,22,236,115,235,121,234,74,235,131,236,175,235,125,235,85,237,19,236,39,239,90,243,26,243,41,242,94,241,81,242,217,242,69,242,54,242,132,241,41,239,12,240,68,239,253,239,152,239,145,239,222,241,36,240,225,239,184,239,205,239,170,238,178,240,95,240,218,240,159,239,152,239,69,240,19,242,22,240,33,241,144,236,190,236,104,238,1,238,4,239,0,238,153,239,225,239,10,239,74,238,58,239,75,239,100,239,133,239,42,241,105,238,152,239,231,238,203,234,170,235,227,234,79,240,237,236,234,234,156,238,128,237,132,239,166,236,175,236,178,235,156,242,108,240,90,241,104,236,57,238,11,243,226,239,56,242,65,240,241,242,234,243,111,242,52,245,139,245,3,245,79,244,224,244,106,244,157,236,12,236,75,236,44,238,35,237,205,237,156,235,167,235,137,235,163,238,66,238,161,238,38,239,45,238,111,250,235,235,120,237,26,240,235,234,17,235,201,235,68,235,169,234,222,234,159,235,66,234,20,235,28,235,241,234,102,235,60,242,226,242,124,241,245,248,35,246,246,255,175,240,29,242,96,241,177,239,112,239,186,239,66,239,130,239,168,236,56,242,202,240,140,240,117,239,177,238,14,251,88,240,234,238,123,239,254,237,101,237,249,238,48,241,165,239,168,240,170,236,98,236,130,237,182,238,240,240,158,238,47,238,23,237,218,238,230,237,162,239,186,243,238,241,74,239,58,238,106,244,158,238,195,241,120,241,145,242,202,242,22,243,109,247,251,240,63,247,46,255,67,253,232,253,111,243,68,242,23,253,56,245,66,248,66,254,70,255,161,1,192,255,23,250,115,255,113,254,102,239,123,239,201,239,170,238,40,238,80,238,186,238,196,238,187,238,0,239,226,238,239,238,104,237,14,238,182,237,159,237,13,240,157,237,192,238,163,238,238,238,97,238,1,237,224,236,215,236,165,236,44,237,110,239,232,237,219,237,136,238,111,238,189,237,27,240,17,238,134,237,59,238,63,236,230,237,139,236,108,239,120,237,179,237,140,237,61,242,180,243,161,241,192,247,216,251,78,237,43,238,222,238,197,238,113,244,120,247,151,249,2,247,24,244,205,239,242,248,87,239,38,248,18,238,113,238,33,238,48,239,186,238,86,238,78,239,198,238,182,239,21,240,18,248,216,239,198,255,215,255,176,246,105,240,40,251,22,244,98,240,51,241,202,242,210,239,8,240,154,240,172,250,154,248,254,251,44,242,85,247,31,240,78,244,103,238,16,239,114,235,201,238,102,239,10,240,135,238,22,238,64,237,214,237,227,237,94,240,153,239,79,239,127,239,242,238,138,254,52,236,74,237,150,239,246,243,157,237,32,242,231,244,69,238,255,238,56,246,171,246,97,240,65,243,133,244,76,241,180,254,160,245,36,245,180,240,28,255,72,240,249,249,193,255,170,245,57,243,47,248,165,243,113,255,191,255,21,255,233,237,55,239,98,239,166,239,84,239,214,238,121,254,77,239,226,239,120,243,143,242,138,240,110,252,131,240,222,240,154,243,76,242,4,239,114,244,72,240,171,239,24,240,173,249,77,245,53,244,113,243,199,241,136,242,116,242,220,241,38,5,50,2,192,3,5,0,70,0,42,0,19,2,18,1,79,0,157,244,33,245,10,245,215,247,192,246,243,245,196,248,144,247,37,254,183,1,40,2,226,1,124,1,14,2,175,2,8,0,241,0,239,255,253,255,232,255,76,0,17,241,74,249,192,239,189,1,6,0,124,245,104,4,57,3,28,3,49,3,232,4,157,3,31,1,56,2,188,0,138,2,54,6,29,6,137,244,131,244,63,243,81,2,73,0,185,0,115,248,227,251,11,0,251,2,246,1,221,1,59,241,66,242,4,241,151,246,124,243,77,243,162,243,222,242,0,0,252,0,255,255,118,1,228,242,230,247,23,245,178,246,212,245,175,243,44,1,0,0,235,0,96,242,110,244,188,246,231,255,216,244,210,242,80,242,61,242,75,242,34,246,203,247,182,244,63,245,46,246,184,1,216,249,8,0,96,1,93,252,181,0,10,248,242,255,192,248,243,244,134,247,189,247,127,245,0,239,227,238,37,239,100,241,145,240,9,245,41,238,3,237,140,241,149,240,79,240,237,239,101,238,10,239,151,239,156,240,111,240,112,238,192,237,128,237,218,236,132,240,143,239,174,242,78,236,193,240,166,237,60,240,8,242,54,240,16,243,16,241,208,241,86,239,53,244,204,241,64,242,61,242,110,240,59,246,176,237,222,252,197,240,201,238,144,239,24,245,21,244,188,242,70,241,123,243,103,240,61,250,245,243,101,244,42,241,34,242,250,240,72,244,210,239,146,242,40,236,146,236,152,236,82,236,41,236,180,234,94,236,88,236,200,237,186,235,162,235,148,234,151,236,190,235,198,235,213,235,108,235,51,236,51,250,208,241,142,239,58,239,199,238,70,239,86,237,249,238,176,237,219,236,44,237,251,238,128,240,19,240,50,240,115,238,204,238,112,237,100,237,92,238,39,239,149,239,235,233,74,238,45,236,243,235,154,236,207,238,110,237,66,237,137,240,90,242,191,241,110,240,135,244,22,2,81,0,29,5,76,4,230,1,251,255,71,247,70,238,208,237,170,242,144,239,68,239,47,239,220,243,242,255,61,2,38,1,147,237,99,235,195,235,107,238,228,238,119,242,95,239,189,236,225,236,17,237,133,239,13,236,19,1,240,2,186,242,169,255,239,237,64,242,26,237,166,236,185,236,40,237,141,254,136,240,185,255,228,253,231,255,171,238,149,238,170,239,116,239,191,238,252,238,43,242,180,242,189,238,189,248,49,240,117,238,140,239,166,238,194,241,41,240,139,244,153,0,71,237,240,240,186,255,133,241,132,238,86,237,117,237,220,236,253,236,26,246,149,239,185,237,167,238,109,238,179,236,101,239,4,237,115,238,8,241,15,239,106,236,219,247,171,236,117,249,244,236,213,237,42,237,216,235,131,236,36,235,111,235,180,235,96,235,143,235,10,236,3,236,198,235,61,236,153,236,144,235,83,236,21,237,170,236,163,235,178,236,226,235,140,236,63,237,20,235,57,237,84,237,121,238,125,238,179,238,87,237,74,238,115,237,2,237,31,237,223,235,60,236,163,236,6,237,182,236,92,239,116,235,127,235,48,236,66,236,225,234,195,235,199,235,48,236,101,236,170,236,115,235,112,237,51,2,58,1,174,5,198,246,57,254,186,252,94,255,81,255,45,255,141,236,28,237,194,236,1,240,87,239,159,237,15,239,131,239,124,241,123,240,66,241,131,238,14,249,73,246,134,253,206,239,9,242,192,241,178,244,93,243,7,249,30,237,115,236,250,235,48,236,98,237,190,237,132,237,154,237,198,236,137,236,155,236,121,236,247,236,179,236,240,236,92,236,107,236,49,236,197,233,51,237,217,235,133,238,144,237,182,237,156,244,43,237,167,243,142,234,83,237,90,238,177,235,229,236,199,234,191,239,87,239,92,237,210,238,208,238,22,239,156,239,130,238,149,241,19,235,42,237,191,235,230,238,8,236,15,236,100,238,33,239,241,239,207,239,171,239,109,242,13,241,143,238,177,236,51,240,64,244,4,240,34,243,139,244,11,240,55,245,100,246,4,244,247,234,133,235,234,235,151,237,253,234,229,236,162,234,231,235,243,238,213,240,215,240,92,238,181,236,105,237,216,237,90,238,217,237,231,237,186,236,254,236,121,237,105,239,147,236,67,238,168,237,20,237,45,237,13,237,145,234,159,236,192,235,185,236,56,237,42,237,231,235,107,236,167,237,111,236,67,237,227,235,42,238,63,238,155,234,59,235,49,234,118,233,87,234,77,244,222,236,240,237,153,237,134,235,201,237,191,235,228,237,149,235,91,236,17,235,149,235,3,233,83,5,75,5,176,3,87,4,35,4,26,5,111,1,182,2,205,1,40,4,153,4,4,4,66,3,224,3,123,3,171,4,193,3,207,3,82,1,13,5,184,5,217,1,182,1,93,1,233,3,191,4,106,4,120,2,62,3,120,2,151,3,26,4,27,4,64,3,239,3,136,3,120,4,241,3,250,3,159,4,209,4,67,4,85,4,156,5,159,5,114,3,50,4,141,3,236,3,95,4,228,3,76,4,75,4,181,4,52,4,28,4,29,4,109,3,192,3,210,3,220,239,182,239,129,238,159,242,45,241,146,241,14,241,40,241,169,246,110,4,64,5,217,0,229,7,14,6,202,6,203,244,124,2,125,246,30,7,75,6,66,5,195,2,171,4,199,1,92,6,153,5,146,6,133,0,161,4,100,2,74,4,185,4,74,5,186,3,32,4,219,4,149,5,238,4,183,4,76,5,102,6,185,5,66,6,119,6,23,6,191,5,73,5,12,6,187,236,101,237,6,236,34,238,62,242,236,234,231,234,176,236,179,235,233,237,170,236,102,237,172,237,98,238,131,237,31,237,17,239,151,238,156,237,144,236,175,236,164,236,171,237,2,240,31,239,109,237,11,240,147,4,232,1,92,249,120,0,149,255,49,0,140,255,70,237,147,235,5,245,25,241,26,236,213,237,223,236,9,239,121,237,167,243,36,3,182,255,66,3,76,3,46,3,137,240,169,247,188,0,1,255,151,0,147,254,30,255,16,5,70,5,174,3,202,3,235,5,80,4,135,2,162,1,213,0,156,3,28,236,199,253,240,240,44,238,221,247,140,3,219,2,14,2,164,1,138,255,132,244,2,246,140,244,45,254,192,0,131,255,170,255,83,255,33,239,215,236,173,237,70,237,138,237,134,239,94,234,123,235,11,241,89,240,128,238,213,234,246,237,172,237,67,236,72,238,107,237,135,236,251,237,156,237,223,236,239,237,233,235,92,235,96,236,91,235,87,237,84,235,230,234,137,239,119,238,1,239,95,239,127,240,192,238,199,236,22,237,173,236,74,235,30,236,12,236,132,236,223,238,149,237,155,238,52,239,22,238,123,236,111,238,223,238,225,236,159,237,42,241,40,239,122,238,44,236,173,235,72,236,254,235,40,237,191,235,193,235,69,241,71,251,62,240,254,241,53,244,130,242,185,238,155,240,77,239,32,236,162,237,143,238,215,235,155,239,138,240,13,240,143,242,177,243,212,240,125,244,54,241,179,238,241,236,99,237,129,234,249,236,233,238,8,234,33,242,179,237,218,6,161,0,32,1,145,0,255,255,11,0,16,0,67,0,65,0,173,255,56,0,111,0,101,243,226,243,105,251,167,244,89,244,67,244,204,252,125,0,120,0,49,0,137,240,90,246,81,250,100,246,142,245,236,242,67,242,163,236,134,236,151,236,56,247,85,236,165,236,73,236,79,236,204,243,163,249,187,252,228,243,143,248,241,246,211,246,55,248,7,247,95,248,6,244,203,247,179,237,247,0,242,0,98,251,17,248,33,250,57,243,54,241,248,239,199,240,111,240,52,243,128,0,89,239,146,237,49,237,53,244,106,238,99,247,74,238,106,238,25,239,85,244,195,239,58,244,207,251,156,248,42,250,194,252,209,248,222,236,241,237,164,237,9,237,163,238,254,242,142,243,157,243,227,241,189,239,230,238,202,237,240,245,124,235,161,236,180,238,20,236,88,238,141,241,215,238,43,239,138,238,2,240,184,239,33,239,47,248,16,237,233,237,18,239,38,244,5,242,0,239,251,237,7,238,108,236,215,243,115,243,91,245,178,245,45,244,163,244,1,246,147,245,96,248,174,247,55,248,35,244,190,244,235,242,51,242,35,244,16,242,202,239,178,244,242,245,19,247,242,247,245,249,83,246,40,249,95,246,229,238,91,240,55,240,48,239,164,235,102,239,26,235,149,242,202,236,247,237,248,239,11,243,136,237,228,235,95,241,235,239,167,245,3,235,126,237,199,234,214,243,250,240,21,240,93,236,199,237,100,235,154,240,221,251,203,243,49,241,185,242,81,247,83,245,216,246,45,249,179,245,202,242,42,252,17,245,139,248,218,245,101,247,133,249,213,246,188,238,168,243,98,246,193,244,31,241,253,240,255,248,1,248,222,246,166,249,211,246,90,244,195,239,205,240,163,237,170,238,3,242,191,241,99,242,170,245,176,246,68,240,15,242,169,234,29,235,114,243,219,235,44,242,29,239,226,236,146,237,196,236,156,237,159,236,12,236,245,236,243,235,174,235,201,236,167,236,34,235,114,235,185,233,12,235,39,241,86,243,88,241,217,241,203,241,249,241,197,240,56,247,218,244,40,241,221,245,111,242,187,247,108,244,121,244,102,245,37,243,22,242,187,247,228,242,94,246,216,241,7,240,155,240,108,239,184,252,53,252,5,245,195,240,98,243,124,241,205,238,9,242,124,246,120,240,213,240,198,238,129,244,180,242,46,249,109,238,168,238,164,248,74,239,6,240,66,239,195,240,113,243,75,244,172,247,14,246,8,245,134,248,70,249,116,245,148,242,230,245,159,241,104,241,98,241,206,241,230,241,53,246,52,247,73,245,187,241,154,237,11,238,75,239,238,238,17,239,111,238,120,238,148,248,196,245,166,246,218,241,38,244,206,242,142,241,187,243,195,240,249,239,202,242,13,239,30,239,180,240,19,240,98,240,56,239,10,240,41,239,75,13,92,12,211,12,85,10,127,11,120,11,147,10,80,11,227,9,60,0,40,4,46,4,5,3,74,4,6,0,246,8,200,6,213,8,248,253,114,253,168,253,194,6,94,254,102,5,226,254,189,253,28,2,238,8,168,6,54,8,163,240,116,241,241,240,16,241,166,241,123,250,227,246,23,247,114,244,141,242,48,247,101,241,47,243,67,253,243,254,129,242,253,242,71,242,170,234,250,234,212,234,144,234,125,234,183,235,24,235,212,235,139,235,250,235,102,235,47,235,110,235,18,235,99,235,43,235,242,235,55,235,106,235,43,235,56,235,51,235,34,235,213,234,16,235,0,235,92,6,189,3,249,3,236,254,107,0,232,1,253,254,163,0,12,253,201,245,241,246,213,253,185,238,138,242,4,239,251,4,64,255,81,254,121,236,3,243,111,236,217,249,164,249,33,240,243,236,21,238,90,237,225,243,63,238,5,243,63,236,188,236,137,235,201,235,195,236,27,236,30,236,208,234,216,234,119,235,64,235,122,235,217,234,84,235,94,248,71,241,35,246,183,236,209,237,238,238,53,239,62,237,122,236,126,235,164,235,210,235,0,236,217,236,121,236,189,235,115,235,110,243,106,237,161,238,227,238,227,237,241,234,99,235,60,235,66,235,211,235,173,236,51,236,234,235,181,11,227,11,246,10,138,12,6,12,19,12,63,11,234,11,82,12,176,14,91,14,242,13,84,14,157,14,27,15,245,12,199,13,30,13,185,11,168,12,65,13,134,12,156,12,100,11,50,14,87,13,215,13,42,13,118,13,1,13,52,13,108,13,234,13,81,11,137,12,122,11,86,14,134,13,177,13,123,10,97,9,15,8,145,12,53,11,159,12,24,8,64,9,6,10,185,14,99,15,62,15,30,14,211,14,176,14,51,15,127,15,35,14,85,11,32,12,184,12,58,10,173,11,139,9,37,14,10,13,167,13,90,12,252,12,141,13,168,13,241,13,86,13,100,14,103,14,112,14,49,14,77,14,164,14,57,11,149,12,145,11,177,13,104,13,43,13,122,13,98,13,246,13,142,14,112,14,42,14,171,15,225,14,132,15,146,15,32,15,215,11,194,13,241,12,116,12,200,13,9,14,162,14,101,14,146,14,90,14,116,14,66,14,213,14,89,237,89,237,168,237,10,238,207,238,223,2,31,255,193,255,79,1,121,0,128,247,168,238,9,247,79,254,124,242,160,243,143,254,113,248,226,247,71,240,116,242,113,239,128,9,140,11,109,10,104,7,7,7,4,10,165,11,169,11,21,12,209,11,147,12,68,12,209,3,151,2,33,8,149,7,116,9,162,7,22,10,199,10,156,10,64,9,65,12,253,8,30,11,91,11,144,9,253,2,61,0,86,0,73,0,73,3,137,1,38,6,191,5,71,8,23,7,23,5,252,5,82,2,145,0,27,6,201,2,104,6,206,5,215,10,184,9,149,6,32,7,68,9,163,8,144,8,221,10,158,11,192,4,85,6,245,5,228,6,161,8,26,11,97,10,135,9,211,244,150,238,9,238,45,239,118,240,80,239,64,237,245,239,37,250,77,240,106,236,43,240,105,237,62,240,50,239,52,238,65,236,146,236,122,236,153,235,71,235,246,235,116,236,49,238,42,237,37,237,2,242,4,240,170,240,223,239,239,240,232,240,154,241,133,240,167,241,135,239,201,238,131,239,17,241,78,238,14,240,86,240,61,240,4,241,134,241,199,254,141,240,77,243,19,242,143,242,22,238,105,240,142,238,11,240,6,239,68,241,22,239,227,237,159,237,207,239,64,238,146,239,133,243,31,236,25,235,237,236,124,235,128,236,87,235,44,237,143,238,95,238,144,238,78,238,165,239,70,241,112,249,162,238,110,237,21,237,236,236,60,237,87,240,80,237,234,237,121,235,24,237,150,238,111,239,19,249,119,243,8,241,60,236,76,236,34,236,167,236,250,236,52,236,47,238,23,237,80,235,93,236,129,241,49,238,183,234,87,224,161,237,225,237,213,238,72,238,161,237,110,238,155,238,12,238,88,238,185,239,173,237,209,240,80,239,94,238,19,239,239,237,163,238,152,246,112,239,208,238,214,238,87,238,51,241,122,238,65,240,212,241,130,239,164,246,209,241,132,234,129,242,199,245,206,244,109,245,72,244,161,245,110,243,213,242,60,242,28,246,21,245,86,243,13,238,131,238,5,238,131,239,26,243,238,241,71,239,75,237,232,239,169,241,104,241,226,240,114,245,30,245,104,242,135,243,218,247,138,245,217,243,35,244,155,243,11,239,179,238,127,238,105,241,45,239,163,238,229,241,58,241,30,241,156,244,1,243,118,242,64,244,217,243,76,246,20,241,242,241,30,242,167,241,200,241,1,244,208,238,104,240,5,240,234,239,34,239,121,242,207,241,214,241,4,242,191,241,7,239,73,239,32,239,252,239,195,239,92,240,102,240,199,239,113,237,92,238,50,245,167,236,199,237,191,235,170,238,112,238,120,239,106,240,134,243,22,243,193,239,76,239,118,237,160,240,162,236,173,241,142,240,124,244,195,240,55,238,227,241,141,249,103,242,212,242,0,237,217,237,169,238,198,237,202,237,22,238,204,236,55,240,71,240,74,239,234,241,242,239,15,241,251,242,88,241,36,240,13,239,182,237,188,239,122,237,24,240,228,237,186,239,45,238,174,238,241,238,163,237,226,238,197,239,96,236,10,238,68,236,4,242,36,240,196,243,202,235,99,236,243,236,202,237,206,235,193,237,22,236,74,234,100,235,215,241,194,245,119,241,12,247,23,242,199,245,50,241,240,237,16,242,159,240,105,239,180,239,176,240,93,242,42,241,179,242,9,240,152,242,59,241,30,245,98,242,113,245,234,236,168,243,69,239,107,238,131,239,80,241,182,242,115,242,93,243,41,247,210,244,155,241,228,241,251,246,32,245,253,239,134,241,141,240,243,244,19,244,235,239,6,243,132,241,93,240,39,240,51,240,172,241,133,248,63,242,194,242,225,240,55,244,73,242,136,242,227,246,25,241,55,242,214,244,49,245,9,243,181,242,24,249,250,242,191,248,92,249,143,249,106,245,85,246,104,245,166,245,167,245,61,247,171,237,4,239,126,238,249,237,45,240,134,239,85,237,154,238,87,238,166,238,108,238,65,238,162,252,173,239,171,242,125,243,151,242,128,241,128,239,87,245,217,238,249,246,233,245,69,247,69,245,66,243,171,240,2,242,90,240,132,241,141,243,200,242,0,240,175,240,195,240,230,240,141,240,193,241,186,240,157,240,29,236,42,236,9,236,25,237,133,239,223,236,24,236,139,235,250,235,52,238,158,237,67,239,112,237,152,237,217,237,95,237,91,237,37,237,4,237,169,236,133,237,134,236,125,236,108,236,107,237,32,237,96,237,145,237,16,237,191,236,72,1,234,254,89,0,23,254,57,254,87,254,176,253,155,253,103,253,108,254,111,254,45,255,129,240,51,242,241,241,180,253,36,254,98,254,238,238,110,239,153,238,120,245,74,241,110,241,41,239,204,239,152,240,189,253,77,244,106,249,122,240,145,241,36,241,159,246,128,241,92,244,110,254,78,242,245,242,179,238,128,239,210,238,63,240,111,239,208,239,126,241,166,240,157,239,145,254,149,254,203,253,43,248,64,254,4,254,180,241,152,244,203,241,41,241,226,240,219,242,135,238,60,239,199,238,35,238,203,238,204,241,145,240,149,241,93,243,251,239,28,238,189,238,136,237,228,238,176,240,21,240,172,240,129,239,81,10,46,10,163,10,153,7,209,8,149,8,147,8,79,9,109,6,212,2,16,5,118,5,60,5,10,3,154,1,85,7,218,5,200,6,137,6,208,4,156,4,226,4,63,5,246,7,30,1,153,3,170,1,98,6,197,3,170,5,9,242,8,245,25,243,183,254,235,251,205,249,63,253,250,253,100,253,52,0,126,253,224,253,252,254,152,254,55,0,37,254,33,254,159,254,134,0,114,0,98,0,111,252,79,0,8,4,166,2,85,0,254,255,173,254,101,254,164,253,219,3,201,4,45,5,70,3,42,4,80,5,111,2,152,3,24,1,78,4,68,5,39,7,118,0,208,1,127,0,201,7,49,5,212,8,55,0,67,0,61,0,85,2,196,2,151,4,65,0,81,0,85,0,133,0,56,1,127,0,115,0,45,0,163,2,123,0,129,0,56,0,63,0,55,0,55,0,64,0,96,1,121,0,92,1,138,0,118,0,81,0,64,0,110,0,90,236,104,243,228,241,101,241,15,242,243,248,170,241,96,244,118,241,57,245,19,243,83,242,237,244,173,243,218,250,32,243,251,244,70,243,17,239,217,246,209,237,239,242,140,244,70,247,78,252,52,242,184,245,104,245,10,247,230,245,156,240,123,241,124,242,225,252,131,255,168,253,179,241,68,245,189,242,47,240,46,242,252,242,237,242,23,243,154,244,153,251,37,247,171,248,107,243,162,247,0,245,236,240,218,241,37,243,24,255,171,250,142,245,16,245,155,243,28,251,57,239,53,239,215,240,119,238,195,238,59,238,233,239,96,239,62,239,93,239,214,237,64,237,235,237,71,237,168,237,139,237,81,237,218,237,120,240,147,239,117,239,89,239,127,239,169,239,7,238,210,238,16,238,84,238,44,238,210,238,101,240,60,254,97,248,25,244,70,241,190,238,168,237,206,237,206,238,165,247,100,236,27,251,66,240,188,237,16,238,29,248,122,237,125,242,8,1,90,3,201,3,255,255,116,253,0,0,207,4,49,0,114,5,203,7,61,7,9,5,87,4,92,255,192,255,13,0,96,4,235,0,133,2,36,0,46,0,56,254,179,241,58,241,187,240,234,243,151,249,232,241,56,242,224,243,234,241,29,243,203,240,245,240,111,254,18,254,45,254,105,254,170,252,63,254,162,247,237,242,125,245,46,248,32,248,94,253,61,1,121,248,85,255,123,0,118,3,68,254,50,0,36,0,244,1,150,254,13,247,159,243,168,254,74,251,153,252,208,253,132,254,54,1,25,254,249,1,158,253,51,252,109,254,13,0,213,4,150,243,253,253,161,248,217,244,180,247,217,4,137,5,22,7,38,0,0,0,99,253,197,253,88,255,128,234,251,238,11,235,188,234,204,234,163,235,225,235,45,235,137,235,82,235,20,237,191,237,118,235,189,235,212,234,190,235,178,235,112,235,60,235,208,234,174,235,229,234,13,238,95,236,109,235,101,235,241,234,110,235,177,236,251,238,16,235,14,237,5,236,86,235,224,235,57,235,174,236,10,235,36,234,207,234,33,236,3,234,98,236,131,235,193,235,74,235,15,236,137,235,41,0,165,3,162,242,232,247,112,252,238,247,103,243,4,236,99,236,42,237,160,236,124,236,127,237,65,239,108,243,28,239,158,243,54,241,107,238,175,240,217,236,59,238,228,237,238,239,62,238,156,239,235,235,96,237,54,237,174,235,62,235,21,238,235,236,24,236,23,236,146,236,233,235,205,235,211,235,13,236,130,236,68,235,33,236,3,235,123,243,141,241,190,242,196,247,233,242,135,238,97,239,180,244,252,248,221,239,199,244,230,244,113,239,22,240,28,227,130,239,137,238,238,240,97,229,67,243,150,248,206,246,27,240,117,238,78,237,253,237,150,238,0,238,199,237,86,236,25,237,144,236,172,236,139,236,129,236,83,237,239,236,22,237,7,237,165,236,102,237,1,237,168,236,202,236,203,236,59,237,4,237,122,237,143,237,199,238,190,238,73,238,140,235,223,235,49,236,148,241,51,241,158,236,131,237,89,240,121,241,46,241,83,236,12,236,69,236,153,235,11,236,218,235,105,235,98,235,206,235,148,234,113,236,214,237,18,238,96,236,86,238,140,239,123,238,105,236,80,237,107,236,114,236,139,236,79,239,11,246,46,246,193,240,51,237,93,236,95,236,128,236,75,10,163,10,142,10,186,9,116,9,135,11,123,10,165,9,252,9,150,9,112,10,113,10,108,6,183,4,197,8,121,7,214,7,150,7,190,8,66,10,190,9,208,9,162,8,178,11,131,13,49,13,36,12,97,13,51,14,128,11,95,12,165,11,150,12,133,12,182,11,30,13,27,13,142,13,24,13,156,12,20,14,143,13,19,12,218,12,189,12,201,13,72,13,226,13,57,245,110,240,60,254,38,254,44,255,41,0,54,0,180,4,132,3,190,6,39,5,157,5,76,3,2,5,253,10,244,9,153,10,216,2,127,8,186,2,111,8,207,8,189,7,253,4,167,6,235,1,94,11,36,11,88,11,38,10,49,9,126,10,209,8,123,9,148,10,173,10,111,5,210,7,37,7,111,6,106,7,233,9,226,8,249,8,14,235,36,235,84,235,35,235,254,234,153,236,82,236,102,236,119,236,93,238,217,235,131,235,160,238,105,239,75,237,147,240,42,243,117,241,120,244,153,235,186,236,33,235,35,240,3,0,107,240,45,239,139,238,153,9,102,7,3,1,224,4,133,0,235,3,70,0,15,237,205,236,17,237,74,237,137,241,41,239,178,246,212,254,46,249,227,238,91,4,60,0,90,2,228,6,159,10,13,241,17,246,49,0,98,251,16,246,226,245,165,255,215,11,240,9,89,12,70,12,96,4,88,10,62,4,250,1,156,2,69,7,182,236,138,248,1,239,136,237,213,237,207,5,62,0,207,2,176,0,1,0,241,239,89,238,52,240,50,241,173,246,47,245,88,245,41,239,176,238,81,238,226,239,74,239,235,238,162,238,146,238,79,254,13,245,114,246,177,244,225,245,246,242,39,240,160,237,254,237,207,238,140,238,136,238,165,238,185,238,28,239,29,240,189,239,216,240,80,239,197,13,28,13,90,11,101,12,78,12,31,12,89,11,198,5,152,8,24,8,151,7,109,8,62,6,130,10,163,9,28,10,21,6,62,255,2,10,65,8,235,4,240,6,53,8,32,10,58,9,185,10,240,238,65,239,54,239,39,239,217,238,123,238,88,241,136,239,52,241,70,239,253,238,180,238,177,241,127,239,208,240,81,239,57,239,199,239,236,3,83,254,86,252,249,244,70,248,40,249,187,244,171,245,177,242,219,239,253,240,108,241,60,253,64,0,35,0,241,255,59,254,28,2,7,250,64,253,248,3,169,3,105,239,139,251,100,240,210,240,0,241,217,254,168,250,42,255,195,11,233,11,94,11,201,11,92,11,29,12,30,12,252,8,142,9,158,8,39,11,130,10,188,10,17,10,67,10,213,10,39,13,165,13,106,12,214,12,253,11,119,12,237,11,124,11,141,11,251,11,20,9,148,9,11,9,189,10,45,10,136,10,162,9,235,9,235,9,135,12,102,12,173,12,3,11,195,11,187,11,172,11,182,11,76,11,150,8,77,9,209,8,219,9,165,9,162,9,53,10,201,9,83,10,204,10,151,10,82,10,130,14,48,14,187,14,164,14,148,13,54,14,210,13,38,14,86,14,168,13,23,14,76,13,174,14,206,14,109,12,200,12,164,12,131,13,14,13,193,12,244,12,49,13,128,13,107,14,226,13,197,13,132,9,23,11,80,10,80,10,254,10,99,12,159,12,126,12,18,12,181,11,52,13,235,11,142,12,26,13,220,12,125,11,51,12,197,11,26,243,245,246,197,240,23,243,163,244,183,244,60,245,154,242,48,243,55,238,104,240,197,238,200,238,87,240,133,238,201,241,79,239,236,241,254,239,201,240,47,240,108,242,122,241,36,242,147,239,212,239,157,239,131,242,26,241,144,241,33,239,228,238,177,238,115,239,86,239,178,239,67,238,135,238,1,238,145,253,7,250,118,253,194,238,53,240,250,238,92,241,142,240,144,239,182,238,30,238,68,238,10,238,192,237,178,237,141,238,70,238,96,238,13,239,120,238,148,238,58,7,252,6,65,8,241,2,218,4,34,2,19,9,14,7,176,7,7,241,150,242,165,241,248,250,187,244,221,242,242,254,181,247,0,0,245,5,148,4,0,0,209,7,239,6,74,9,173,251,53,1,85,255,34,2,136,255,38,5,156,238,129,239,205,238,116,238,61,239,13,255,67,242,239,244,70,242,252,239,68,240,41,239,30,240,218,240,169,240,131,239,53,241,190,239,174,13,171,12,64,13,233,12,239,11,86,12,41,12,70,11,218,11,81,11,27,12,70,12,52,9,6,7,66,11,69,10,155,9,45,10,165,10,194,11,12,11,79,11,9,9,26,10,79,9,234,9,171,10,17,5,193,7,164,10,90,9,179,9,194,9,184,9,119,12,141,12,179,11,35,12,244,11,74,12,214,11,83,10,82,11,53,11,142,239,160,242,43,240,60,240,73,241,232,2,194,0,187,253,144,254,30,2,74,253,22,246,66,253,51,252,74,243,89,245,167,2,203,255,130,254,249,243,115,245,75,243,53,12,14,11,175,11,104,11,150,10,146,5,219,6,244,6,143,8,35,10,2,6,131,9,8,8,255,5,39,6,227,9,88,8,147,9,131,236,130,237,142,237,129,236,91,237,43,237,252,236,138,236,117,235,63,237,85,236,195,235,118,236,231,236,128,235,69,236,116,237,35,236,151,237,173,237,202,236,17,237,107,236,213,236,58,236,38,237,224,236,237,235,3,237,248,235,205,236,163,236,172,235,173,235,9,236,139,237,2,237,144,237,14,236,108,236,172,236,178,236,29,236,142,235,36,237,11,237,232,235,228,235,232,235,224,235,245,235,196,235,230,235,198,235,196,235,213,235,109,254,201,3,203,244,202,254,15,0,217,254,187,251,118,237,49,238,105,238,129,238,185,237,205,238,200,240,106,239,88,239,12,238,185,240,96,240,122,241,203,237,191,238,81,238,69,239,51,238,166,239,12,236,28,236,12,236,125,236,57,236,138,237,65,237,18,237,40,237,164,236,110,237,137,236,232,236,104,237,108,237,174,236,25,237,193,236,47,242,10,244,227,241,17,245,205,244,113,245,187,242,204,245,141,243,183,241,255,241,248,241,16,242,68,242,15,241,150,244,203,242,206,243,20,243,49,241,121,241,164,241,26,242,180,243,238,240,136,241,87,242,41,243,184,242,75,243,61,239,34,239,73,239,7,239,220,238,2,239,89,239,253,238,192,239,245,237,182,237,22,238,109,240,4,240,210,239,142,238,233,238,195,238,122,239,213,239,202,240,50,241,172,239,169,240,21,241,163,241,148,240,141,239,234,239,42,239,97,238,156,237,27,238,100,238,145,238,21,239,137,235,201,235,205,237,34,242,67,241,173,242,76,238,205,239,220,238,151,241,27,239,230,239,125,237,127,237,187,237,136,237,63,237,174,236,50,237,19,237,103,236,137,239,12,238,100,238,1,241,134,239,141,241,18,240,236,239,122,238,175,240,8,237,90,238,147,238,113,240,253,241,62,240,178,239,107,238,92,238,253,237,142,239,80,11,116,11,60,10,48,10,17,7,242,9,108,10,207,7,179,7,15,5,28,7,110,5,49,8,129,8,49,1,153,1,99,1,145,1,143,1,148,0,246,2,202,1,233,2,71,9,81,4,102,4,113,3,225,2,148,3,247,2,60,0,132,4,245,5,138,6,0,5,109,4,140,5,6,5,8,6,216,0,38,4,205,3,165,8,81,8,127,6,153,7,166,7,235,7,213,6,13,5,124,5,214,5,176,239,71,240,162,239,156,1,225,247,226,249,31,243,56,242,118,253,66,1,136,2,86,0,147,5,44,3,181,3,69,1,181,3,24,2,105,2,130,7,179,7,84,2,210,4,138,255,100,7,175,8,176,7,44,6,64,7,31,5,96,8,211,6,124,7,7,7,233,4,228,7,43,6,15,7,237,6,253,6,213,1,181,3,237,2,83,3,234,4,63,6,158,5,76,5,116,237,78,236,188,236,92,236,95,236,48,238,180,237,202,237,185,237,198,238,224,236,116,236,77,237,225,238,135,236,254,236,183,238,121,237,154,237,180,236,191,236,125,236,63,239,162,241,189,239,88,239,57,239,52,0,52,0,249,242,17,246,69,244,4,254,159,245,17,239,46,239,164,238,48,239,157,241,90,241,173,240,74,241,213,240,69,239,44,2,239,255,44,0,104,1,111,254,72,240,165,240,68,254,101,245,12,244,40,241,229,253,61,0,74,0,0,0,49,2,28,254,242,252,42,254,211,253,95,253,66,253,81,239,190,242,24,241,243,239,79,238,72,254,89,247,189,252,20,247,65,245,44,239,207,239,43,240,85,241,80,243,146,242,25,245,159,248,83,244,182,243,39,252,22,247,184,243,125,245,3,229,239,241,54,229,7,1,0,255,107,0,3,250,122,250,185,255,94,251,239,245,148,246,149,234,148,235,28,237,115,232,172,234,39,234,20,242,5,241,22,241,196,245,91,245,73,235,255,0,139,255,106,251,128,0,225,2,202,255,73,252,119,255,230,255,52,254,253,253,9,250,156,245,198,254,4,246,40,253,158,254,231,253,109,255,225,255,79,1,59,2,191,255,119,254,209,0,146,255,10,1,150,254,172,251,207,5,83,237,110,240,22,236,238,243,130,247,236,238,113,238,237,245,214,247,29,236,145,236,6,236,143,243,183,240,10,239,50,238,7,238,181,239,95,250,218,254,192,254,122,252,123,255,31,249,74,247,170,253,8,245,142,245,186,244,210,249,237,2,30,248,133,0,255,0,55,245,201,253,249,245,181,245,97,246,12,244,209,239,80,242,194,240,164,240,54,242,203,243,24,245,203,242,60,241,35,240,201,239,46,239,15,240,214,240,182,241,170,239,212,239,133,235,33,241,177,241,142,237,197,238,13,240,215,240,102,240,61,240,189,239,24,239,199,237,0,239,14,239,86,239,57,242,212,238,236,237,151,240,202,239,161,239,211,236,50,236,197,235,220,235,40,236,224,235,41,235,75,235,157,234,192,253,157,253,27,253,41,251,207,252,163,253,36,236,54,241,71,235,235,235,85,235,61,239,128,234,209,234,250,235,76,251,146,238,202,243,159,234,215,235,240,234,49,239,35,1,195,3,247,236,167,249,229,238,224,255,165,255,154,255,233,238,28,239,125,237,208,242,241,239,122,249,12,238,21,243,92,239,21,254,152,253,228,253,126,253,48,253,202,251,85,254,217,253,102,255,117,249,42,246,101,255,161,236,153,251,106,247,58,237,191,239,25,255,145,253,127,253,215,254,77,252,245,240,51,243,157,251,254,242,220,244,183,251,220,238,61,238,53,239,111,237,78,241,44,238,158,237,72,239,141,242,0,241,138,241,16,236,136,236,198,235,129,239,73,239,18,238,131,238,118,237,130,236,159,239,165,239,82,239,157,240,249,239,130,240,25,239,53,239,8,238,97,239,201,239,241,240,125,235,166,234,192,234,71,235,198,234,219,234,20,235,218,234,121,236,75,236,215,235,153,235,148,235,164,235,152,235,148,235,150,235,103,235,245,234,117,237,236,235,110,237,118,237,47,236,65,236,57,236,114,235,36,236,159,235,175,236,212,237,116,236,95,236,94,238,216,236,7,236,0,236,94,235,55,236,178,238,109,237,251,237,186,236,99,237,233,237,142,237,130,237,182,237,107,235,244,234,102,235,158,235,167,235,3,235,255,235,134,235,180,236,167,236,34,237,151,236,70,238,198,236,46,237,22,237,64,238,23,236,236,236,48,235,103,235,166,235,248,236,108,236,174,239,241,236,240,236,18,238,7,236,218,236,166,4,171,251,202,1,249,255,75,250,194,253,19,254,92,251,76,253,132,252,72,253,166,250,31,246,46,246,229,250,126,250,75,251,247,247,96,250,121,250,178,250,164,249,0,237,92,235,178,235,134,235,0,236,226,234,151,234,243,235,177,234,192,236,138,234,178,234,10,239,11,253,46,236,139,236,165,236,174,236,153,236,250,234,251,235,198,235,100,235,140,237,37,236,119,235,152,235,48,245,170,239,206,235,30,238,253,237,34,240,216,237,205,234,203,234,3,236,20,235,33,236,59,235,176,235,45,237,103,235,226,235,31,250,41,238,44,241,119,250,79,251,60,237,189,237,115,250,83,241,125,238,107,242,8,253,252,251,97,246,129,237,13,242,52,246,189,253,48,12,229,8,78,10,191,11,95,10,64,0,78,0,70,0,66,0,55,0,114,0,101,0,73,6,152,6,141,9,183,8,52,0,81,6,56,0,50,9,61,0,214,10,3,240,242,239,64,241,173,240,88,240,62,240,243,244,240,253,122,249,166,247,97,254,206,253,37,254,7,242,197,245,163,241,84,0,89,0,166,251,246,1,45,0,58,0,171,253,167,242,34,254,14,250,69,9,160,8,15,9,248,8,153,8,51,8,46,6,3,5,78,8,109,6,34,5,70,0,202,8,110,9,65,254,248,253,71,254,29,254,98,254,157,253,18,253,95,253,185,253,65,8,148,3,154,5,70,0,53,0,64,0,51,0,51,0,184,254,47,0,128,253,145,253,206,254,63,0,54,0,51,0,48,0,54,0,50,0,50,0,51,0,199,241,157,242,79,242,28,242,85,244,48,239,223,240,177,241,101,241,36,241,200,240,95,241,89,243,10,243,120,245,115,244,233,244,26,245,225,243,102,242,37,243,212,243,0,239,187,237,23,242,11,240,220,241,169,235,171,236,6,245,147,245,242,244,164,242,71,245,36,245,70,242,39,244,234,241,168,237,230,238,115,237,134,239,132,240,50,239,106,238,115,242,109,241,201,238,4,239,65,239,209,238,216,238,23,240,33,239,55,239,236,242,138,240,128,238,163,241,40,242,144,239,17,240,72,242,91,241,11,243,246,239,129,240,246,241,15,242,138,241,135,241,247,240,202,241,129,239,215,238,84,241,180,240,99,241,193,241,27,244,106,242,188,242,114,245,221,244,173,243,21,244,67,246,227,243,182,243,19,244,91,245,220,244,84,241,235,243,224,242,186,242,51,242,207,241,42,242,247,244,193,246,243,242,22,245,87,245,209,239,223,239,87,241,233,240,146,245,185,238,234,243,241,244,253,242,2,242,144,7,231,5,215,255,73,4,90,5,35,3,148,254,22,244,90,247,219,245,109,244,4,245,221,243,225,246,177,245,127,248,196,242,182,241,119,252,227,247,48,243,136,243,51,244,43,254,146,246,171,252,51,237,161,238,23,236,78,236,83,237,215,236,219,237,64,235,218,236,188,237,22,238,24,244,15,236,42,236,142,244,151,243,37,243,7,241,175,247,24,240,58,247,132,247,202,242,15,237,46,239,232,237,43,243,249,245,133,244,68,243,92,245,61,243,125,247,164,244,150,244,17,245,48,241,251,244,219,241,82,242,234,244,139,246,27,246,145,246,37,239,15,240,12,239,56,239,186,239,105,242,141,242,32,240,124,240,155,239,210,240,170,242,223,243,111,253,228,239,101,240,250,241,47,241,41,240,5,240,45,240,178,239,46,239,70,240,210,239,173,240,71,238,202,243,199,242,70,244,218,244,41,241,0,246,210,239,253,245,218,243,63,243,82,244,196,242,195,244,11,243,55,243,112,244,137,242,44,8,161,6,239,8,253,7,111,2,107,254,235,254,253,253,20,254,126,247,172,254,3,10,192,249,115,245,110,251,53,246,73,244,36,245,246,245,31,6,209,1,126,0,17,242,146,241,178,240,163,239,152,240,196,242,53,242,1,248,79,242,20,242,196,249,245,240,87,251,91,247,12,244,109,246,208,241,240,242,162,240,99,239,72,239,16,240,143,239,220,239,18,239,9,239,175,239,199,240,216,239,172,239,64,239,104,239,115,240,136,240,41,241,35,240,244,240,219,238,22,242,71,240,216,244,241,240,171,239,223,238,232,237,147,238,62,238,181,238,176,238,254,237,31,238,167,241,209,241,65,241,179,239,54,241,143,241,3,239,68,239,27,238,80,239,82,238,131,238,123,238,211,238,234,238,79,239,165,238,244,238,21,238,21,242,189,242,248,241,228,243,204,243,139,244,242,242,158,243,62,244,196,241,107,242,40,242,147,240,36,242,152,242,82,243,187,242,80,243,91,243,91,242,115,242,226,242,193,243,168,242,188,241,157,241,98,242,225,242,81,243,216,243,128,238,123,240,100,239,144,239,212,240,179,241,242,240,155,241,152,241,103,240,191,241,49,240,201,241,36,242,114,240,17,240,157,240,219,240,133,240,109,245,46,244,203,244,132,244,179,245,136,244,150,244,209,244,70,244,234,242,173,243,2,242,100,242,215,244,130,245,251,238,227,240,85,240,231,240,18,241,234,240,78,241,58,243,216,242,179,243,121,239,196,239,85,238,124,240,65,240,107,238,10,238,251,237,70,239,18,239,59,239,70,239,96,242,126,242,144,242,14,241,170,241,74,240,39,242,22,242,34,243,27,240,105,240,176,239,191,242,224,241,217,241,218,240,212,240,149,239,103,238,55,238,181,237,18,238,169,237,196,237,137,237,237,238,230,237,117,238,47,238,50,239,200,237,199,237,56,239,213,237,148,238,175,237,203,237,111,238,127,239,167,237,221,238,73,238,173,237,179,237,208,243,112,242,81,243,188,242,110,242,193,240,221,239,87,240,144,241,51,243,21,240,121,243,206,239,86,239,218,239,193,241,126,240,66,242,47,235,38,236,252,235,213,245,72,237,104,237,66,239,239,237,182,241,156,235,255,237,148,233,57,234,207,237,30,234,69,235,200,234,143,245,170,238,55,235,194,235,107,249,184,246,212,255,127,235,91,235,209,233,3,247,134,235,10,245,189,241,182,240,64,242,101,240,120,240,62,240,29,241,11,240,88,239,60,239,48,239,199,239,22,239,103,239,162,238,123,240,120,240,130,239,112,237,59,238,106,238,2,239,118,238,108,238,37,238,156,238,98,238,186,239,74,239,234,239,235,237,201,237,11,238,81,238,116,237,253,236,61,238,182,237,129,237,225,234,178,235,120,236,200,237,185,236,170,236,8,236,239,235,103,236,128,239,184,238,21,239,129,238,195,239,118,238,52,238,155,238,136,238,232,236,188,236,39,238,99,239,177,238,14,238,22,238,59,238,213,238,233,237,138,238,167,238,131,238,19,238,217,238,15,237,34,237,46,237,205,238,169,237,146,238,216,237,249,237,189,238,72,238,118,238,225,240,229,239,60,240,82,240,79,241,170,239,86,239,175,241,50,242,97,238,120,240,127,242,174,240,35,239,255,238,209,239,48,239,5,238,238,239,174,237,118,238,8,238,173,239,138,239,187,239,165,240,40,241,188,239,191,239,99,241,63,240,187,239,43,239,202,241,143,239,221,240,73,239,197,238,105,237,214,240,145,241,162,241,149,240,118,241,160,240,220,242,63,241,170,243,221,242,180,243,25,244,81,240,22,240,201,240,122,240,96,240,179,239,231,240,196,243,93,241,176,242,155,240,124,241,128,241,4,242,254,241,122,240,151,241,225,240,148,240,30,241,184,242,243,240,243,242,12,243,223,241,165,238,93,241,30,242,64,244,232,242,114,240,174,240,104,239,8,244,251,244,201,248,157,252,245,244,59,247,129,249,119,248,139,240,167,248,78,242,57,0,160,251,144,247,88,253,12,0,111,255,226,247,110,240,177,241,84,242,94,250,205,243,38,246,172,242,18,243,254,247,53,242,137,242,91,242,34,244,189,243,70,244,119,249,189,251,93,255,128,247,76,243,80,243,160,246,92,246,79,246,92,250,114,244,57,242,168,239,187,242,60,248,138,246,246,244,29,243,213,247,245,243,137,252,57,252,33,241,38,251,149,252,26,250,233,250,251,251,100,250,66,248,149,252,214,252,75,252,43,251,173,249,141,250,88,249,67,247,89,246,68,251,90,251,182,253,39,254,178,253,125,244,159,240,173,241,54,242,196,244,23,245,184,248,109,248,162,249,80,248,150,249,144,254,12,251,10,249,228,248,114,248,252,246,95,248,221,255,209,255,160,251,196,0,243,255,137,1,123,254,245,255,254,255,143,1,16,2,133,2,145,0,183,0,38,1,201,0,86,1,104,0,66,245,149,254,28,248,223,255,107,255,156,254,128,254,234,254,234,255,6,0,228,255,190,255,141,3,42,3,88,1,220,0,230,3,115,255,69,1,151,2,123,1,166,237,48,238,113,239,95,4,170,255,42,0,47,237,89,253,32,0,204,0,174,0,93,1,124,1,168,0,135,0,108,1,9,1,134,2,169,2,110,3,144,1,106,251,91,250,226,250,38,251,0,249,58,249,224,247,92,249,103,243,75,252,157,247,107,248,2,238,62,246,11,238,35,246,67,246,236,245,223,242,196,238,61,238,140,242,136,243,213,244,69,237,88,239,23,238,51,244,223,242,52,242,36,1,101,2,101,1,103,1,104,1,152,237,82,237,76,238,20,245,23,1,241,241,242,255,208,241,206,239,197,239,10,0,208,244,25,0,91,238,60,241,47,239,78,240,129,238,214,240,68,241,135,238,162,237,103,237,39,237,252,236,88,238,186,238,150,241,245,244,186,239,141,245,161,249,76,247,43,237,182,239,197,237,247,238,135,239,217,246,249,238,152,237,105,237,193,237,49,242,29,237,228,237,190,238,119,237,11,237,100,235,249,237,8,238,226,236,164,236,172,236,101,236,190,237,19,237,128,236,216,237,53,236,40,236,132,235,189,236,233,236,241,2,79,0,63,4,78,244,17,246,209,255,50,238,98,239,66,237,49,244,52,244,30,243,254,237,201,239,17,239,221,0,7,242,250,239,113,238,105,238,15,238,40,237,169,243,22,238,6,238,151,237,0,237,149,238,152,237,207,237,65,238,179,235,170,237,66,237,229,238,85,238,153,237,106,238,178,237,50,237,191,240,139,239,186,237,204,238,232,237,180,236,210,236,92,238,81,250,171,249,197,249,82,250,46,251,5,243,122,241,87,250,57,248,92,240,86,246,28,247,23,252,42,251,32,251,172,250,193,250,199,252,121,250,10,251,183,250,20,251,133,255,6,237,132,237,124,241,17,237,157,237,74,237,82,237,170,238,50,238,109,238,54,238,223,236,13,237,57,236,7,237,86,237,209,236,138,238,93,237,46,237,190,236,221,238,47,245,69,238,223,239,82,237,211,249,34,249,117,237,169,246,45,245,151,250,195,247,220,236,243,236,65,237,162,236,225,237,180,236,60,237,62,243,228,236,246,237,113,243,184,237,145,237,174,244,38,244,231,235,205,236,107,236,75,237,236,237,137,250,56,247,189,246,197,243,202,238,123,236,71,236,141,237,246,255,14,0,228,252,249,3,45,0,208,255,217,255,168,255,178,238,123,250,228,247,160,252,9,0,35,247,105,248,36,1,134,249,184,253,95,248,96,245,122,241,178,235,104,236,119,239,57,245,213,236,55,252,113,0,192,255,151,242,89,233,192,233,178,233,184,247,32,235,250,245,137,234,91,234,191,236,11,255,157,255,176,255,56,252,10,252,5,0,47,254,40,253,33,248,158,3,86,252,175,248,162,237,178,250,153,240,196,244,188,255,214,251,194,241,8,249,25,239,107,255,14,255,136,255,255,255,37,254,99,251,179,255,119,255,30,255,231,242,26,237,193,238,233,251,136,248,199,255,121,229,193,255,85,249,164,255,169,255,159,255,163,255,109,255,205,255,248,246,29,255,80,245,222,251,183,249,116,253,41,237,82,243,115,252,92,249,113,241,20,253,118,4,162,249,224,255,21,253,56,240,139,240,10,241,148,238,110,0,109,244,212,2,168,240,77,236,54,244,185,233,21,1,217,255,214,255,242,251,239,253,169,255,2,2,25,2,229,1,106,1,237,1,250,1,101,1,194,1,106,1,206,255,106,0,148,0,0,0,31,0,164,255,88,1,160,0,72,1,252,0,36,1,143,0,255,1,109,2,170,2,139,1,21,2,171,1,217,1,7,2,239,1,58,1,54,1,67,1,123,1,84,1,112,1,92,1,96,1,132,1,28,2,45,2,2,2,189,1,226,1,177,1,35,2,203,1,156,1,146,1,164,1,226,1,224,234,112,237,94,233,125,252,84,247,118,250,213,253,241,248,250,254,41,0,248,255,195,255,44,0,83,0,91,1,53,251,217,255,142,255,138,0,64,0,196,0,145,255,215,255,186,255,197,0,104,0,65,0,132,255,215,255,160,255,45,2,37,2,67,2,83,2,248,1,255,0,157,1,174,1,193,1,1,2,192,0,231,1,165,1,58,2,202,2,85,2,171,2,223,1,180,250,231,255,195,255,92,2,44,4,226,255,240,1,60,2,54,2,235,255,15,0,47,0,33,0,19,0,232,255,107,0,77,0,171,0,162,1,131,0,203,1,95,1,144,0,216,0,49,0,66,0,26,0,211,0,124,0,244,0,192,255,198,255,172,255,49,0,254,255,77,0,204,255,214,255,219,255,3,1,190,0,217,0,232,255,56,0,75,0,10,1,115,0,74,0,188,255,188,255,174,255,200,255,194,255,168,255,201,255,194,255,211,255,89,0,10,0,237,255,253,1,248,2,156,2,140,2,122,2,33,2,142,2,49,2,85,2,225,0,17,1,198,0,7,1,254,0,246,0,48,1,17,1,229,1,224,0,232,0,197,0,171,1,38,1,89,1,227,0,70,1,27,1,235,1,197,1,209,1,203,255,233,255,213,255,222,255,245,255,239,0,231,0,217,0,190,0,53,0,45,1,35,0,2,1,249,0,4,1,205,0,235,0,64,0,180,237,63,254,205,249,156,248,75,252,191,0,219,0,251,255,64,0,36,0,238,255,166,255,176,255,190,255,180,254,241,254,110,0,184,255,210,255,195,255,218,255,201,255,38,2,216,1,239,1,161,1,140,1,194,0,20,1,253,1,171,1,126,1,44,1,130,1,60,1,218,0,168,1,93,1,95,1,65,1,109,1,101,1,116,1,93,1,194,255,44,0,237,255,24,0,23,0,172,255,152,255,240,255,171,255,214,255,173,255,223,255,200,0,175,0,90,1,171,0,17,0,32,1,8,1,3,0,49,0,21,0,124,0,117,1,175,0,184,0,113,1,210,0,79,0,145,0,150,1,222,0,249,255,86,1,78,1,249,0,100,0,237,1,59,1,16,2,49,239,14,238,205,238,179,242,217,241,21,244,72,249,65,239,45,242,27,238,67,247,85,240,221,243,166,242,251,241,214,240,39,239,79,241,21,240,105,241,16,239,101,240,230,2,75,1,184,255,98,0,133,0,217,255,189,255,98,236,56,236,183,235,21,241,163,236,197,236,244,254,247,240,141,255,200,0,69,247,64,0,47,2,184,239,151,0,165,243,200,255,165,255,219,255,242,236,169,235,99,238,229,237,8,236,118,236,198,236,42,242,241,239,110,238,55,239,120,239,43,240,175,238,101,236,143,236,222,235,112,236,66,236,251,235,251,237,109,237,153,237,89,238,28,238,156,237,124,243,86,237,247,237,87,237,70,238,172,236,184,238,71,238,84,238,153,237,82,241,56,239,73,240,24,240,207,239,253,237,126,237,23,239,14,0,53,2,84,1,21,1,208,0,188,0,238,0,194,0,246,0,252,0,228,0,27,1,15,2,204,1,107,1,145,1,87,1,109,1,1,1,34,1,229,0,62,1,111,2,235,1,197,0,141,1,58,1,133,1,5,1,128,0,246,255,104,0,14,0,6,0,61,0,116,0,1,0,129,0,151,0,150,0,218,0,158,0,94,0,79,0,40,0,98,0,65,0,140,0,222,0,225,0,191,0,187,0,82,0,141,0,93,0,243,0,149,0,138,0,139,0,150,0,122,0,149,0,97,0,127,0,33,0,76,0,162,0,55,0,131,0,182,0,191,0,242,0,93,0,164,0,136,0,73,0,95,0,198,0,169,0,26,0,106,0,127,0,44,0,26,0,7,1,9,1,42,1,216,0,142,0,111,0,153,0,175,0,121,236,42,253,165,237,196,246,13,1,80,240,91,0,51,1,70,1,113,1,11,1,230,255,179,1,176,1,21,1,112,1,129,1,161,1,156,1,25,0,46,1,1,1,121,237,239,236,76,236,14,236,159,235,175,236,175,236,210,238,78,234,252,235,115,234,17,235,248,236,64,233,16,234,76,236,210,241,233,235,138,236,25,236,191,235,92,233,90,234,111,236,95,234,252,236,242,1,126,2,206,1,168,1,139,1,91,1,6,1,222,1,13,2,206,0,189,1,98,1,127,1,131,1,134,255,226,255,228,252,203,0,146,0,145,0,114,0,126,0,186,0,130,1,215,0,226,0,123,238,154,241,219,238,184,255,67,1,69,252,149,0,204,255,204,251,167,254,104,1,53,1,196,1,100,1,22,1,73,0,8,1,252,0,127,0,61,0,86,0,141,0,19,2,88,2,22,1,73,0,35,0,41,0,77,0,52,0,175,236,127,235,222,0,209,255,197,255,128,255,227,255,71,0,122,0,101,0,247,1,229,0,108,1,118,1,226,0,45,250,172,255,228,255,186,255,161,255,211,255,129,0,112,0,93,0,145,0,198,0,102,0,139,0,86,0,222,0,181,0,178,0,32,236,47,235,206,236,224,235,18,236,83,235,48,234,25,234,15,234,162,234,183,235,74,235,49,234,54,238,72,235,100,234,12,234,50,234,37,234,23,235,2,234,68,235,81,0,2,0,255,0,246,255,254,255,204,249,138,236,235,247,188,252,170,255,121,234,105,255,147,236,39,234,44,235,169,255,204,245,139,255,255,239,149,239,187,239,132,238,183,238,73,241,175,240,22,239,210,239,105,240,77,240,63,239,247,238,84,239,185,237,71,237,234,239,241,238,31,239,52,238,117,239,172,238,179,242,20,243,240,243,97,243,99,243,162,243,169,244,91,241,51,243,227,242,23,243,109,242,1,243,248,243,241,242,186,243,129,242,203,241,32,244,67,243,106,242,35,242,222,243,139,244,62,244,222,245,248,242,245,242,50,243,101,242,202,241,107,242,165,241,125,239,12,240,189,240,23,240,211,239,76,241,92,242,22,242,34,242,35,242,212,241,55,241,43,241,7,241,35,242,111,241,77,242,25,241,212,241,178,241,253,242,250,241,157,242,215,240,222,241,59,241,5,241,162,242,194,241,18,239,41,240,217,239,173,239,25,240,66,241,92,240,110,239,159,234,182,235,167,235,68,235,136,235,24,235,7,235,170,248,182,235,102,238,189,234,7,235,142,236,111,236,64,235,128,236,124,236,238,234,252,235,206,234,175,237,125,233,152,233,248,235,158,234,118,237,238,239,62,239,197,238,25,239,217,238,113,239,18,241,141,238,38,239,12,240,219,238,124,239,6,238,101,238,135,238,50,240,170,239,38,240,194,247,218,246,160,249,40,243,75,250,139,246,222,237,71,239,18,239,49,239,253,238,53,239,127,241,185,241,236,239,50,240,37,241,154,239,61,240,192,236,159,237,17,238,46,238,30,237,98,238,4,239,94,240,188,239,162,239,8,240,248,239,175,240,159,238,53,239,156,239,197,238,195,238,92,238,70,242,49,238,154,238,108,239,50,234,163,238,197,237,239,238,177,238,34,238,233,237,44,233,56,237,230,236,153,236,46,239,15,237,138,237,164,239,57,240,161,240,211,239,60,241,125,240,5,240,175,240,217,238,214,241,121,240,0,241,153,239,170,239,83,243,180,244,157,243,93,241,155,244,64,244,136,244,89,243,5,243,203,239,207,239,47,242,244,242,248,243,67,245,86,244,225,244,59,243,122,243,54,242,121,242,132,242,229,248,179,242,209,241,128,244,133,243,74,244,52,239,27,240,129,241,13,242,166,243,36,243,115,254,169,245,134,247,212,245,126,244,251,245,128,241,104,241,0,244,215,239,192,240,130,245,109,243,98,241,216,240,111,239,81,242,230,241,151,242,125,241,32,244,18,254,228,240,131,240,155,241,8,241,41,240,248,239,56,241,225,240,2,242,71,242,110,242,3,241,49,241,230,244,223,242,248,242,1,243,238,241,254,245,117,241,93,242,139,248,114,242,61,244,8,244,135,243,5,243,204,245,13,244,131,244,122,241,198,241,250,240,68,242,132,242,221,240,50,241,156,242,88,241,98,242,201,240,109,241,88,244,238,244,179,243,185,244,64,244,176,244,222,243,193,241,5,243,122,242,101,240,14,240,130,240,6,240,143,240,250,241,100,241,106,241,220,241,249,241,153,240,24,240,146,240,191,241,172,240,55,240,41,241,63,240,223,240,245,240,108,241,132,240,27,243,176,242,184,242,23,243,224,244,153,243,188,242,186,244,35,243,60,244,145,242,123,242,4,243,41,242,240,244,201,243,123,245,60,243,253,244,35,243,181,242,54,245,13,242,243,242,58,242,112,242,84,243,7,242,1,245,172,244,0,242,230,240,198,243,222,243,133,245,195,244,77,240,154,243,40,244,2,244,34,251,7,0,20,247,85,254,140,246,255,4,93,8,133,0,89,0,31,1,223,255,14,0,182,0,4,0,217,1,252,255,96,252,255,254,3,0,237,255,88,255,124,248,205,255,141,247,230,255,198,0,225,255,212,255,212,255,215,255,219,255,35,0,228,255,237,255,251,255,255,255,251,255,238,255,220,255,199,255,192,255,215,255,190,255,213,255,171,0,137,0,184,0,39,0,141,0,20,0,20,0,50,0,16,0,228,255,14,0,23,0,103,233,189,233,41,230,215,235,198,234,192,234,99,233,161,252,201,254,38,252,250,255,77,253,94,248,237,238,166,254,195,254,48,0,159,244,107,243,241,249,171,255,8,1,198,255,3,239,154,242,104,243,21,0,248,255,8,0,8,0,4,0,203,255,175,255,203,255,192,255,200,255,196,254,208,255,112,254,211,254,0,0,227,255,217,255,235,255,182,240,84,238,45,238,95,237,150,237,57,237,94,238,5,238,5,238,2,236,64,236,219,235,194,236,143,236,142,236,192,236,164,236,250,238,52,235,127,239,137,234,224,237,165,238,68,238,121,237,110,238,97,237,96,237,135,237,149,237,246,234,130,234,141,235,199,237,27,233,51,238,192,235,192,235,29,241,216,235,185,234,95,235,42,234,248,233,28,235,251,235,118,235,39,236,105,236,246,234,42,235,13,236,124,237,112,237,213,234,135,236,135,235,233,236,134,234,103,235,248,255,236,255,228,255,150,0,6,0,32,0,5,0,24,0,17,0,134,254,139,249,233,255,76,251,102,249,43,248,125,1,88,3,112,0,65,247,62,255,59,237,36,1,38,253,199,2,252,243,40,248,103,252,206,0,102,1,63,0,140,235,53,235,98,236,78,236,31,235,91,234,240,233,219,233,245,235,45,236,118,234,99,236,162,241,217,233,159,235,46,235,224,236,36,236,121,234,183,234,25,247,248,237,232,234,125,233,14,233,164,250,80,252,239,236,115,241,229,235,114,253,189,252,245,233,72,236,75,235,221,236,103,244,213,233,253,239,207,242,206,243,174,243,42,239,184,240,172,233,156,233,71,245,233,235,143,235,91,249,148,249,137,234,166,233,131,236,139,236,160,234,1,236,42,234,98,234,133,237,176,251,168,250,61,250,166,251,90,248,108,251,182,244,182,243,210,237,162,248,51,232,93,232,10,233,238,232,204,232,56,233,204,232,72,232,97,232,86,239,124,237,222,247,245,233,80,234,99,234,171,233,129,234,74,234,219,233,221,232,212,233,32,233,249,232,50,232,120,233,238,233,106,233,168,233,36,233,156,233,168,237,175,243,206,244,118,236,80,236,228,234,36,234,115,234,178,233,141,238,23,236,196,240,238,240,120,235,228,234,37,236,92,236,80,236,34,0,4,0,7,0,0,0,232,255,16,237,16,249,46,2,203,255,96,245,123,0,35,0,209,255,37,1,191,255,199,255,159,1,8,0,18,1,247,255,233,255,229,255,199,235,228,234,90,235,200,237,153,246,72,234,162,233,176,239,157,232,128,234,193,233,218,232,88,234,81,234,219,235,101,235,142,238,71,235,120,244,54,234,29,239,220,237,15,234,144,236,239,234,52,236,249,239,46,254,147,244,81,237,173,233,91,230,141,241,197,241,169,233,151,242,194,234,177,233,229,238,29,235,109,242,160,242,137,245,75,235,250,232,15,238,162,235,202,237,209,246,131,242,51,236,124,235,188,236,29,233,160,248,111,242,79,242,137,247,101,231,5,231,95,233,176,231,57,238,152,237,91,239,154,238,184,239,67,238,219,237,93,240,50,241,25,240,247,240,247,239,179,240,84,242,57,241,106,238,221,240,188,238,181,237,164,238,102,240,40,240,226,238,2,239,220,237,84,237,36,242,140,243,178,239,179,240,66,240,154,240,35,245,181,246,152,240,117,243,84,239,220,239,205,242,153,245,231,243,27,240,142,245,139,240,72,248,130,245,34,240,78,241,161,240,214,239,71,240,74,242,53,249,81,240,144,246,199,241,68,239,230,240,158,239,207,239,17,241,230,240,123,241,131,245,100,242,102,247,101,242,141,240,124,241,33,242,215,240,249,244,230,240,7,241,2,241,55,239,237,243,113,245,69,246,111,239,215,243,3,240,92,240,4,239,223,239,166,239,6,239,100,242,47,242,114,242,110,243,184,239,212,239,247,239,58,241,158,242,233,240,145,238,193,241,235,239,161,238,88,239,35,246,188,241,89,242,73,242,31,242,86,240,189,240,41,240,185,241,53,242,33,241,83,242,246,241,135,243,223,239,209,242,164,241,116,240,236,241,208,241,166,243,228,244,226,246,4,244,59,236,72,237,200,236,182,236,241,236,11,236,114,238,154,237,178,235,123,240,10,236,171,235,70,237,20,238,173,239,136,235,85,237,2,237,28,239,128,238,36,240,135,237,243,237,115,238,13,236,101,237,234,239,143,236,65,239,195,236,66,243,142,241,102,245,65,242,122,245,231,243,161,244,249,242,209,241,156,242,222,242,188,244,161,243,200,246,87,239,88,238,28,238,40,242,156,241,92,240,187,240,185,240,141,243,125,244,128,243,132,243,173,240,5,240,43,238,46,239,225,241,246,237,138,241,143,241,36,240,114,240,79,244,235,241,254,242,106,244,151,243,196,239,243,243,49,243,200,238,21,238,203,245,244,237,202,237,45,238,203,236,2,239,145,237,230,237,217,237,117,238,44,237,113,237,154,241,63,238,156,237,153,237,215,235,150,236,47,239,178,237,151,236,60,236,145,236,123,236,157,237,156,237,46,237,73,237,34,244,183,237,104,239,165,236,54,238,195,236,99,237,223,236,41,237,153,235,241,235,122,235,163,236,222,236,194,235,114,235,228,236,142,236,251,237,215,238,121,237,64,237,104,237,109,237,201,236,184,236,90,236,102,236,124,236,190,236,114,236,242,237,198,236,112,235,162,236,37,236,117,235,120,237,141,235,210,236,97,237,20,237,234,236,31,236,184,235,57,236,236,235,255,235,191,234,218,234,126,235,7,235,104,235,43,235,215,234,96,235,114,236,162,236,126,236,95,235,192,237,97,236,192,236,46,237,240,242,237,235,232,235,9,236,186,235,255,235,182,235,38,238,12,236,89,236,23,237,253,235,174,235,83,236,215,242,92,243,27,244,254,243,96,244,254,236,125,240,235,240,17,242,214,241,208,240,109,243,182,239,241,240,38,242,101,240,39,242,29,241,249,239,57,241,142,240,130,242,130,235,0,235,201,235,82,235,119,235,37,235,99,235,94,235,254,234,43,235,251,234,12,235,219,235,64,237,205,235,220,235,75,236,68,236,217,235,237,234,194,235,232,234,103,244,158,243,82,243,56,239,110,237,133,241,57,243,12,250,165,255,254,249,91,246,18,243,89,235,115,235,89,236,39,235,196,236,135,235,116,235,204,246,97,244,190,236,53,239,186,237,156,234,179,237,201,242,24,236,236,240,98,236,29,236,11,236,72,248,159,244,149,245,170,246,58,244,18,236,178,241,205,240,246,234,115,234,168,235,206,235,204,235,73,233,85,233,215,235,43,237,155,235,212,237,13,235,190,237,173,239,1,235,102,236,163,236,77,236,146,237,206,234,85,237,204,236,216,231,88,236,104,232,3,234,41,234,67,233,231,232,116,234,155,234,128,236,111,233,7,233,161,233,50,235,149,233,26,233,201,243,60,235,29,234,120,234,158,236,26,231,180,232,27,233,210,231,56,231,234,248,143,245,195,249,228,248,104,239,48,244,166,242,96,243,245,245,140,239,226,242,169,250,228,243,172,245,17,235,102,235,183,235,193,238,159,237,99,237,163,236,80,236,181,237,85,245,104,243,57,244,137,234,24,234,16,237,251,234,225,235,109,235,223,235,224,234,12,234,218,233,171,239,51,237,232,236,140,239,72,242,197,235,217,240,66,238,122,237,158,244,89,243,98,239,24,237,40,235,19,236,174,243,126,236,82,243,224,235,71,236,215,237,171,235,185,236,212,235,170,235,246,235,159,238,197,240,126,241,111,237,47,238,54,237,88,237,0,240,236,237,30,238,176,237,15,234,234,247,179,240,255,236,92,238,103,241,147,243,26,248,42,244,35,237,246,234,149,238,54,236,96,236,225,236,217,235,7,236,187,236,162,236,233,235,198,235,19,239,184,236,200,233,176,236,243,235,104,238,14,234,175,234,201,233,169,236,142,236,132,237,144,235,231,234,217,236,53,234,163,235,122,235,62,233,142,236,81,232,154,248,178,235,127,234,93,236,199,238,17,236,115,237,226,239,219,234,228,237,144,237,6,235,231,248,95,234,3,236,36,235,132,234,146,235,224,237,85,236,43,235,64,239,45,243,201,239,108,242,49,244,78,242,113,242,137,240,156,241,115,242,157,244,194,245,251,240,243,239,241,243,128,241,117,239,197,241,68,241,55,241,251,241,90,246,177,247,74,248,237,240,113,249,21,241,162,241,214,241,245,238,14,238,15,238,29,239,114,238,212,238,36,244,161,239,49,241,3,240,202,240,83,240,180,240,195,238,71,239,28,239,132,240,32,239,10,240,38,236,49,236,20,237,169,236,254,235,37,236,77,237,106,240,195,241,33,238,53,238,161,238,57,237,29,237,23,238,194,237,129,238,104,238,10,236,180,236,227,237,104,239,117,238,155,236,8,237,217,236,158,240,26,240,230,239,58,240,144,241,126,239,45,239,83,239,162,238,76,239,134,240,210,238,33,239,78,239,3,240,197,239,195,239,122,241,183,235,24,233,162,236,98,234,160,233,215,235,172,235,186,239,165,234,134,234,18,237,238,235,184,235,85,235,150,233,45,235,244,234,2,236,246,235,19,232,217,234,219,233,162,234,213,234,25,236,169,235,205,235,172,238,49,238,131,239,43,240,73,242,223,237,138,236,58,247,64,234,33,237,14,239,238,247,17,245,107,239,196,236,118,236,195,237,44,245,74,238,120,239,53,241,208,242,166,234,215,235,61,236,45,238,168,236,38,237,117,237,211,243,158,239,122,245,38,249,149,236,26,249,203,236,7,236,145,237,32,238,177,236,86,238,24,237,214,235,134,234,64,241,84,236,110,243,98,246,228,245,40,235,237,235,114,236,239,236,242,236,10,237,251,236,106,239,66,248,133,248,0,241,148,239,172,238,68,236,49,236,176,242,183,236,152,239,238,235,109,236,96,236,77,235,215,237,123,238,198,236,114,235,213,242,122,240,220,244,191,239,97,3,160,255,16,246,159,253,242,254,236,253,83,244,203,236,72,239,242,239,57,238,119,238,167,237,157,242,65,240,194,242,215,236,253,236,17,240,149,237,73,237,31,237,225,237,71,241,3,239,248,239,184,234,44,235,157,235,211,235,132,234,121,234,173,234,169,235,31,235,195,235,8,235,115,236,164,234,121,234,24,238,16,239,81,245,162,234,143,235,215,235,0,241,98,251,145,237,60,234,192,234,140,234,1,237,41,242,56,237,134,237,67,247,22,245,116,246,186,245,195,238,10,243,44,235,152,238,240,236,105,236,158,239,3,251,201,245,85,242,130,5,49,4,236,1,72,3,21,2,255,4,26,4,22,4,126,4,160,4,179,3,104,4,244,3,22,4,67,4,156,4,141,3,161,3,225,3,157,3,152,3,192,3,253,3,205,4,79,3,7,4,32,5,99,4,76,4,98,6,51,6,170,5,242,4,226,4,134,5,141,4,196,4,115,4,25,5,24,5,181,4,190,5,69,5,22,6,55,4,121,4,24,4,196,5,58,5,237,4,139,4,251,4,35,5,187,5,93,5,130,5,190,4,108,5,225,4,215,4,154,6,170,5,52,7,231,3,28,4,149,4,170,4,225,3,91,4,0,5,72,4,163,4,113,4,102,5,215,5,105,5,178,4,46,5,242,4,200,5,96,5,80,6,41,4,106,4,29,4,247,3,222,3,126,4,146,4,132,4,144,4,148,4,221,3,197,3,186,3,183,3,70,4,74,4,56,4,7,4,184,242,251,237,105,241,112,238,197,239,69,238,111,238,46,243,118,236,32,235,55,235,248,234,36,237,112,237,127,238,58,237,90,238,95,237,16,237,48,239,101,236,146,236,163,235,177,237,57,235,199,236,46,234,25,234,12,234,63,234,101,234,77,234,75,234,205,235,246,234,204,235,72,234,127,234,94,234,76,234,210,234,73,234,6,234,202,233,68,234,230,233,7,234,218,233,13,234,64,234,64,234,64,234,48,2,5,0,170,0,38,248,26,251,212,254,52,251,129,252,252,246,126,239,228,240,47,241,209,238,214,239,128,238,49,247,35,241,191,244,49,238,149,237,198,236,72,242,245,238,226,240,52,237,136,237,17,238,229,241,72,239,89,240,250,234,166,234,128,234,145,235,150,235,221,235,179,236,30,236,54,235,204,234,78,238,47,236,48,237,231,237,30,237,60,235,33,236,117,235,98,3,36,4,169,3,252,255,186,254,86,4,120,4,68,1,233,3,113,3,191,4,52,4,74,242,88,252,38,249,34,245,207,251,113,249,215,254,150,1,147,255,86,255,144,4,126,248,146,255,111,6,209,4,95,238,39,240,177,244,1,242,54,243,246,241,107,246,127,4,100,4,15,6,254,4,224,1,91,5,83,2,5,251,110,2,236,2,99,234,152,234,125,234,169,234,120,234,18,237,202,235,253,235,176,235,178,236,1,235,195,234,209,235,18,237,146,234,233,234,225,236,199,235,136,235,181,234,254,234,160,234,98,3,141,0,30,3,148,4,160,0,218,238,167,238,128,238,228,240,177,244,231,243,138,250,89,243,92,237,157,237,223,246,205,240,51,247,183,237,19,237,122,244,233,237,249,237,14,236,251,235,25,236,250,235,251,235,35,236,139,236,67,237,107,236,64,238,21,238,15,236,27,236,56,236,134,236,204,236,33,237,22,3,57,2,253,0,133,1,209,1,114,1,203,0,69,241,229,244,55,245,217,243,52,244,84,239,136,0,147,0,165,0,51,241,229,236,118,0,209,242,79,239,136,244,170,242,144,0,200,255,118,0,96,239,68,239,165,237,76,238,165,238,112,238,250,237,88,236,50,236,150,236,94,236,126,236,124,238,17,237,218,239,71,238,40,239,136,237,145,237,38,238,73,237,90,237,244,236,16,237,251,236,136,237,249,235,222,237,8,238,11,236,31,236,22,239,14,237,124,237,91,238,170,237,21,236,26,236,57,236,54,236,79,236,178,236,107,236,32,236,79,1,157,1,138,1,134,1,148,1,22,2,214,1,140,1,135,1,144,1,225,1,228,1,244,2,216,1,134,1,134,1,240,2,146,9,50,2,14,2,210,2,166,2,224,1,192,1,180,1,188,1,175,4,21,4,77,4,239,4,10,4,32,4,242,2,237,3,221,3,112,3,241,1,51,3,253,3,164,1,218,1,179,1,105,1,116,2,155,1,159,1,147,1,226,1,174,1,183,1,237,1,162,1,53,2,45,3,206,1,220,2,204,5,115,4,148,2,147,5,24,3,140,5,129,4,113,6,238,9,65,10,132,13,114,7,50,3,138,1,176,4,34,7,142,7,195,4,91,11,25,4,69,7,172,11,180,5,111,3,62,3,36,6,148,1,163,7,243,1,233,2,126,4,121,8,170,7,54,8,149,4,96,7,10,7,71,4,185,7,179,10,84,8,102,7,11,8,146,3,157,1,97,3,135,4,14,1,225,3,9,2,160,3,168,2,215,3,113,3,220,2,107,2,137,2,225,1,60,5,234,3,3,5,247,3,120,2,140,2,220,1,86,4,220,1,103,5,5,2,59,4,55,240,33,241,23,243,90,241,46,241,77,243,188,246,246,0,255,255,79,253,244,255,248,255,52,0,7,246,166,251,87,245,3,1,188,1,50,249,55,0,145,1,61,1,2,1,255,244,83,246,146,244,121,4,110,4,110,4,203,4,146,4,124,4,49,5,110,4,135,5,81,3,189,4,32,7,19,5,196,4,255,4,99,4,74,4,139,4,60,3,21,4,222,3,85,7,177,4,136,5,181,4,168,5,172,3,211,4,150,4,19,4,135,1,223,2,191,1,39,2,246,2,88,1,248,5,249,2,155,0,104,1,149,7,227,2,132,6,4,4,52,5,11,2,20,1,221,3,135,3,134,1,177,2,199,1,249,0,45,5,181,4,111,1,58,1,143,1,190,2,208,1,66,0,236,246,166,1,182,0,141,0,191,0,71,1,88,2,251,0,58,2,110,4,126,6,82,5,220,4,114,7,29,3,82,5,223,4,87,4,5,2,130,5,255,8,123,1,158,2,222,2,175,4,114,1,28,2,106,3,222,10,156,7,138,4,171,239,227,238,68,239,65,240,52,241,110,242,33,241,172,242,213,241,100,244,47,240,165,238,177,251,186,0,60,243,51,247,218,250,244,249,255,243,127,239,137,241,30,241,14,2,228,0,31,1,235,1,184,0,193,0,35,0,11,0,215,0,24,1,33,246,54,0,28,0,137,251,16,0,152,0,80,0,76,0,230,1,133,1,90,1,150,1,158,1,90,1,4,1,78,1,2,1,83,1,119,0,132,1,93,1,237,1,128,1,78,1,251,1,188,1,211,1,117,2,144,1,222,1,61,1,94,1,244,1,223,1,126,1,132,1,201,1,105,2,47,2,10,2,107,2,105,2,44,3,131,1,19,2,212,1,130,1,100,1,194,1,134,1,27,2,177,1,111,2,101,2,99,2,148,2,218,1,192,2,178,2,206,1,116,2,89,2,35,3,235,1,7,2,111,3,47,2,45,4,7,2,51,2,216,2,185,2,171,2,29,3,229,2,240,2,48,4,80,3,193,4,27,4,224,3,21,3,153,1,189,2,248,1,243,1,187,3,246,3,198,4,69,4,94,4,50,4,182,1,139,2,216,1,58,2,173,5,18,4,39,4,121,3,100,237,151,237,123,239,137,238,226,238,42,238,148,238,26,0,5,0,231,255,54,249,117,254,246,255,153,242,122,250,52,241,79,0,234,2,249,241,5,252,50,0,225,255,29,245,225,240,123,242,107,240,88,1,6,1,71,1,7,1,66,1,187,1,203,2,226,4,150,1,59,2,55,2,143,1,250,4,59,3,133,2,194,1,13,2,116,1,128,0,91,0,174,0,80,3,180,0,216,4,222,0,122,0,157,0,224,0,229,0,191,0,253,0,61,1,12,1,30,1,0,1,237,0,206,0,117,1,16,1,65,1,180,1,142,1,205,0,209,0,156,1,99,1,231,1,241,0,11,1,36,1,192,0,66,1,174,0,39,1,210,0,185,0,21,0,53,0,77,0,144,0,211,0,71,2,239,0,123,1,82,1,83,1,210,0,146,0,187,0,83,1,67,1,203,0,177,0,250,1,76,1,97,1,172,1,142,1,172,1,121,1,236,1,183,2,251,2,49,2,104,2,244,2,61,2,117,2,225,4,36,3,127,3,214,2,52,3,136,4,5,3,172,2,110,2,76,2,39,2,27,2,197,1,211,1,142,3,21,2,200,2,230,1,1,3,106,1,58,2,172,1,153,2,46,3,26,2,247,3,175,4,50,5,65,2,74,2,82,2,58,2,36,2,16,2,158,2,116,4,171,3,59,3,84,1,77,1,69,1,171,1,106,1,159,1,39,1,55,1,36,1,160,3,225,2,62,3,127,1,204,1,206,1,229,1,195,1,158,1,243,0,31,1,201,0,35,1,40,1,67,1,48,1,25,1,84,1,87,1,87,1,47,1,135,2,241,1,98,2,207,2,176,2,60,1,108,1,193,0,108,1,163,1,62,3,93,4,39,4,148,2,208,1,178,1,206,1,16,2,81,1,36,1,18,1,84,1,70,1,149,1,143,1,20,2,195,1,234,1,54,2,105,1,166,1,144,2,84,1,114,1,121,2,133,1,137,1,142,1,175,1,108,1,81,1,28,1,39,1,98,1,109,1,76,1,67,1,87,1,100,1,108,1,97,1,59,1,100,1,159,1,113,1,93,1,160,1,94,1,89,1,25,1,44,1,52,1,69,2,12,3,120,2,44,3,97,3,180,2,17,2,195,1,199,1,158,1,35,2,1,3,241,1,175,1,44,2,19,2,224,1,179,1,239,1,48,2,181,2,224,1,208,1,168,1,209,1,235,1,245,1,195,1,176,1,201,1,186,1,172,1,203,2,16,3,195,3,3,2,156,1,152,1,161,1,18,2,209,1,196,1,57,4,182,1,101,4,224,5,182,4,53,4,139,4,57,4,183,4,50,6,172,4,67,4,150,4,146,4,160,5,163,4,7,5,111,5,234,4,141,4,156,5,95,5,243,6,152,6,36,5,16,6,75,5,169,2,56,2,6,2,7,3,164,2,111,2,31,2,73,2,195,2,148,3,255,2,65,4,76,5,147,4,255,2,19,4,168,7,112,3,226,5,194,2,238,3,70,5,151,3,104,4,33,4,24,4,230,4,53,4,27,4,89,4,74,4,78,4,195,4,33,2,13,3,211,2,210,2,169,2,68,2,220,3,68,3,122,3,90,4,201,3,61,3,59,4,228,4,129,5,157,3,182,5,46,3,65,4,121,3,94,3,181,2,111,5,188,5,97,5,21,5,154,3,119,2,141,2,15,4,241,1,213,1,197,1,83,2,203,1,132,6,55,3,255,1,82,2,248,1,211,2,237,2,38,2,147,1,251,1,86,2,212,1,194,2,47,2,48,2,81,2,51,2,166,1,131,1,158,1,116,1,153,1,117,1,157,1,69,2,175,2,39,2,143,2,218,2,196,2,13,2,114,2,194,1,63,2,239,3,185,1,231,1,232,1,225,1,232,1,204,1,209,1,154,1,176,4,32,5,127,3,252,4,137,3,97,4,42,3,144,1,155,1,70,2,168,1,170,1,180,1,92,2,71,2,85,2,66,2,222,2,128,2,167,2,108,2,173,2,51,2,123,3,174,2,206,2,234,2,7,2,10,2,224,1,184,1,144,2,102,2,215,2,171,2,204,3,138,1,160,1,148,1,148,1,212,1,93,2,238,1,168,1,222,237,56,240,25,239,247,238,255,239,160,239,117,239,28,244,144,242,46,246,248,240,171,241,90,249,73,253,252,240,68,243,137,247,129,244,47,245,43,241,77,243,208,240,222,4,9,2,231,2,126,2,233,2,80,1,56,0,20,2,37,2,93,1,231,1,31,2,8,3,190,2,138,2,209,1,3,243,65,241,7,255,215,247,115,0,113,255,246,1,93,1,93,1,41,0,6,3,246,1,98,3,110,4,175,2,167,3,66,3,214,255,3,1,149,2,160,1,133,1,247,3,13,3,3,2,105,2,6,2,118,2,85,2,158,2,131,2,101,2,147,2,204,2,205,2,199,2,42,249,64,1,38,0,140,253,237,254,19,2,63,2,29,2,102,1,190,2,238,248,248,250,85,247,187,255,235,1,87,0,167,2,27,0,248,4,233,2,211,3,255,5,230,2,194,1,188,1,155,1,237,1,127,1,64,2,18,2,249,1,210,1,106,2,244,1,146,1,18,2,206,1,3,2,198,1,69,2,197,1,132,2,180,2,245,1,235,1,81,1,120,1,91,1,104,1,71,1,60,2,126,2,54,2,200,1,40,2,247,1,157,1,135,1,119,1,50,2,134,1,6,2,194,2,123,3,143,2,243,2,8,2,238,1,48,2,121,1,223,1,189,1,157,2,250,2,32,1,54,1,100,2,193,1,62,1,59,1,46,1,241,1,159,1,222,1,242,1,113,1,220,1,165,1,205,1,57,1,85,1,81,1,75,1,97,1,62,2,176,1,169,1,209,1,113,1,131,1,128,1,153,1,207,235,13,236,201,235,47,236,246,237,34,237,44,236,50,238,28,238,37,238,124,237,13,238,53,236,132,238,248,236,149,236,2,238,158,237,11,240,79,235,131,235,100,236,248,241,5,241,38,240,213,241,74,241,61,241,158,242,5,2,80,1,98,0,99,248,106,3,145,254,141,255,1,0,150,254,222,238,4,241,66,241,196,240,59,240,136,240,218,240,123,249,245,238,189,241,6,244,64,243,68,241,103,242,228,0,82,247,9,1,168,239,122,240,110,240,13,241,221,240,175,240,239,240,183,0,141,1,109,0,153,0,32,4,252,0,233,255,20,0,226,255,117,240,71,253,212,255,53,238,96,239,166,239,164,238,74,238,0,0,155,248,189,0,126,0,156,246,89,239,45,240,162,239,47,240,58,240,46,239,175,239,92,240,191,245,7,242,216,242,176,249,4,245,165,2,30,249,196,249,33,250,72,249,93,248,87,245,26,243,44,241,216,242,121,241,47,243,50,242,192,243,108,242,112,239,150,244,172,245,139,240,101,255,171,249,233,233,209,232,46,233,72,232,88,232,35,233,198,232,72,232,77,232,71,250,123,250,12,253,203,245,35,248,198,247,219,247,17,250,198,234,130,233,194,231,159,241,74,232,53,232,204,232,23,245,215,233,11,244,177,231,194,232,104,231,144,241,130,241,21,240,40,240,76,243,6,240,93,244,209,240,112,242,232,239,43,241,254,241,51,241,155,239,185,250,227,243,42,249,168,242,240,250,174,255,192,254,190,248,244,239,148,237,186,239,208,240,45,250,248,245,233,245,36,245,115,242,164,247,64,247,161,244,62,247,220,246,195,240,119,241,104,240,105,244,37,238,110,243,81,241,20,249,173,6,178,2,112,16,48,11,3,2,53,2,190,1,89,5,96,9,235,3,182,5,178,2,112,10,216,14,105,0,201,0,142,0,237,1,59,1,38,1,254,0,77,1,50,1,105,4,53,2,210,1,118,249,230,254,29,2,77,255,178,0,169,255,122,0,25,1,142,1,109,1,197,4,34,3,137,5,122,3,26,2,214,4,216,0,17,5,137,0,116,0,31,3,177,3,101,4,71,2,158,3,12,0,87,236,48,240,145,235,146,255,173,251,124,255,16,247,71,247,139,255,5,1,76,0,242,0,10,0,246,255,37,0,198,255,217,255,179,255,169,255,223,255,209,255,174,255,149,255,152,255,159,255,187,255,197,255,170,255,182,255,152,255,215,3,73,3,1,3,226,1,160,1,141,0,0,0,31,1,91,2,45,3,184,0,27,1,21,1,136,0,71,0,132,1,211,0,199,0,77,244,35,240,109,241,187,239,91,240,198,255,36,254,42,254,69,255,122,255,154,253,103,254,160,255,221,255,187,248,164,255,79,255,110,255,60,254,118,251,191,254,8,242,16,235,2,249,198,239,211,234,185,236,147,255,185,255,199,254,137,255,123,255,129,255,78,255,146,254,123,255,91,239,16,252,129,254,245,252,193,252,165,248,160,250,206,240,250,255,112,1,163,1,60,0,44,4,251,255,94,1,160,0,67,0,17,0,188,0,50,5,255,255,151,255,36,2,6,1,191,0,61,1,36,1,85,3,103,3,14,2,110,255,48,255,64,255,210,255,53,255,147,255,162,255,205,255,139,255,77,255,158,255,97,255,107,255,156,255,164,255,128,255,134,255,113,255,211,243,50,242,37,238,18,252,238,248,90,240,16,239,177,240,189,238,52,239,75,237,168,238,198,240,254,240,20,251,170,243,158,239,80,241,44,239,88,240,188,239,93,241,45,240,34,242,0,241,155,241,229,241,17,242,177,243,144,241,60,246,245,242,203,244,6,246,200,243,237,242,35,244,175,242,61,241,142,240,240,244,86,243,252,241,239,241,199,242,28,246,213,244,30,244,166,243,179,242,206,242,55,243,226,242,136,243,76,242,236,242,98,243,181,242,85,243,121,241,175,242,71,243,243,242,95,242,124,242,186,243,79,242,199,243,18,241,205,241,141,241,88,241,108,242,130,243,115,240,26,242,90,241,171,240,2,240,48,242,236,239,94,241,207,241,94,241,247,240,66,239,39,241,143,241,147,241,229,240,21,240,102,240,80,239,214,237,120,236,216,237,89,238,180,236,96,239,5,237,148,235,190,236,12,235,96,234,34,234,2,236,72,235,152,235,143,234,86,236,164,235,39,235,8,236,114,234,47,234,17,235,39,235,131,235,92,239,109,245,198,240,82,243,202,243,201,238,247,239,56,242,26,240,121,238,100,238,163,238,10,239,134,237,36,236,16,239,187,238,167,239,52,237,152,249,99,237,221,240,79,241,97,240,220,240,139,245,188,242,1,241,26,243,250,241,1,240,134,239,239,236,32,238,216,238,188,237,204,237,14,236,49,234,90,237,142,236,245,236,116,237,17,236,81,238,198,237,97,237,42,238,14,238,179,238,128,237,171,237,210,237,89,238,1,238,200,235,184,235,254,236,19,235,220,235,36,235,195,235,24,238,8,237,47,236,84,237,140,233,253,234,241,232,64,234,3,237,55,236,158,236,35,237,214,244,135,242,89,239,90,241,22,238,182,239,96,237,139,239,72,239,76,238,103,238,224,238,253,238,42,243,192,235,66,237,111,236,166,234,171,236,237,236,190,237,14,238,129,237,177,237,92,238,112,236,12,243,234,242,163,243,100,244,23,245,223,245,190,241,96,240,34,241,166,241,109,240,16,241,150,239,220,242,195,242,122,242,72,239,143,240,154,241,30,241,98,239,127,240,226,239,173,241,37,241,176,242,225,238,61,240,198,238,224,237,17,239,112,237,105,240,194,240,149,239,224,236,171,237,195,236,193,237,46,238,2,238,118,237,131,238,48,237,230,239,158,239,207,239,44,239,204,239,118,239,149,238,144,239,112,238,103,238,108,239,250,238,97,238,136,238,171,238,186,238,97,239,178,239,22,238,176,238,74,239,138,238,188,237,152,238,135,237,237,237,34,237,132,238,107,238,119,238,244,240,109,239,218,238,42,241,77,240,223,238,200,238,117,240,157,239,107,240,84,239,212,239,209,242,248,241,150,241,16,242,218,241,131,240,217,240,17,241,81,240,91,241,78,238,121,238,47,239,207,237,154,238,185,239,159,239,74,239,182,240,135,240,84,240,6,240,39,239,161,239,108,240,17,239,160,240,204,239,180,240,104,239,126,239,111,240,241,243,221,242,123,243,4,246,16,247,237,244,215,244,156,243,111,244,64,244,50,244,62,245,101,241,237,240,36,243,96,243,59,242,200,242,212,243,154,248,43,246,59,243,127,240,148,241,71,242,208,238,118,241,251,240,218,241,86,241,39,240,140,239,67,243,215,242,119,242,237,245,29,245,180,240,168,242,201,241,72,0,31,0,36,0,81,0,64,0,118,0,71,0,58,0,199,0,120,0,80,0,47,0,159,0,188,0,121,0,110,0,13,1,227,0,248,0,66,0,159,0,83,0,247,0,11,1,6,2,205,0,10,1,187,0,218,0,90,1,103,1,157,1,241,0,91,1,42,1,156,1,100,1,45,1,135,0,126,0,232,0,142,0,251,0,131,0,2,1,70,1,58,1,68,1,20,1,165,1,184,0,216,0,200,1,200,0,217,0,245,0,73,1,57,2,226,0,71,1,48,1,169,0,51,1,47,1,59,1,212,0,225,0,195,0,87,1,28,1,68,1,213,0,104,1,192,0,107,0,185,0,198,0,150,0,78,1,96,1,81,1,201,1,251,0,23,1,19,1,229,0,239,0,250,0,98,1,180,1,77,1,34,1,207,5,60,4,173,1,224,8,255,0,19,4,32,11,73,0,85,0,60,0,215,0,190,0,163,0,99,0,133,0,136,0,41,13,59,13,237,12,235,12,10,1,98,6,50,1,10,1,1,1,103,4,243,2,223,3,85,3,102,1,244,2,250,1,232,2,198,2,255,0,169,1,75,1,5,1,119,0,203,0,121,0,123,1,193,1,24,1,67,0,66,0,60,0,246,0,112,0,123,0,78,0,81,0,66,0,38,1,253,0,40,1,235,0,253,1,80,3,110,1,49,1,10,1,16,1,227,12,190,9,95,1,234,1,23,1,177,4,102,4,81,0,94,0,80,0,111,1,241,0,191,0,139,0,135,0,216,0,126,1,123,1,116,1,88,0,103,0,99,0,118,0,151,0,84,0,156,0,116,0,91,0,102,0,137,1,188,0,230,0,241,0,210,0,124,0,161,0,160,0,189,238,255,238,212,239,45,239,228,239,143,239,120,240,144,253,255,242,77,252,225,255,67,0,72,240,179,239,66,247,223,247,207,255,75,241,125,255,237,254,245,255,191,255,199,255,210,240,228,255,35,241,39,3,153,2,198,2,204,2,62,3,165,1,181,1,34,2,19,2,176,2,211,1,100,2,251,2,45,2,1,3,240,2,69,2,240,0,127,3,61,4,229,3,175,1,87,2,212,1,175,1,168,1,37,3,211,2,167,3,77,3,198,2,236,255,228,1,11,2,34,2,27,0,218,0,243,255,249,3,43,3,106,2,214,255,67,2,69,2,192,2,146,3,45,2,77,3,26,4,11,2,108,2,42,3,242,2,168,4,39,3,162,3,233,0,48,3,78,3,135,1,3,1,189,2,177,4,17,2,70,3,128,3,240,3,203,0,204,0,128,2,182,1,9,2,58,2,53,2,35,1,213,0,0,1,250,0,130,2,114,0,99,0,121,0,107,0,134,0,198,0,130,0,212,1,162,1,142,2,129,1,149,2,247,0,199,0,154,0,160,1,241,0,228,1,174,1,31,2,124,1,112,1,88,2,128,3,104,1,242,1,246,1,93,2,24,2,69,2,238,0,137,1,111,1,152,2,186,1,150,1,122,1,72,1,92,1,180,1,49,1,247,1,162,1,99,1,66,1,92,1,36,1,236,0,244,0,211,0,192,0,171,4,192,3,215,3,253,3,121,2,44,2,127,1,16,1,153,1,176,1,165,0,74,3,68,1,137,1,58,1,37,3,97,1,179,2,33,2,93,3,229,1,18,2,185,2,0,2,34,1,78,2,132,1,69,2,40,247,167,236,14,248,10,238,108,237,139,235,50,235,178,233,93,234,69,233,52,234,192,237,236,243,255,232,169,236,133,240,180,233,99,235,29,234,29,236,234,235,90,237,5,238,192,237,168,236,197,236,186,236,197,238,227,235,191,235,184,235,219,235,117,235,155,235,186,235,126,235,159,235,97,236,126,236,84,235,70,236,63,236,194,235,64,236,221,235,77,237,114,236,52,236,16,234,107,233,117,234,23,234,127,233,100,235,254,234,225,232,26,233,71,236,65,235,79,235,197,233,90,234,244,235,226,235,183,235,182,235,83,236,75,236,195,235,244,235,50,236,111,235,88,236,188,235,38,235,72,235,54,235,162,234,224,234,186,235,160,235,218,235,223,235,221,235,68,234,124,234,65,233,156,233,235,234,232,235,211,236,152,235,40,240,238,253,175,239,29,239,131,238,99,246,173,242,203,239,12,241,86,240,29,240,100,239,91,237,67,237,69,237,6,237,83,239,171,237,131,239,119,238,120,239,35,238,247,255,203,255,229,246,130,254,33,250,181,255,137,255,1,242,33,241,215,240,118,246,4,244,66,243,54,241,217,241,47,245,130,255,235,248,16,255,128,254,239,244,22,247,34,246,35,246,253,246,251,247,79,240,174,238,68,249,252,241,1,238,51,239,3,241,194,237,165,243,137,244,72,242,250,238,251,241,149,248,142,241,245,241,248,242,175,242,10,240,126,238,45,240,112,246,168,249,82,245,142,252,82,245,194,243,60,240,74,242,117,241,250,239,182,240,25,239,135,238,176,239,80,240,64,241,102,239,56,239,148,239,172,238,85,240,238,237,63,239,113,2,220,2,131,1,210,0,166,1,83,0,107,0,90,0,124,0,86,0,147,0,201,1,56,0,35,0,77,0,83,0,17,0,65,0,66,0,114,1,137,0,204,0,123,234,22,238,41,243,201,239,11,236,12,250,158,255,201,255,118,255,230,246,235,255,197,255,240,255,135,240,69,249,141,246,229,0,131,0,167,255,60,0,9,0,89,0,3,0,80,254,178,255,165,255,143,4,74,3,121,1,202,2,93,4,138,3,35,2,50,0,69,0,121,0,65,0,147,0,113,0,14,1,185,255,244,255,239,255,39,0,15,0,20,0,116,0,128,1,255,0,173,1,89,0,23,2,64,0,5,0,25,0,58,0,2,0,78,0,113,0,96,0,224,0,0,0,70,0,64,0,69,0,50,0,127,0,156,0,79,0,17,0,143,238,165,237,203,237,63,237,38,237,59,240,224,237,195,237,169,237,211,237,203,239,64,238,43,236,22,236,255,236,126,236,127,236,108,236,207,236,85,237,197,236,176,236,62,0,207,255,184,0,119,255,154,249,218,246,151,251,244,242,173,244,27,242,239,250,137,255,100,241,71,241,122,243,4,242,56,240,187,242,1,242,222,254,45,244,152,247,61,234,93,234,124,233,119,234,89,235,26,236,248,235,165,235,176,235,210,235,214,235,114,235,117,240,61,242,204,236,125,238,241,236,211,236,255,235,203,234,57,235,21,235,192,239,224,239,26,239,185,238,84,237,84,240,158,236,163,237,84,239,88,239,4,236,171,236,97,236,24,236,67,236,56,237,223,236,6,237,176,237,13,235,188,227,35,226,210,232,254,232,220,233,44,234,26,234,59,234,54,234,66,235,11,235,5,234,78,233,203,232,125,234,4,233,235,232,129,233,31,234,36,233,171,236,52,237,10,237,28,237,101,236,124,238,175,237,165,236,248,240,56,235,188,236,189,237,204,236,32,236,29,237,214,234,16,236,102,234,243,237,7,238,132,235,238,236,204,234,88,240,85,237,204,237,211,234,37,234,160,234,248,235,128,235,5,235,195,235,71,235,179,234,98,235,132,235,182,237,192,235,167,236,243,232,116,236,56,236,246,232,17,235,228,234,4,234,108,236,250,234,2,235,82,234,237,234,202,234,120,239,220,235,133,235,112,233,240,234,121,234,13,235,86,236,126,236,212,233,184,239,210,233,197,233,130,234,118,235,241,234,76,234,176,239,220,237,54,238,214,237,60,239,93,238,241,236,31,236,132,237,237,235,145,237,145,237,187,236,202,238,151,237,223,236,196,235,75,236,28,237,199,236,94,237,191,237,26,237,232,237,19,238,46,238,1,235,146,234,50,235,23,235,129,234,120,234,131,235,35,234,152,234,159,236,99,236,223,237,195,236,112,236,68,236,25,236,226,236,215,235,201,234,154,236,94,235,211,235,200,235,159,234,136,235,106,235,79,236,9,236,194,235,115,237,138,235,120,235,211,234,167,234,72,236,54,236,14,236,18,236,16,236,101,236,146,236,96,236,248,235,123,235,54,236,186,236,63,237,229,235,105,236,64,235,174,236,123,238,123,235,16,236,97,237,226,236,214,236,14,236,207,235,71,236,85,236,140,236,102,236,27,236,162,236,247,235,114,236,138,238,199,236,156,236,213,238,201,240,224,240,194,238,236,243,39,239,250,239,135,237,84,237,32,238,109,237,166,236,148,238,240,237,11,240,186,236,151,237,241,238,146,238,243,237,70,238,126,239,235,236,99,238,76,237,192,240,189,236,195,237,17,241,30,238,171,234,134,235,31,236,89,235,96,237,7,236,198,236,67,235,234,236,65,235,40,235,178,235,240,234,224,233,235,234,17,236,19,237,70,237,72,237,233,236,245,236,50,237,126,236,43,236,118,235,116,236,169,234,186,234,204,235,24,235,34,235,91,236,143,234,208,235,122,235,183,237,98,238,155,237,26,237,242,237,219,237,120,238,217,238,43,238,240,235,33,236,8,236,115,237,193,240,224,234,75,236,14,236,86,236,56,238,213,235,170,235,76,237,192,236,139,238,5,236,60,237,177,234,141,237,108,235,194,234,234,234,122,238,172,237,152,237,76,238,125,237,118,235,19,237,171,236,152,238,110,238,235,235,181,236,204,235,76,237,60,236,4,236,209,235,235,236,3,236,240,235,165,236,131,235,37,237,142,235,62,234,255,234,47,235,23,236,162,235,74,235,1,235,59,235,36,234,159,234,192,234,57,235,46,238,73,234,168,236,135,235,121,235,46,235,39,237,35,237,1,235,224,235,249,235,13,235,53,235,81,234,56,234,241,236,222,234,124,235,117,235,97,236,171,234,104,234,74,234,14,235,51,235,248,235,240,234,35,236,194,235,252,235,243,234,188,235,118,235,14,236,206,235,154,235,212,235,120,235,66,236,187,233,26,236,154,236,16,235,112,235,37,235,117,235,185,235,184,234,217,234,127,235,118,235,75,236,253,235,100,233,52,236,209,235,155,236,39,237,150,239,206,241,60,237,158,238,92,238,210,239,249,238,88,239,206,238,12,237,14,238,28,238,136,236,248,236,229,238,79,239,74,238,10,239,187,237,56,238,170,241,196,240,161,240,41,240,220,240,111,239,115,239,255,240,159,241,4,242,146,239,29,240,202,239,242,240,100,240,58,240,167,238,199,236,45,239,73,239,50,239,115,238,94,240,9,240,19,240,2,240,38,238,27,238,70,235,228,236,0,239,129,238,69,239,198,230,45,237,109,239,250,237,76,239,43,237,143,235,156,241,245,241,146,241,186,240,123,241,164,241,68,240,2,241,200,239,135,238,36,239,160,240,81,238,68,240,180,238,32,239,73,237,98,240,5,240,244,240,97,240,180,239,47,237,157,238,37,239,183,237,64,239,105,240,57,239,225,238,59,245,49,247,65,245,188,245,10,246,231,243,6,244,131,240,118,243,150,240,170,243,162,250,96,243,204,242,190,242,93,242,77,243,155,242,19,244,1,244,58,248,107,245,15,244,253,245,82,243,106,244,225,238,158,238,12,242,255,239,30,240,145,239,83,240,7,239,150,239,65,242,93,241,29,242,1,242,9,242,173,242,224,241,227,240,91,240,53,240,110,240,129,240,151,239,2,241,227,238,94,241,211,238,213,240,65,240,179,240,203,239,130,241,166,241,152,242,152,242,4,243,252,241,11,243,73,242,49,242,106,243,160,242,213,243,64,242,71,241,158,244,186,244,173,243,236,242,18,244,97,243,146,245,8,245,84,244,86,242,2,243,35,243,9,241,205,242,15,242,32,243,202,242,104,243,227,243,69,243,169,243,86,244,157,243,39,247,11,246,94,244,57,245,83,243,83,244,51,243,154,241,75,241,192,241,219,240,71,241,20,242,27,244,25,243,71,245,33,246,203,245,37,244,63,245,22,244,222,238,86,240,26,238,158,242,184,238,164,238,118,239,73,239,224,240,116,243,134,245,139,243,253,237,249,237,22,240,146,239,166,236,240,238,24,240,46,242,211,241,219,242,170,245,217,241,168,241,247,243,63,243,41,244,189,242,199,242,236,242,176,241,144,241,155,241,148,241,204,239,224,240,134,239,78,237,172,239,55,238,12,239,68,238,96,237,106,239,141,238,59,239,101,237,141,237,109,237,22,239,164,237,179,238,26,238,5,238,6,238,228,241,206,241,205,241,137,240,172,240,199,241,151,240,148,240,54,240,54,238,105,239,206,239,70,243,115,242,173,242,198,243,94,243,36,241,185,239,232,239,25,241,218,240,11,237,221,239,216,237,19,238,230,238,32,240,14,240,161,239,92,243,39,243,189,242,70,242,153,241,191,244,239,245,74,245,239,244,254,245,243,243,155,243,135,241,143,241,90,241,124,242,128,244,68,243,219,243,101,243,120,243,185,242,184,238,179,239,120,240,184,239,23,240,8,242,189,241,96,241,33,242,193,242,97,241,23,240,127,243,48,243,66,241,205,243,82,242,66,243,143,241,214,239,1,240,162,240,168,237,134,242,134,238,147,239,129,244,143,242,19,242,40,244,69,242,22,243,148,242,32,242,95,244,171,242,59,245,68,243,185,245,166,243,177,244,80,243,62,245,24,245,10,244,58,243,74,243,102,244,6,245,107,243,127,245,235,244,163,243,229,243,243,241,104,246,250,242,166,242,233,243,17,246,79,245,14,244,248,238,8,239,96,238,215,238,170,238,85,237,114,238,182,238,254,238,71,239,83,238,31,238,239,238,57,239,114,239,60,239,118,238,77,239,5,239,245,238,253,238,115,239,144,238,131,237,11,241,179,238,13,239,221,237,234,237,159,241,127,240,152,240,3,238,186,240,95,239,73,240,10,240,141,239,94,238,33,238,252,237,101,238,138,237,212,238,177,238,74,238,232,237,223,237,246,241,33,242,160,241,67,241,203,241,29,242,128,242,17,239,5,240,37,240,143,238,110,240,175,242,136,240,83,240,57,241,237,241,102,243,40,241,227,241,134,242,178,242,135,240,195,240,17,241,11,241,120,238,64,238,61,239,159,238,90,238,180,240,39,240,77,240,215,240,177,239,121,238,145,237,118,239,250,238,173,240,91,238,248,238,19,238,159,238,198,239,81,238,61,239,55,238,255,255,241,255,159,238,84,243,17,241,91,241,160,246,158,239,193,238,56,239,144,239,31,245,56,244,203,248,206,244,83,243,165,245,34,248,78,239,122,246,244,249,195,241,254,240,235,240,97,241,36,243,82,241,112,239,246,241,185,239,109,238,7,241,237,238,153,241,118,246,74,246,121,241,101,242,229,240,69,244,177,244,67,239,239,240,145,241,79,239,196,240,138,244,25,240,126,241,239,240,139,247,91,241,43,238,238,239,197,239,148,239,72,239,154,238,196,241,56,239,106,239,56,240,91,240,174,239,1,240,171,239,38,239,0,239,19,240,48,239,57,239,199,238,223,241,92,238,73,239,51,239,247,238,30,251,135,241,104,238,243,245,30,241,252,238,232,238,234,239,69,242,0,0,10,247,111,244,58,247,206,241,60,241,158,244,251,242,214,246,22,245,20,244,127,246,220,245,251,242,188,243,190,242,33,244,179,242,147,246,32,243,184,245,25,243,171,244,112,244,194,241,236,241,141,242,31,243,163,242,225,244,175,242,25,245,235,247,5,244,252,243,145,242,145,242,77,242,128,242,161,244,254,241,210,242,20,242,149,243,99,242,65,242,153,241,42,242,187,241,212,241,35,242,240,243,165,243,60,243,61,243,55,243,197,242,223,242,66,242,241,241,166,242,84,241,47,242,136,241,226,241,75,242,170,240,69,241,40,243,196,242,153,242,11,242,196,242,6,245,168,242,113,245,151,241,218,241,135,241,182,239,228,240,106,241,114,241,146,241,155,240,226,242,6,241,40,242,173,241,100,243,127,243,58,243,147,243,31,243,233,242,218,243,232,242,226,242,214,242,38,243,57,242,178,242,57,244,185,243,110,243,163,243,18,242,205,243,202,244,58,240,103,240,236,239,82,240,61,240,174,239,144,240,79,240,162,240,152,240,202,239,40,240,57,240,153,240,215,239,220,239,175,240,229,241,108,240,98,240,151,240,200,240,85,242,0,240,143,241,42,242,22,241,126,241,210,240,247,240,64,241,215,239,105,240,75,240,238,238,49,239,239,240,54,241,75,239,126,239,118,241,105,239,54,239,222,238,7,242,193,241,167,241,66,241,75,241,186,240,231,240,2,241,154,241,233,241,148,241,140,241,96,242,19,242,242,241,12,241,75,241,25,241,21,242,81,241,148,241,101,241,90,240,2,240,163,239,219,240,121,240,119,241,87,241,144,242,107,242,102,240,217,240,40,240,247,239,250,240,245,240,120,240,59,241,107,240,154,239,160,240,60,240,198,239,50,238,235,237,48,237,174,237,239,238,102,236,138,238,47,238,149,236,17,236,126,239,48,237,16,236,0,237,133,237,219,237,20,238,143,238,129,237,23,237,72,236,162,236,51,236,74,236,187,237,70,235,91,235,192,235,246,235,10,237,21,236,138,236,253,235,182,236,33,237,133,238,1,238,223,236,169,236,4,237,161,237,227,236,246,235,135,238,106,235,174,235,19,234,45,236,251,233,170,235,143,234,197,235,119,235,143,235,146,234,41,235,215,234,74,233,20,236,206,234,172,235,31,234,43,235,76,235,254,234,209,234,226,234,10,234,52,235,175,234,27,237,152,235,70,238,177,235,117,235,196,235,219,234,222,234,160,234,218,234,93,236,50,236,0,236,139,235,249,234,135,235,131,234,26,236,133,244,162,244,227,247,37,241,21,243,230,242,157,241,146,242,221,241,230,242,98,241,59,242,195,240,213,240,190,243,183,241,124,241,28,243,71,242,157,242,213,242,39,243,116,241,226,240,140,240,222,240,28,241,158,241,64,240,202,240,8,239,131,241,204,241,216,241,201,241,39,240,11,243,58,240,213,241,91,243,1,242,32,242,7,242,195,241,23,241,54,240,203,240,202,240,16,238,97,237,138,240,154,240,203,238,183,239,49,238,40,240,173,239,145,239,5,242,189,239,176,240,136,239,181,239,228,239,142,239,69,238,206,238,139,237,241,240,146,238,43,239,155,239,124,240,11,239,87,241,64,243,113,241,105,242,176,241,191,239,14,240,225,242,164,239,66,246,182,240,196,240,32,241,96,240,204,239,77,241,126,240,162,241,46,239,33,237,235,237,57,238,225,240,117,240,126,239,149,236,0,252,194,239,88,241,0,237,212,239,109,239,0,238,47,240,249,237,91,238,93,237,76,237,205,235,181,237,139,236,99,236,51,236,242,237,144,235,241,238,79,236,46,239,148,239,97,238,100,237,207,236,181,238,119,236,46,236,132,236,8,238,99,238,235,236,40,238,61,239,241,237,109,237,3,236,101,237,168,236,239,240,122,239,100,240,176,240,230,239,94,240,89,239,148,238,92,239,171,239,52,239,200,238,39,240,180,239,151,240,18,241,144,239,73,239,123,239,135,238,42,239,7,239,74,239,125,239,216,239,199,239,177,249,13,246,193,246,84,242,224,238,135,240,186,238,37,241,116,240,25,246,201,238,151,238,109,237,125,238,71,238,217,242,219,239,194,239,192,236,46,237,150,238,242,236,146,236,99,243,99,239,226,236,227,238,251,238,226,236,37,238,0,236,71,235,34,236,232,236,101,236,40,236,247,236,20,238,73,237,48,236,80,242,23,240,197,239,96,240,47,240,56,240,15,240,56,239,56,239,0,239,20,240,12,239,148,247,19,241,44,239,61,240,36,239,41,240,8,242,103,239,97,240,93,239,37,236,149,235,52,235,92,236,92,235,79,236,129,236,49,237,252,235,240,236,54,235,215,236,199,236,3,238,191,237,208,236,146,238,46,237,16,237,153,234,188,235,251,237,18,241,111,238,218,238,121,239,132,237,223,238,111,237,6,238,201,237,222,237,115,236,231,236,250,236,72,238,54,238,12,239,160,237,168,237,53,244,74,245,220,242,164,1,67,2,205,252,186,245,247,255,220,252,120,252,204,243,218,255,19,247,1,247,164,247,187,248,221,255,70,248,152,254,17,248,78,245,174,247,166,255,161,255,69,242,237,255,27,0,168,254,16,251,10,247,164,0,76,254,237,0,196,255,37,0,31,1,172,0,236,252,145,245,99,247,248,229,19,234,226,252,183,243,23,252,54,250,6,251,64,254,176,243,207,253,236,236,57,239,68,235,159,243,222,242,169,234,125,236,92,240,16,241,247,238,61,234,224,234,241,238,91,240,161,240,153,243,62,237,158,237,171,239,168,242,231,239,11,246,87,247,23,239,129,0,209,255,34,252,163,252,123,249,37,237,148,243,240,239,196,3,112,0,72,238,66,254,246,245,231,241,101,239,1,0,87,250,227,253,29,252,243,250,210,249,53,251,145,250,58,248,206,255,79,0,87,246,18,0,138,246,185,248,175,250,186,240,52,242,132,239,144,0,51,0,225,0,243,255,207,255,236,255,246,243,221,247,39,244,54,245,86,245,83,250,67,247,130,247,186,255,129,248,1,252,47,251,248,249,178,4,93,0,61,0,51,8,44,2,82,8,223,246,15,0,56,249,91,251,0,253,149,10,10,250,197,10,204,255,199,4,13,3,130,7,230,247,139,0,230,248,208,255,217,255,198,255,211,255,240,255,225,255,9,0,219,255,187,255,230,255,201,255,246,255,194,255,203,255,16,2,45,0,70,0,0,0,14,0,18,0,33,0,40,0,10,0,211,255,231,255,224,255,227,255,207,255,213,253,6,249,231,249,143,0,55,0,54,0,164,3,34,0,18,0,0,0,232,255,245,255,243,255,245,255,248,255,253,255,59,242,180,230,74,253,158,238,171,233,53,234,151,226,37,247,215,236,88,226,85,241,61,225,230,240,225,242,222,251,111,235,192,237,6,234,114,234,236,233,34,241,235,233,217,231,18,243,145,231,74,228,237,236,215,237,187,240,100,248,223,228,174,237,74,239,239,242,127,241,47,240,238,241,63,245,189,240,227,240,157,244,58,244,43,241,201,246,66,230,21,244,165,240,66,237,36,253,208,249,94,243,106,239,46,239,194,238,242,237,105,239,111,238,27,239,56,238,219,237,36,238,165,244,193,247,85,252,142,238,72,248,241,255,7,242,130,239,170,240,79,244,14,243,33,247,235,239,155,239,179,237,24,249,52,241,153,239,17,239,26,238,160,238,80,243,58,242,61,232,31,218,72,236,89,248,145,248,150,243,63,240,126,247,58,245,48,246,234,241,220,249,215,250,48,240,115,240,54,238,224,255,211,255,213,255,213,255,187,255,253,0,70,9,204,3,116,6,157,0,19,0,255,255,160,254,240,254,207,6,11,255,3,0,19,0,176,0,249,255,52,15,21,0,155,239,107,239,41,240,151,246,171,247,139,245,95,243,158,244,199,244,178,243,55,240,133,239,110,249,146,0,47,253,155,245,165,241,124,245,177,243,217,242,192,244,43,242,60,243,91,237,220,237,226,236,41,239,124,238,142,239,190,238,51,240,6,239,61,239,84,237,136,239,116,240,111,239,48,239,0,239,53,239,40,238,85,239,21,238,211,238,164,0,213,243,40,242,1,255,217,252,251,240,214,238,197,239,56,242,192,243,114,236,148,245,240,238,220,239,11,240,146,243,251,241,47,241,55,242,216,241,176,242,200,240,146,239,70,241,191,242,19,239,183,239,204,238,191,240,65,242,35,244,248,244,250,238,248,239,237,239,80,241,86,237,8,241,56,239,220,238,56,0,172,255,63,244,217,0,50,251,205,246,10,241,24,244,130,244,108,243,46,249,234,242,155,245,136,244,108,244,3,245,127,241,18,242,156,241,19,241,196,238,177,239,190,240,36,246,36,246,102,242,187,241,199,244,103,253,234,241,83,245,144,245,58,252,169,243,255,244,20,245,178,241,107,240,74,243,27,244,246,247,89,239,51,244,133,248,196,243,251,249,196,241,236,240,31,240,193,247,17,248,160,248,56,239,158,238,5,239,115,238,147,238,151,246,182,237,128,239,210,243,27,239,247,244,4,238,6,239,188,238,207,238,141,238,245,237,77,238,179,234,158,234,51,236,94,236,142,236,92,235,93,235,220,236,170,235,216,238,115,235,51,235,183,234,0,236,179,235,177,235,12,235,199,243,99,234,218,233,29,234,243,234,150,234,123,235,119,235,76,235,97,245,105,243,207,242,116,241,124,247,21,247,53,240,237,237,83,242,33,247,198,241,171,242,32,237,126,239,69,236,183,242,116,244,251,242,153,241,118,239,167,236,128,237,170,238,102,241,239,234,183,235,207,234,179,237,194,235,72,240,208,247,49,246,122,244,232,243,75,245,209,246,219,244,113,255,149,237,152,237,32,237,91,236,214,238,215,243,40,244,223,246,134,239,96,245,124,245,151,243,27,242,243,245,75,243,232,243,93,245,68,245,174,234,164,237,201,234,78,234,120,233,249,243,81,236,223,236,110,236,160,234,135,237,10,236,73,237,128,236,79,236,148,235,86,237,161,234,137,252,92,253,67,253,214,249,218,251,173,253,208,251,153,250,168,243,64,249,229,243,216,247,189,245,230,250,198,246,236,242,193,239,210,242,180,238,63,238,137,246,85,242,213,245,246,246,226,244,98,248,160,247,255,250,82,248,23,248,245,245,11,252,149,246,211,255,9,243,186,241,218,255,99,242,101,243,33,242,102,242,246,245,165,249,43,250,161,247,77,246,153,254,105,253,64,248,20,250,19,254,21,248,59,243,130,239,166,241,41,241,0,232,151,236,156,238,168,240,168,239,103,239,32,243,217,243,84,244,182,242,223,242,155,237,72,243,29,253,51,239,178,240,154,238,118,241,53,239,33,239,213,238,34,238,175,238,156,244,101,246,252,245,250,247,245,255,48,246,108,245,119,243,199,240,85,238,148,238,182,243,71,243,94,243,173,244,204,245,200,242,216,245,28,244,81,242,66,242,27,243,197,244,82,251,189,249,5,242,26,240,16,244,127,244,178,243,233,242,78,244,39,245,140,245,0,244,68,245,40,245,97,243,150,244,255,244,142,244,71,249,171,247,248,248,121,240,235,235,241,250,76,245,186,237,120,241,254,251,168,244,249,252,26,241,56,250,52,243,246,242,66,244,206,243,133,243,195,240,165,247,56,234,108,250,48,248,6,245,255,248,195,241,90,245,47,242,20,243,220,246,147,240,201,232,30,248,70,249,197,249,74,247,197,237,0,0,139,245,195,239,235,243,243,240,48,1,211,249,223,1,212,245,129,243,172,242,14,243,104,242,87,239,245,241,136,237,60,239,75,0,66,244,20,244,109,244,9,247,208,253,215,245,186,249,206,243,78,236,202,235,205,234,172,235,224,234,69,232,239,233,255,233,228,232,232,232,41,234,202,235,220,233,160,233,75,235,53,234,142,233,155,234,199,234,3,236,183,234,208,236,26,233,231,231,65,233,86,232,105,231,148,232,80,233,116,236,87,234,144,233,40,233,197,232,111,233,142,233,127,232,7,233,230,232,131,232,119,233,171,232,90,232,245,231,174,232,109,231,218,232,134,232,241,236,136,236,89,237,96,238,235,238,90,241,191,239,153,233,15,235,15,251,245,241,241,236,146,245,81,243,9,236,197,240,228,235,18,243,34,240,160,241,206,243,160,244,54,244,206,237,102,243,151,240,42,232,133,232,183,232,114,232,212,232,109,236,9,235,73,234,145,233,27,233,194,234,232,232,31,233,118,233,243,234,3,233,79,234,34,233,29,235,19,235,195,243,101,240,114,232,118,234,67,234,60,232,177,237,192,231,32,234,11,233,92,233,248,233,50,234,121,233,99,233,170,233,209,234,140,236,87,236,158,233,61,234,16,252,36,234,237,233,236,237,227,236,225,235,201,234,82,235,141,236,151,241,43,243,29,238,186,237,98,250,113,235,25,235,207,233,213,233,104,233,146,239,47,245,95,232,22,233,34,233,170,233,168,233,11,236,139,236,69,234,41,239,2,235,89,237,185,236,127,234,11,234,96,234,228,234,13,235,64,243,85,236,125,239,232,234,186,233,230,236,222,234,170,234,80,234,146,235,7,237,46,235,69,243,176,237,8,241,74,236,24,239,11,250,116,235,168,239,253,235,243,232,119,233,90,233,35,233,132,233,109,234,180,233,248,233,45,234,181,233,225,239,80,233,95,237,207,234,190,233,164,233,154,233,171,233,131,234,201,234,137,234,114,234,240,234,234,234,1,234,54,234,132,233,132,233,73,234,174,234,181,233,157,233,124,238,32,236,28,237,164,238,103,236,89,236,121,235,229,235,26,238,186,233,31,232,41,234,28,235,151,234,160,234,82,247,137,237,229,241,144,232,153,235,159,233,124,233,77,235,244,233,98,235,86,235,153,233,237,234,204,231,197,231,218,234,86,233,92,236,52,235,235,233,163,233,101,234,243,233,56,237,103,238,215,236,90,239,94,239,163,236,72,239,145,238,104,237,6,246,227,238,69,238,169,242,144,241,54,237,215,240,208,238,53,241,119,235,75,238,222,235,185,237,192,238,89,239,141,236,49,237,176,237,201,238,72,243,210,245,86,233,19,235,120,236,76,235,128,239,108,234,70,236,245,235,139,234,110,235,225,241,149,234,105,235,216,235,115,236,206,234,45,235,80,236,214,232,125,234,61,233,82,233,236,232,138,234,114,246,28,237,224,246,45,242,189,236,178,234,186,233,5,234,183,233,241,234,47,235,158,234,108,235,22,234,105,235,243,232,12,238,218,246,164,251,140,243,150,235,220,234,12,235,92,235,97,234,130,240,14,237,49,236,65,235,220,234,107,235,79,235,198,235,11,238,181,233,96,236,49,243,252,235,139,239,35,241,20,239,223,239,83,240,189,245,211,242,141,236,235,240,6,246,79,240,47,240,46,234,183,233,71,235,184,234,41,235,244,233,179,234,86,237,23,235,71,237,103,236,216,234,141,237,255,247,159,236,235,233,15,235,206,233,186,233,133,234,198,237,8,235,15,235,73,248,250,240,213,234,185,234,118,235,13,253,17,245,131,251,130,251,199,239,137,247,213,240,176,238,81,238,167,242,244,237,50,238,149,248,55,0,92,237,19,243,188,252,210,247,167,239,236,237,0,238,233,237,195,248,149,245,35,245,101,243,11,249,111,249,215,233,104,247,178,242,200,248,158,0,217,252,185,244,45,246,249,245,59,250,88,247,3,248,84,245,92,243,187,243,117,248,244,240,212,249,40,246,233,242,13,250,11,233,243,247,2,248,95,247,125,255,138,0,0,255,79,232,248,230,43,231,40,237,50,252,196,249,202,247,100,252,20,243,149,255,158,244,26,245,152,234,57,243,101,230,143,247,220,0,43,248,72,245,218,242,145,249,46,252,201,244,101,0,202,237,137,224,20,243,190,243,0,0,138,249,208,246,208,254,10,237,10,239,199,239,236,243,218,234,71,236,120,235,137,234,9,239,212,238,238,238,1,243,21,240,250,239,224,240,25,236,224,239,242,239,40,239,112,237,162,239,76,238,192,237,73,237,80,237,202,236,219,235,190,235,144,237,14,236,221,236,91,236,197,236,247,238,132,239,14,239,145,238,230,239,213,238,206,238,137,239,86,238,232,238,161,238,195,236,142,239,36,239,104,239,200,238,134,237,140,237,23,237,19,243,240,241,195,242,248,240,254,241,96,241,190,247,23,242,164,242,45,242,26,243,139,242,254,243,87,245,229,238,119,238,175,238,191,242,153,239,6,244,80,240,130,239,144,241,111,244,84,243,153,243,188,239,153,238,135,240,58,239,178,238,225,238,135,239,86,239,39,239,180,239,114,240,207,238,45,240,15,240,205,239,226,238,103,239,99,238,183,244,56,233,234,233,71,233,69,232,98,235,122,233,201,232,249,232,102,233,55,233,186,232,81,232,40,232,85,232,115,232,221,232,122,232,152,232,74,232,147,232,124,232,44,244,167,240,50,237,40,237,77,236,76,239,229,235,205,242,96,242,20,243,168,237,251,243,206,241,30,240,222,239,124,238,229,255,0,242,27,240,165,244,96,244,225,238,61,238,210,238,221,237,10,240,179,236,62,237,173,248,165,240,190,241,209,236,176,243,247,248,200,232,2,235,246,233,16,236,248,233,155,234,36,243,168,246,8,241,9,237,188,247,134,238,124,236,224,237,122,236,60,235,112,235,175,237,93,243,74,240,252,255,5,235,93,234,165,239,253,235,216,255,25,238,194,237,209,232,106,233,22,233,145,233,236,234,243,235,182,234,105,234,37,243,191,243,106,242,112,244,73,246,151,238,29,239,235,245,246,239,87,245,177,239,20,246,141,249,201,249,187,248,0,0,107,247,173,248,231,246,3,245,88,248,193,248,38,236,172,237,133,238,195,236,149,237,44,244,40,244,219,241,32,241,195,242,107,240,81,239,231,238,225,238,153,238,176,238,91,241,130,239,117,241,17,239,85,242,151,239,186,236,135,237,48,238,117,238,244,239,217,248,182,247,189,247,16,248,102,248,117,244,253,255,144,245,46,244,159,242,188,244,229,246,100,245,21,245,163,239,147,245,12,241,192,238,245,243,255,240,197,241,140,245,83,244,104,247,114,246,148,245,208,245,47,249,113,247,121,248,129,249,28,248,192,245,102,247,210,245,86,238,148,236,26,239,248,238,30,239,226,241,61,242,94,241,3,243,96,243,199,239,66,241,52,243,61,242,178,240,113,242,77,244,187,245,26,244,11,241,119,243,226,239,94,250,204,242,155,239,76,240,171,241,145,240,183,240,228,238,87,240,83,238,29,242,83,241,157,240,200,239,4,241,101,241,69,244,116,243,74,241,51,241,190,242,8,244,131,241,32,240,237,240,141,239,214,239,86,240,255,238,107,239,160,239,151,239,73,239,123,240,56,239,123,238,198,238,2,239,90,238,156,238,255,237,228,237,97,237,233,238,92,238,229,238,211,237,35,238,0,238,219,238,125,238,187,238,197,242,162,243,174,244,123,243,177,244,138,237,119,237,84,242,172,241,103,241,252,241,39,241,77,242,151,238,187,237,114,241,94,237,242,239,246,243,201,238,96,239,136,239,245,238,172,238,114,238,230,240,126,240,230,240,196,239,21,240,6,240,58,240,92,240,200,239,217,238,107,238,116,238,109,238,75,239,218,238,52,239,108,239,109,239,88,239,10,0,101,255,216,244,3,0,252,255,189,0,109,242,193,242,220,241,203,250,194,252,35,1,130,0,148,253,75,0,26,1,247,255,25,0,129,241,104,241,42,241,225,241,175,241,1,242,160,242,55,241,244,244,62,255,249,250,210,241,12,241,106,245,123,237,70,239,38,244,38,241,88,241,78,238,19,238,179,239,89,239,232,238,4,238,131,237,37,248,109,246,229,245,116,242,47,243,239,245,169,239,166,244,126,240,255,238,93,243,39,240,181,240,246,255,181,240,35,240,226,239,147,244,93,239,32,243,210,255,29,2,169,238,128,239,44,239,204,238,7,239,172,241,19,239,165,239,74,0,246,0,29,0,57,0,159,0,114,0,234,0,69,255,230,255,3,0,59,0,226,255,6,0,28,0,164,0,225,0,189,0,93,0,222,0,186,0,69,0,52,0,29,0,9,0,36,0,133,0,204,240,61,241,40,241,130,241,216,240,0,242,114,242,142,246,131,241,9,245,181,242,43,242,111,244,179,240,188,241,12,244,246,246,180,248,99,243,39,245,156,243,143,244,52,243,233,241,193,242,43,244,150,0,99,2,231,0,60,2,136,2,23,2,155,1,131,1,180,1,86,2,242,0,15,1,31,3,18,2,107,2,255,1,76,2,129,1,27,255,218,255,121,252,29,2,172,2,85,2,254,255,156,0,89,2,139,2,242,1,244,1,137,253,126,253,249,246,203,255,58,0,232,250,202,255,160,255,152,255,124,255,229,0,166,0,253,255,23,0,0,0,166,255,221,255,36,0,22,247,212,245,145,246,251,254,103,249,17,250,103,248,107,247,160,244,39,245,207,246,193,245,113,240,243,237,61,241,4,241,234,244,183,240,127,252,152,246,0,0,125,254,219,1,54,2,241,1,12,3,76,2,234,247,172,255,235,255,216,255,214,250,177,0,82,2,178,0,199,255,173,0,108,1,247,254,18,0,249,255,71,3,72,3,145,2,116,240,165,239,35,240,143,240,101,240,222,237,58,238,251,238,178,238,136,238,185,238,56,239,68,243,170,248,49,240,15,240,202,242,31,240,64,239,143,239,48,239,196,239,93,250,23,247,92,246,78,245,16,249,123,249,54,249,206,252,196,248,197,247,182,239,128,247,200,240,144,239,124,242,168,248,206,247,235,248,9,251,132,238,110,241,80,246,12,0,179,255,192,255,13,0,22,0,250,0,206,255,107,241,213,2,38,3,225,0,74,0,140,2,219,4,119,0,153,242,249,255,225,255,27,239,48,239,90,251,217,238,247,238,52,242,172,255,114,248,230,247,64,250,64,247,52,251,0,255,57,245,167,247,162,249,2,255,119,255,54,250,173,254,104,251,145,255,211,247,141,248,128,249,85,248,0,0,208,255,86,0,227,255,170,255,206,255,0,0,0,1,49,0,15,0,132,0,38,0,161,1,142,0,77,250,63,253,217,248,167,255,165,255,153,255,183,255,160,255,202,255,241,255,225,255,202,255,253,255,85,255,20,0,55,1,108,2,34,251,175,255,78,248,145,248,171,246,36,3,106,4,242,1,149,1,13,0,189,255,226,255,201,0,14,2,237,1,106,2,32,1,16,2,47,1,252,0,38,1,137,2,177,3,127,0,53,1,137,0,97,3,213,2,7,3,109,1,39,0,219,0,143,1,9,1,62,0,33,0,207,0,203,0,37,1,93,0,70,2,30,0,134,0,212,0,182,0,52,1,11,1,181,0,173,0,42,2,195,4,170,0,57,2,198,255,133,0,150,0,188,0,196,2,137,3,222,0,198,1,215,3,45,4,243,255,65,2,4,0,156,0,251,2,157,0,134,239,35,239,227,241,33,245,13,241,223,255,136,246,228,255,180,255,14,255,119,255,157,255,88,254,100,249,150,255,35,252,153,255,139,252,100,251,18,251,134,255,23,250,62,248,117,248,130,246,205,250,84,1,227,255,0,0,160,3,34,0,169,255,124,1,212,255,174,255,194,255,250,255,70,0,28,0,211,255,8,0,201,255,4,0,238,255,177,238,96,238,215,238,181,238,162,239,85,239,113,239,168,0,130,235,252,255,92,247,182,251,254,238,240,238,120,248,22,248,249,248,183,239,171,250,27,239,145,1,85,247,49,252,75,238,207,251,223,237,215,255,3,0,238,255,0,0,193,255,0,0,5,0,213,255,6,0,205,255,29,0,226,0,85,0,192,255,19,2,39,0,51,1,206,255,18,0,75,0,6,0,12,0,225,255,146,0,69,0,217,255,74,2,221,0,5,0,52,0,97,0,246,255,230,255,16,0,210,255,98,253,24,254,45,246,70,0,249,254,138,254,30,254,185,254,222,255,185,255,207,255,204,255,199,255,200,255,188,255,17,1,236,255,77,0,195,0,64,0,207,255,196,255,215,255,253,4,36,0,203,8,29,0,206,255,203,0,48,0,198,255,57,252,136,5,15,251,177,251,83,255,173,255,170,255,251,255,41,239,172,243,185,239,15,239,40,239,54,3,249,254,123,246,88,248,11,0,56,250,208,246,36,248,175,250,84,239,91,240,75,250,58,241,121,246,127,247,157,245,53,239,167,0,242,255,200,0,173,1,213,0,216,255,214,255,43,0,10,0,4,0,205,255,213,255,219,0,11,1,164,0,139,0,25,0,92,0,13,0,214,3,58,0,8,0,194,255,184,255,199,255,0,0,214,255,161,253,109,252,209,255,162,255,166,255,124,255,228,255,195,255,221,255,173,255,195,255,214,255,215,255,211,255,165,255,180,255,171,255,138,1,48,0,222,2,17,4,247,0,239,255,229,255,237,255,2,0,2,0,204,251,149,255,255,252,186,255,203,255,5,0,227,255,230,255,220,0,61,2,32,1,2,1,210,1,83,2,214,0,39,3,231,1,207,5,247,0,93,1,227,3,20,5,205,1,30,2,217,5,10,5,208,4,169,3,24,4,80,1,149,3,209,1,124,4,147,3,108,3,224,1,73,2,17,3,87,2,230,2,111,2,118,4,238,1,29,1,88,1,235,5,107,1,22,7,60,3,46,2,14,6,244,2,91,3,170,2,162,2,217,4,112,6,163,7,52,11,93,8,97,10,110,5,127,11,198,4,46,9,14,6,224,7,23,8,205,7,93,10,176,4,239,6,176,4,166,4,70,7,251,4,145,8,230,6,7,5,157,10,179,6,47,7,165,5,81,9,118,4,204,8,68,10,219,6,182,6,255,7,193,8,51,11,126,7,52,5,99,8,165,3,130,4,13,10,190,6,161,10,181,1,148,0,191,0,151,0,165,0,186,0,11,1,157,14,23,13,235,9,164,10,241,14,30,14,233,0,78,2,222,0,169,17,72,17,76,2,149,8,202,17,1,15,141,7,215,0,90,3,252,1,228,18,248,21,189,17,54,21,1,19,155,19,48,19,32,19,188,19,89,5,59,16,214,6,6,20,134,19,13,19,21,19,162,19,10,20,224,19,238,18,152,16,0,18,13,20,227,22,66,20,123,17,235,19,141,19,147,19,213,19,77,15,219,1,241,11,149,9,134,13,30,14,216,6,137,18,60,15,164,4,168,10,134,6,33,8,253,14,86,4,96,4,183,4,21,4,43,4,233,3,211,4,119,4,147,4,80,10,114,4,248,6,81,16,241,20,156,21,137,20,206,18,91,5,192,5,18,5,97,7,124,20,195,14,247,12,63,21,42,14,168,11,183,18,152,21,177,20,41,2,19,2,157,1,79,7,40,2,103,2,232,1,27,7,90,5,13,6,177,6,159,7,140,5,46,6,223,11,7,15,197,15,134,2,219,6,7,2,130,13,233,14,61,11,32,2,55,6,171,4,238,4,32,5,236,3,30,4,158,3,39,5,105,4,250,15,128,15,166,16,43,9,162,9,221,15,24,6,109,5,96,4,6,5,253,4,199,5,181,4,96,6,58,5,75,5,65,4,26,5,26,5,138,19,107,19,231,18,80,18,125,20,41,17,226,17,53,19,72,17,74,16,225,15,176,14,7,18,75,16,12,17,194,16,98,18,27,17,249,12,126,10,232,12,161,18,127,15,216,16,141,17,172,15,4,17,25,19,73,17,4,18,107,8,57,14,160,9,67,7,7,10,55,13,46,18,127,14,150,13,137,13,186,15,16,14,178,13,161,17,206,16,67,14,190,13,255,11,1,2,24,16,118,11,218,3,70,5,51,4,214,3,133,3,155,3,122,3,189,3,176,6,176,1,43,2,105,2,141,1,223,12,219,7,78,10,133,14,104,10,203,3,80,19,238,18,85,20,229,19,135,20,231,13,129,10,15,19,173,11,165,10,237,12,55,19,253,15,146,4,95,19,174,18,222,11,51,16,100,15,23,19,37,18,48,19,18,5,170,4,171,5,12,4,254,3,127,3,124,4,55,3,191,6,159,0,116,2,0,6,1,7,6,20,163,5,162,6,40,5,25,6,184,5,81,5,22,5,36,5,244,3,68,3,70,3,100,3,87,3,160,18,234,4,105,3,171,7,120,7,132,7,47,4,113,255,6,1,97,4,25,3,43,3,69,4,81,246,96,242,49,248,4,243,241,240,12,255,148,247,253,246,3,241,248,242,97,239,189,240,10,241,60,241,140,240,179,240,142,241,40,241,236,242,10,244,164,245,161,240,225,1,236,255,159,255,137,255,228,255,246,255,63,254,71,245,48,245,210,245,233,255,210,252,192,245,107,254,184,250,205,255,223,248,139,243,183,246,237,244,197,251,132,243,213,252,93,252,12,247,188,246,19,243,181,246,174,242,213,242,215,243,117,243,128,243,121,241,227,241,251,242,100,242,114,242,57,242,119,242,58,245,157,244,223,244,46,244,110,244,230,244,141,243,30,244,136,243,253,242,76,243,154,243,184,254,96,250,94,252,168,241,192,242,164,244,123,243,7,244,46,244,27,243,209,241,133,242,15,242,91,242,219,242,76,243,21,243,229,242,77,3,56,1,62,5,154,3,177,4,163,16,14,9,187,3,23,9,45,9,164,1,134,1,171,4,103,6,185,4,198,3,104,9,33,6,105,9,220,1,194,4,136,3,116,18,236,20,66,19,105,20,120,18,91,20,156,19,229,2,111,3,210,0,132,2,148,7,55,2,77,0,104,2,210,7,35,18,9,17,18,18,211,18,158,11,238,17,30,15,236,7,51,5,86,12,56,0,230,1,26,4,196,2,39,4,33,1,245,2,249,5,153,3,179,3,130,3,25,4,230,2,93,4,101,0,210,3,230,0,118,2,236,5,120,3,34,7,119,4,126,4,95,1,165,3,62,2,236,16,213,12,191,14,82,12,243,9,245,0,46,5,138,3,246,0,138,4,0,6,222,5,97,7,104,6,181,5,116,12,88,9,228,9,102,0,230,0,114,0,136,0,171,0,185,1,243,1,113,1,61,1,219,0,59,2,28,1,29,1,21,4,206,0,237,0,195,0,224,0,38,1,60,1,134,1,219,0,10,0,136,0,44,2,245,1,192,0,226,0,205,0,68,4,78,1,112,1,40,2,46,2,13,3,28,1,51,1,190,1,97,1,16,2,43,1,58,1,79,1,248,1,117,2,138,1,124,1,245,0,78,19,1,21,154,18,229,18,147,19,179,20,71,17,178,15,222,21,217,11,98,11,49,1,42,20,63,23,35,1,58,0,187,0,176,4,66,0,130,0,86,0,79,0,110,0,61,18,247,23,193,20,154,1,206,1,139,1,99,1,68,1,176,0,112,0,92,0,47,1,248,1,186,3,163,0,174,0,172,0,132,0,228,0,122,0,142,0,26,0,186,0,13,1,250,255,3,0,198,0,165,0,255,255,166,0,2,0,63,1,91,0,166,246,129,246,12,0,250,245,210,247,221,246,117,248,36,0,7,0,33,0,150,19,240,13,178,18,119,20,198,13,239,0,221,0,15,0,18,0,13,0,36,0,137,0,58,1,245,3,83,0,6,3,26,0,42,0,13,0,103,0,92,0,121,0,229,255,104,244,193,245,11,0,233,1,35,246,197,245,29,247,161,246,76,247,168,245,31,245,141,0,27,1,217,0,67,2,254,255,48,0,194,252,139,245,126,247,182,255,125,5,7,0,28,0,195,0,202,255,108,0,154,255,254,255,5,0,3,0,20,247,135,249,39,248,212,247,190,249,253,255,130,255,174,255];exports.default=e;
},{}],"ZOQH":[function(require,module,exports) {
"use strict";exports.byteLength=u,exports.toByteArray=i,exports.fromByteArray=d;for(var r=[],t=[],e="undefined"!=typeof Uint8Array?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,a=n.length;o<a;++o)r[o]=n[o],t[n.charCodeAt(o)]=o;function h(r){var t=r.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=r.indexOf("=");return-1===e&&(e=t),[e,e===t?0:4-e%4]}function u(r){var t=h(r),e=t[0],n=t[1];return 3*(e+n)/4-n}function c(r,t,e){return 3*(t+e)/4-e}function i(r){for(var n,o=h(r),a=o[0],u=o[1],i=new e(c(r,a,u)),f=0,A=u>0?a-4:a,d=0;d<A;d+=4)n=t[r.charCodeAt(d)]<<18|t[r.charCodeAt(d+1)]<<12|t[r.charCodeAt(d+2)]<<6|t[r.charCodeAt(d+3)],i[f++]=n>>16&255,i[f++]=n>>8&255,i[f++]=255&n;return 2===u&&(n=t[r.charCodeAt(d)]<<2|t[r.charCodeAt(d+1)]>>4,i[f++]=255&n),1===u&&(n=t[r.charCodeAt(d)]<<10|t[r.charCodeAt(d+1)]<<4|t[r.charCodeAt(d+2)]>>2,i[f++]=n>>8&255,i[f++]=255&n),i}function f(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function A(r,t,e){for(var n,o=[],a=t;a<e;a+=3)n=(r[a]<<16&16711680)+(r[a+1]<<8&65280)+(255&r[a+2]),o.push(f(n));return o.join("")}function d(t){for(var e,n=t.length,o=n%3,a=[],h=0,u=n-o;h<u;h+=16383)a.push(A(t,h,h+16383>u?u:h+16383));return 1===o?(e=t[n-1],a.push(r[e>>2]+r[e<<4&63]+"==")):2===o&&(e=(t[n-2]<<8)+t[n-1],a.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),a.join("")}t["-".charCodeAt(0)]=62,t["_".charCodeAt(0)]=63;
},{}],"ajdM":[function(require,module,exports) {
exports.read=function(a,o,t,r,h){var M,p,w=8*h-r-1,f=(1<<w)-1,e=f>>1,i=-7,N=t?h-1:0,n=t?-1:1,s=a[o+N];for(N+=n,M=s&(1<<-i)-1,s>>=-i,i+=w;i>0;M=256*M+a[o+N],N+=n,i-=8);for(p=M&(1<<-i)-1,M>>=-i,i+=r;i>0;p=256*p+a[o+N],N+=n,i-=8);if(0===M)M=1-e;else{if(M===f)return p?NaN:1/0*(s?-1:1);p+=Math.pow(2,r),M-=e}return(s?-1:1)*p*Math.pow(2,M-r)},exports.write=function(a,o,t,r,h,M){var p,w,f,e=8*M-h-1,i=(1<<e)-1,N=i>>1,n=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,s=r?0:M-1,u=r?1:-1,l=o<0||0===o&&1/o<0?1:0;for(o=Math.abs(o),isNaN(o)||o===1/0?(w=isNaN(o)?1:0,p=i):(p=Math.floor(Math.log(o)/Math.LN2),o*(f=Math.pow(2,-p))<1&&(p--,f*=2),(o+=p+N>=1?n/f:n*Math.pow(2,1-N))*f>=2&&(p++,f/=2),p+N>=i?(w=0,p=i):p+N>=1?(w=(o*f-1)*Math.pow(2,h),p+=N):(w=o*Math.pow(2,N-1)*Math.pow(2,h),p=0));h>=8;a[t+s]=255&w,s+=u,w/=256,h-=8);for(p=p<<h|w,e+=h;e>0;a[t+s]=255&p,s+=u,p/=256,e-=8);a[t+s-u]|=128*l};
},{}],"BzwP":[function(require,module,exports) {
var r={}.toString;module.exports=Array.isArray||function(t){return"[object Array]"==r.call(t)};
},{}],"S4UE":[function(require,module,exports) {

var global = arguments[3];
var t=arguments[3],r=require("base64-js"),e=require("ieee754"),n=require("isarray");function i(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(r){return!1}}function o(){return f.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function u(t,r){if(o()<r)throw new RangeError("Invalid typed array length");return f.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(r)).__proto__=f.prototype:(null===t&&(t=new f(r)),t.length=r),t}function f(t,r,e){if(!(f.TYPED_ARRAY_SUPPORT||this instanceof f))return new f(t,r,e);if("number"==typeof t){if("string"==typeof r)throw new Error("If encoding is specified then the first argument must be a string");return c(this,t)}return s(this,t,r,e)}function s(t,r,e,n){if("number"==typeof r)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&r instanceof ArrayBuffer?g(t,r,e,n):"string"==typeof r?l(t,r,e):y(t,r)}function h(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function a(t,r,e,n){return h(r),r<=0?u(t,r):void 0!==e?"string"==typeof n?u(t,r).fill(e,n):u(t,r).fill(e):u(t,r)}function c(t,r){if(h(r),t=u(t,r<0?0:0|w(r)),!f.TYPED_ARRAY_SUPPORT)for(var e=0;e<r;++e)t[e]=0;return t}function l(t,r,e){if("string"==typeof e&&""!==e||(e="utf8"),!f.isEncoding(e))throw new TypeError('"encoding" must be a valid string encoding');var n=0|v(r,e),i=(t=u(t,n)).write(r,e);return i!==n&&(t=t.slice(0,i)),t}function p(t,r){var e=r.length<0?0:0|w(r.length);t=u(t,e);for(var n=0;n<e;n+=1)t[n]=255&r[n];return t}function g(t,r,e,n){if(r.byteLength,e<0||r.byteLength<e)throw new RangeError("'offset' is out of bounds");if(r.byteLength<e+(n||0))throw new RangeError("'length' is out of bounds");return r=void 0===e&&void 0===n?new Uint8Array(r):void 0===n?new Uint8Array(r,e):new Uint8Array(r,e,n),f.TYPED_ARRAY_SUPPORT?(t=r).__proto__=f.prototype:t=p(t,r),t}function y(t,r){if(f.isBuffer(r)){var e=0|w(r.length);return 0===(t=u(t,e)).length?t:(r.copy(t,0,0,e),t)}if(r){if("undefined"!=typeof ArrayBuffer&&r.buffer instanceof ArrayBuffer||"length"in r)return"number"!=typeof r.length||W(r.length)?u(t,0):p(t,r);if("Buffer"===r.type&&n(r.data))return p(t,r.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function w(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function d(t){return+t!=t&&(t=0),f.alloc(+t)}function v(t,r){if(f.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var e=t.length;if(0===e)return 0;for(var n=!1;;)switch(r){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":case void 0:return $(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return K(t).length;default:if(n)return $(t).length;r=(""+r).toLowerCase(),n=!0}}function E(t,r,e){var n=!1;if((void 0===r||r<0)&&(r=0),r>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(r>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return x(this,r,e);case"utf8":case"utf-8":return Y(this,r,e);case"ascii":return L(this,r,e);case"latin1":case"binary":return D(this,r,e);case"base64":return S(this,r,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,r,e);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function b(t,r,e){var n=t[r];t[r]=t[e],t[e]=n}function R(t,r,e,n,i){if(0===t.length)return-1;if("string"==typeof e?(n=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:t.length-1),e<0&&(e=t.length+e),e>=t.length){if(i)return-1;e=t.length-1}else if(e<0){if(!i)return-1;e=0}if("string"==typeof r&&(r=f.from(r,n)),f.isBuffer(r))return 0===r.length?-1:_(t,r,e,n,i);if("number"==typeof r)return r&=255,f.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,r,e):Uint8Array.prototype.lastIndexOf.call(t,r,e):_(t,[r],e,n,i);throw new TypeError("val must be string, number or Buffer")}function _(t,r,e,n,i){var o,u=1,f=t.length,s=r.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||r.length<2)return-1;u=2,f/=2,s/=2,e/=2}function h(t,r){return 1===u?t[r]:t.readUInt16BE(r*u)}if(i){var a=-1;for(o=e;o<f;o++)if(h(t,o)===h(r,-1===a?0:o-a)){if(-1===a&&(a=o),o-a+1===s)return a*u}else-1!==a&&(o-=o-a),a=-1}else for(e+s>f&&(e=f-s),o=e;o>=0;o--){for(var c=!0,l=0;l<s;l++)if(h(t,o+l)!==h(r,l)){c=!1;break}if(c)return o}return-1}function A(t,r,e,n){e=Number(e)||0;var i=t.length-e;n?(n=Number(n))>i&&(n=i):n=i;var o=r.length;if(o%2!=0)throw new TypeError("Invalid hex string");n>o/2&&(n=o/2);for(var u=0;u<n;++u){var f=parseInt(r.substr(2*u,2),16);if(isNaN(f))return u;t[e+u]=f}return u}function m(t,r,e,n){return Q($(r,t.length-e),t,e,n)}function P(t,r,e,n){return Q(G(r),t,e,n)}function T(t,r,e,n){return P(t,r,e,n)}function B(t,r,e,n){return Q(K(r),t,e,n)}function U(t,r,e,n){return Q(H(r,t.length-e),t,e,n)}function S(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function Y(t,r,e){e=Math.min(t.length,e);for(var n=[],i=r;i<e;){var o,u,f,s,h=t[i],a=null,c=h>239?4:h>223?3:h>191?2:1;if(i+c<=e)switch(c){case 1:h<128&&(a=h);break;case 2:128==(192&(o=t[i+1]))&&(s=(31&h)<<6|63&o)>127&&(a=s);break;case 3:o=t[i+1],u=t[i+2],128==(192&o)&&128==(192&u)&&(s=(15&h)<<12|(63&o)<<6|63&u)>2047&&(s<55296||s>57343)&&(a=s);break;case 4:o=t[i+1],u=t[i+2],f=t[i+3],128==(192&o)&&128==(192&u)&&128==(192&f)&&(s=(15&h)<<18|(63&o)<<12|(63&u)<<6|63&f)>65535&&s<1114112&&(a=s)}null===a?(a=65533,c=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|1023&a),n.push(a),i+=c}return O(n)}exports.Buffer=f,exports.SlowBuffer=d,exports.INSPECT_MAX_BYTES=50,f.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:i(),exports.kMaxLength=o(),f.poolSize=8192,f._augment=function(t){return t.__proto__=f.prototype,t},f.from=function(t,r,e){return s(null,t,r,e)},f.TYPED_ARRAY_SUPPORT&&(f.prototype.__proto__=Uint8Array.prototype,f.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&f[Symbol.species]===f&&Object.defineProperty(f,Symbol.species,{value:null,configurable:!0})),f.alloc=function(t,r,e){return a(null,t,r,e)},f.allocUnsafe=function(t){return c(null,t)},f.allocUnsafeSlow=function(t){return c(null,t)},f.isBuffer=function(t){return!(null==t||!t._isBuffer)},f.compare=function(t,r){if(!f.isBuffer(t)||!f.isBuffer(r))throw new TypeError("Arguments must be Buffers");if(t===r)return 0;for(var e=t.length,n=r.length,i=0,o=Math.min(e,n);i<o;++i)if(t[i]!==r[i]){e=t[i],n=r[i];break}return e<n?-1:n<e?1:0},f.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},f.concat=function(t,r){if(!n(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return f.alloc(0);var e;if(void 0===r)for(r=0,e=0;e<t.length;++e)r+=t[e].length;var i=f.allocUnsafe(r),o=0;for(e=0;e<t.length;++e){var u=t[e];if(!f.isBuffer(u))throw new TypeError('"list" argument must be an Array of Buffers');u.copy(i,o),o+=u.length}return i},f.byteLength=v,f.prototype._isBuffer=!0,f.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var r=0;r<t;r+=2)b(this,r,r+1);return this},f.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var r=0;r<t;r+=4)b(this,r,r+3),b(this,r+1,r+2);return this},f.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var r=0;r<t;r+=8)b(this,r,r+7),b(this,r+1,r+6),b(this,r+2,r+5),b(this,r+3,r+4);return this},f.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?Y(this,0,t):E.apply(this,arguments)},f.prototype.equals=function(t){if(!f.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===f.compare(this,t)},f.prototype.inspect=function(){var t="",r=exports.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(t+=" ... ")),"<Buffer "+t+">"},f.prototype.compare=function(t,r,e,n,i){if(!f.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===r&&(r=0),void 0===e&&(e=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),r<0||e>t.length||n<0||i>this.length)throw new RangeError("out of range index");if(n>=i&&r>=e)return 0;if(n>=i)return-1;if(r>=e)return 1;if(this===t)return 0;for(var o=(i>>>=0)-(n>>>=0),u=(e>>>=0)-(r>>>=0),s=Math.min(o,u),h=this.slice(n,i),a=t.slice(r,e),c=0;c<s;++c)if(h[c]!==a[c]){o=h[c],u=a[c];break}return o<u?-1:u<o?1:0},f.prototype.includes=function(t,r,e){return-1!==this.indexOf(t,r,e)},f.prototype.indexOf=function(t,r,e){return R(this,t,r,e,!0)},f.prototype.lastIndexOf=function(t,r,e){return R(this,t,r,e,!1)},f.prototype.write=function(t,r,e,n){if(void 0===r)n="utf8",e=this.length,r=0;else if(void 0===e&&"string"==typeof r)n=r,e=this.length,r=0;else{if(!isFinite(r))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");r|=0,isFinite(e)?(e|=0,void 0===n&&(n="utf8")):(n=e,e=void 0)}var i=this.length-r;if((void 0===e||e>i)&&(e=i),t.length>0&&(e<0||r<0)||r>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return A(this,t,r,e);case"utf8":case"utf-8":return m(this,t,r,e);case"ascii":return P(this,t,r,e);case"latin1":case"binary":return T(this,t,r,e);case"base64":return B(this,t,r,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return U(this,t,r,e);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},f.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var I=4096;function O(t){var r=t.length;if(r<=I)return String.fromCharCode.apply(String,t);for(var e="",n=0;n<r;)e+=String.fromCharCode.apply(String,t.slice(n,n+=I));return e}function L(t,r,e){var n="";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(127&t[i]);return n}function D(t,r,e){var n="";e=Math.min(t.length,e);for(var i=r;i<e;++i)n+=String.fromCharCode(t[i]);return n}function x(t,r,e){var n=t.length;(!r||r<0)&&(r=0),(!e||e<0||e>n)&&(e=n);for(var i="",o=r;o<e;++o)i+=Z(t[o]);return i}function C(t,r,e){for(var n=t.slice(r,e),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function M(t,r,e){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+r>e)throw new RangeError("Trying to access beyond buffer length")}function k(t,r,e,n,i,o){if(!f.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(r>i||r<o)throw new RangeError('"value" argument is out of bounds');if(e+n>t.length)throw new RangeError("Index out of range")}function N(t,r,e,n){r<0&&(r=65535+r+1);for(var i=0,o=Math.min(t.length-e,2);i<o;++i)t[e+i]=(r&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function z(t,r,e,n){r<0&&(r=4294967295+r+1);for(var i=0,o=Math.min(t.length-e,4);i<o;++i)t[e+i]=r>>>8*(n?i:3-i)&255}function F(t,r,e,n,i,o){if(e+n>t.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function j(t,r,n,i,o){return o||F(t,r,n,4,3.4028234663852886e38,-3.4028234663852886e38),e.write(t,r,n,i,23,4),n+4}function q(t,r,n,i,o){return o||F(t,r,n,8,1.7976931348623157e308,-1.7976931348623157e308),e.write(t,r,n,i,52,8),n+8}f.prototype.slice=function(t,r){var e,n=this.length;if((t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(r=void 0===r?n:~~r)<0?(r+=n)<0&&(r=0):r>n&&(r=n),r<t&&(r=t),f.TYPED_ARRAY_SUPPORT)(e=this.subarray(t,r)).__proto__=f.prototype;else{var i=r-t;e=new f(i,void 0);for(var o=0;o<i;++o)e[o]=this[o+t]}return e},f.prototype.readUIntLE=function(t,r,e){t|=0,r|=0,e||M(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n},f.prototype.readUIntBE=function(t,r,e){t|=0,r|=0,e||M(t,r,this.length);for(var n=this[t+--r],i=1;r>0&&(i*=256);)n+=this[t+--r]*i;return n},f.prototype.readUInt8=function(t,r){return r||M(t,1,this.length),this[t]},f.prototype.readUInt16LE=function(t,r){return r||M(t,2,this.length),this[t]|this[t+1]<<8},f.prototype.readUInt16BE=function(t,r){return r||M(t,2,this.length),this[t]<<8|this[t+1]},f.prototype.readUInt32LE=function(t,r){return r||M(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},f.prototype.readUInt32BE=function(t,r){return r||M(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},f.prototype.readIntLE=function(t,r,e){t|=0,r|=0,e||M(t,r,this.length);for(var n=this[t],i=1,o=0;++o<r&&(i*=256);)n+=this[t+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*r)),n},f.prototype.readIntBE=function(t,r,e){t|=0,r|=0,e||M(t,r,this.length);for(var n=r,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*r)),o},f.prototype.readInt8=function(t,r){return r||M(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},f.prototype.readInt16LE=function(t,r){r||M(t,2,this.length);var e=this[t]|this[t+1]<<8;return 32768&e?4294901760|e:e},f.prototype.readInt16BE=function(t,r){r||M(t,2,this.length);var e=this[t+1]|this[t]<<8;return 32768&e?4294901760|e:e},f.prototype.readInt32LE=function(t,r){return r||M(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},f.prototype.readInt32BE=function(t,r){return r||M(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},f.prototype.readFloatLE=function(t,r){return r||M(t,4,this.length),e.read(this,t,!0,23,4)},f.prototype.readFloatBE=function(t,r){return r||M(t,4,this.length),e.read(this,t,!1,23,4)},f.prototype.readDoubleLE=function(t,r){return r||M(t,8,this.length),e.read(this,t,!0,52,8)},f.prototype.readDoubleBE=function(t,r){return r||M(t,8,this.length),e.read(this,t,!1,52,8)},f.prototype.writeUIntLE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||k(this,t,r,e,Math.pow(2,8*e)-1,0);var i=1,o=0;for(this[r]=255&t;++o<e&&(i*=256);)this[r+o]=t/i&255;return r+e},f.prototype.writeUIntBE=function(t,r,e,n){(t=+t,r|=0,e|=0,n)||k(this,t,r,e,Math.pow(2,8*e)-1,0);var i=e-1,o=1;for(this[r+i]=255&t;--i>=0&&(o*=256);)this[r+i]=t/o&255;return r+e},f.prototype.writeUInt8=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,1,255,0),f.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[r]=255&t,r+1},f.prototype.writeUInt16LE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,2,65535,0),f.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):N(this,t,r,!0),r+2},f.prototype.writeUInt16BE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,2,65535,0),f.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):N(this,t,r,!1),r+2},f.prototype.writeUInt32LE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,4,4294967295,0),f.TYPED_ARRAY_SUPPORT?(this[r+3]=t>>>24,this[r+2]=t>>>16,this[r+1]=t>>>8,this[r]=255&t):z(this,t,r,!0),r+4},f.prototype.writeUInt32BE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,4,4294967295,0),f.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):z(this,t,r,!1),r+4},f.prototype.writeIntLE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);k(this,t,r,e,i-1,-i)}var o=0,u=1,f=0;for(this[r]=255&t;++o<e&&(u*=256);)t<0&&0===f&&0!==this[r+o-1]&&(f=1),this[r+o]=(t/u>>0)-f&255;return r+e},f.prototype.writeIntBE=function(t,r,e,n){if(t=+t,r|=0,!n){var i=Math.pow(2,8*e-1);k(this,t,r,e,i-1,-i)}var o=e-1,u=1,f=0;for(this[r+o]=255&t;--o>=0&&(u*=256);)t<0&&0===f&&0!==this[r+o+1]&&(f=1),this[r+o]=(t/u>>0)-f&255;return r+e},f.prototype.writeInt8=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,1,127,-128),f.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[r]=255&t,r+1},f.prototype.writeInt16LE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,2,32767,-32768),f.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8):N(this,t,r,!0),r+2},f.prototype.writeInt16BE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,2,32767,-32768),f.TYPED_ARRAY_SUPPORT?(this[r]=t>>>8,this[r+1]=255&t):N(this,t,r,!1),r+2},f.prototype.writeInt32LE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,4,2147483647,-2147483648),f.TYPED_ARRAY_SUPPORT?(this[r]=255&t,this[r+1]=t>>>8,this[r+2]=t>>>16,this[r+3]=t>>>24):z(this,t,r,!0),r+4},f.prototype.writeInt32BE=function(t,r,e){return t=+t,r|=0,e||k(this,t,r,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),f.TYPED_ARRAY_SUPPORT?(this[r]=t>>>24,this[r+1]=t>>>16,this[r+2]=t>>>8,this[r+3]=255&t):z(this,t,r,!1),r+4},f.prototype.writeFloatLE=function(t,r,e){return j(this,t,r,!0,e)},f.prototype.writeFloatBE=function(t,r,e){return j(this,t,r,!1,e)},f.prototype.writeDoubleLE=function(t,r,e){return q(this,t,r,!0,e)},f.prototype.writeDoubleBE=function(t,r,e){return q(this,t,r,!1,e)},f.prototype.copy=function(t,r,e,n){if(e||(e=0),n||0===n||(n=this.length),r>=t.length&&(r=t.length),r||(r=0),n>0&&n<e&&(n=e),n===e)return 0;if(0===t.length||0===this.length)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-r<n-e&&(n=t.length-r+e);var i,o=n-e;if(this===t&&e<r&&r<n)for(i=o-1;i>=0;--i)t[i+r]=this[i+e];else if(o<1e3||!f.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+r]=this[i+e];else Uint8Array.prototype.set.call(t,this.subarray(e,e+o),r);return o},f.prototype.fill=function(t,r,e,n){if("string"==typeof t){if("string"==typeof r?(n=r,r=0,e=this.length):"string"==typeof e&&(n=e,e=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!f.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(r<0||this.length<r||this.length<e)throw new RangeError("Out of range index");if(e<=r)return this;var o;if(r>>>=0,e=void 0===e?this.length:e>>>0,t||(t=0),"number"==typeof t)for(o=r;o<e;++o)this[o]=t;else{var u=f.isBuffer(t)?t:$(new f(t,n).toString()),s=u.length;for(o=0;o<e-r;++o)this[o+r]=u[o%s]}return this};var V=/[^+\/0-9A-Za-z-_]/g;function X(t){if((t=J(t).replace(V,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}function J(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function Z(t){return t<16?"0"+t.toString(16):t.toString(16)}function $(t,r){var e;r=r||1/0;for(var n=t.length,i=null,o=[],u=0;u<n;++u){if((e=t.charCodeAt(u))>55295&&e<57344){if(!i){if(e>56319){(r-=3)>-1&&o.push(239,191,189);continue}if(u+1===n){(r-=3)>-1&&o.push(239,191,189);continue}i=e;continue}if(e<56320){(r-=3)>-1&&o.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(r-=3)>-1&&o.push(239,191,189);if(i=null,e<128){if((r-=1)<0)break;o.push(e)}else if(e<2048){if((r-=2)<0)break;o.push(e>>6|192,63&e|128)}else if(e<65536){if((r-=3)<0)break;o.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((r-=4)<0)break;o.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return o}function G(t){for(var r=[],e=0;e<t.length;++e)r.push(255&t.charCodeAt(e));return r}function H(t,r){for(var e,n,i,o=[],u=0;u<t.length&&!((r-=2)<0);++u)n=(e=t.charCodeAt(u))>>8,i=e%256,o.push(i),o.push(n);return o}function K(t){return r.toByteArray(X(t))}function Q(t,r,e,n){for(var i=0;i<n&&!(i+e>=r.length||i>=t.length);++i)r[i+e]=t[i];return i}function W(t){return t!=t}
},{"base64-js":"ZOQH","ieee754":"ajdM","isarray":"BzwP","buffer":"S4UE"}],"UVw2":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
var e=require("buffer").Buffer;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var r=n(require("./icosphere.js")),t=n(require("../data/data.js"));function n(e){return e&&e.__esModule?e:{default:e}}function i(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function a(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e,r,t){return r&&a(e.prototype,r),t&&a(e,t),e}var u=e.from(t.default),f=function(){function e(t){i(this,e),this.config=t;new Int16Array(u.buffer,0,1);var n=t.recursion_level,a=(0,r.default)(n);this.points=a.points,this.triangles=a.triangles,this.max_recursion_level=n;var o=new Int16Array(u.buffer,2,this.points.length);this.points.forEach(function(e,r){e.elevation=o[r]})}return o(e,[{key:"generateTriangles",value:function(){var e=(0,r.default)(this.config.recursion_level);this.triangles=e.triangles}}]),e}();exports.default=f;
},{"./icosphere.js":"mpMA","../data/data.js":"25oI","buffer":"S4UE"}],"prme":[function(require,module,exports) {

},{}],"MwGC":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var r=o(require("three")),e=require("fs");function o(r){if(r&&r.__esModule)return r;var e={};if(null!=r)for(var o in r)if(Object.prototype.hasOwnProperty.call(r,o)){var t=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(r,o):{};t.get||t.set?Object.defineProperty(e,o,t):e[o]=r[o]}return e.default=r,e}function t(r,e){if(!(r instanceof e))throw new TypeError("Cannot call a class as a function")}function n(r,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(r,t.key,t)}}function i(r,e,o){return e&&n(r.prototype,e),o&&n(r,o),r}var l="5000    255 255 255 255\r\n4000    201 122  52 255\r\n2000    217 166  39 255\r\n1000    102  51   0 255\r\n500      30  56   8 255\r\n100      60 110   9 255\r\n0        51 102   0 255\r\n-50     100 200 255 255\r\n-500     80 100 190 255\r\n-1000    60  90 180 255\r\n-2000    21  70 170 255\r\n-4000    21  65 150 255\r\n-6000    12  68 120 255\r\n-8000     0  14 100 255\r\n-11000   16   6 50 255";console.log(l);var a=function(){function e(r){var o=this;t(this,e),this.colors=l.split("\n").reverse().filter(function(r){return r.length>1}).map(function(r){var e=r.split(/\s+/);return{color:{r:parseInt(e[1]),g:parseInt(e[2]),b:parseInt(e[3])},elevation:parseInt(e[0])}}),this.min_elevation=this.colors[0].elevation,this.max_elevation=this.colors[this.colors.length-1].elevation,this.elevation_range=this.max_elevation-this.min_elevation,this.colors.forEach(function(r){r.percent="".concat((100*(o.min_elevation-r.elevation)/o.elevation_range).toFixed(2),"%")})}return i(e,[{key:"getColorRGB",value:function(r){for(var e=0;e<this.colors.length&&r>this.colors[e].elevation;)e++;if(0==e)return this.colors[0].color;if(e==this.colors.length)return this.colors[this.colors.length-1].color;var o=this.colors[e-1],t=this.colors[e];if(t.elevation-o.elevation==0)return o.color;var n=(r-o.elevation)/(t.elevation-o.elevation);return{r:o.color.r+(t.color.r-o.color.r)*n,g:o.color.g+(t.color.g-o.color.g)*n,b:o.color.b+(t.color.b-o.color.b)*n}}},{key:"getColor",value:function(e){var o=this.getColorRGB(e);return new r.Color(o.r/255,o.g/255,o.b/255)}}]),e}();exports.default=a;
},{"three":"gBK8","fs":"prme"}],"C9jC":[function(require,module,exports) {
module.exports=[{name:"recursion_level",label:"Polygon Count",type:"integer",min:1,max:6,default:5},{name:"elevation_scale",label:"Elevation Scale",type:"integer",min:1,max:800,default:375},{name:"compute_vertex_normals",label:"Use Vertex Normals",type:"boolean",default:!1},{name:"render_globe_interior",label:"Render Globe Interior",type:"boolean",default:!1},{name:"triangle_coloring",label:"Triangle Coloring",type:"enum",default:"min",options:[{name:"max",localized:"Highest Vertex Color"},{name:"min",localized:"Lowest Vertex Color"},{name:"avg",localized:"Average Vertex Color"},{name:"all",localized:"All Vertex Colors (gradient)"}]},{name:"color_gradient",label:"Color Gradient",type:"enum",default:"GMT_simple",options:[{name:"GMT_globe",localized:"Standard"},{name:"GMT_simple",localized:"Simple"},{name:"GMT_dem4",localized:"High Contrast"},{name:"GMT_sealand",localized:"Relief"},{name:"GMT_topo",localized:"Strange"}]},{name:"material",label:"Material",type:"enum",default:"lambert",options:[{name:"lambert",localized:"Lambert"},{name:"standard",localized:"Standard"},{name:"basic",localized:"Basic"}]},{name:"rotation",label:"Rotation",type:"boolean",default:!1},{name:"ambient_light_intensity",label:"Ambient Light",type:"float",min:0,max:1,default:1},{name:"camera_light_intensity",label:"Camera Light",type:"float",min:0,max:1,default:.75},{name:"sunlight_intensity",label:"Sunlight",type:"float",min:0,max:1,default:0}];
},{}],"u8cO":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=m;var e=r(require("three")),t=a(require("./globe.js")),o=a(require("./ColorGradient.js")),n=a(require("./config.json"));function a(e){return e&&e.__esModule?e:{default:e}}function r(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,o):{};n.get||n.set?Object.defineProperty(t,o,n):t[o]=e[o]}return t.default=e,t}function i(e){return u(e)||l(e)||c()}function c(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function l(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function u(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}function s(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}var h=n.default.reduce(function(e,t){return Object.assign(e,s({},t.name,t.default))},{});console.log(h);var d=new o.default,p=new t.default(h);function m(t,o,n){var a=n.domElement,r=new e.AmbientLight(16777215,h.ambient_light_intensity);t.add(r);var c=new e.PointLight(16777215,h.camera_light_intensity);t.add(c);var l,u=(0,{lambert:function(t){return new e.MeshLambertMaterial(t)},standard:function(t){return new e.MeshStandardMaterial(t)},basic:function(t){return new e.MeshBasicMaterial(t)}}[h.material])({vertexColors:e.VertexColors,side:h.render_globe_interior?e.DoubleSide:e.FrontSide}),s=new e.Geometry,m=new e.Geometry;m.dynamic=!0;var f=new e.Clock,v=4;o.position.z=v,c.position.z=v,function(){p.points.forEach(function(e){s.vertices.push(w(e,!1))}),p.triangles.forEach(function(e,t){s.faces.push(y(t,!1))});var o=new e.MeshPhongMaterial({color:255,transparent:!0,opacity:.8});s.computeFaceNormals();var n=new e.Mesh(s,o);t.add(n),console.time("computing vertex colors"),p.points.forEach(function(e){e.color=d.getColor(e.elevation)}),console.timeEnd("computing vertex colors"),console.time("adding vertices"),p.points.forEach(function(e){m.vertices.push(w(e))}),console.timeEnd("adding vertices"),console.time("adding triangles"),p.triangles.forEach(function(e,t){m.faces.push(y(t))}),console.timeEnd("adding triangles"),h.render_globe_interior&&(u.side=e.DoubleSide);l=new e.Mesh(m,u),t.add(l),console.time("computing face normals"),m.computeFaceNormals(),console.timeEnd("computing face normals"),h.compute_vertex_normals&&(console.time("computing vertex normals"),m.computeVertexNormals(),console.timeEnd("computing vertex normals"));console.timeEnd("entire globe initialization")}();var g={x:null,y:null,theta:0,phi:0,actual_theta:0,actual_phi:0,zoom:v,actual_zoom:v,touch_delta:0,rotation_speed:0};function _(e,t){var o=500/a.clientHeight;o*=Math.max(g.zoom,1)/v,g.theta+=-(e-g.x)*o,g.phi+=(t-g.y)*o,g.phi=Math.min(180,Math.max(-180,g.phi))}function M(e,t){g.x=e,g.y=t}function b(e){g.zoom+=.1*e,g.zoom=Math.max(.1,g.zoom)}function x(e,t,o,n){g.touch_delta=Math.sqrt(Math.pow(o-e,2)+Math.pow(n-t,2))}function w(t){var o=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=h.elevation_scale*(t.elevation/20903520);return Math.abs(n)<.001&&(n=n>0?.001:-.001),o||(n=0),new e.Vector3((1+n)*t.x,(1+n)*t.y,(1+n)*t.z)}function y(t){var o=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=p.triangles[t],a=new e.Face3(n.p1,n.p2,n.p3);return o&&function(e,t){var o=p.triangles[t],n=[p.points[o.p1],p.points[o.p2],p.points[o.p3]];switch(h.triangle_coloring){case"max":var a=n.reduce(function(e,t){return e.elevation>t.elevation?e:t}).color;e.vertexColors[0]=a,e.vertexColors[1]=a,e.vertexColors[2]=a;break;case"min":a=n.reduce(function(e,t){return e.elevation<t.elevation?e:t}).color,e.vertexColors[0]=a,e.vertexColors[1]=a,e.vertexColors[2]=a;break;case"avg":a=d.getColor(n.map(function(e){return e.elevation}).reduce(function(e,t){return e+t})/n.length),e.vertexColors[0]=a,e.vertexColors[1]=a,e.vertexColors[2]=a;break;case"all":e.vertexColors[0]=n[0].color,e.vertexColors[1]=n[1].color,e.vertexColors[2]=n[2].color;break;default:console.error("bad triangle color setting")}}(a,t),a}return function a(){requestAnimationFrame(a);var r,u,s,d,p=f.getDelta(),m=Math.min(12*p,1),v=Math.min(9*p,1),_=!1,M=Math.min(2*p,1);g.zoom!=g.actual_zoom&&(g.actual_zoom+=(g.zoom-g.actual_zoom)*v,g.actual_zoom<g.zoom+5e-4&&g.actual_zoom>g.zoom-5e-4&&(g.actual_zoom=g.zoom),_=!0),g.actual_theta==g.theta&&g.actual_phi==g.phi||(g.actual_theta+=(g.theta-g.actual_theta)*m,g.actual_phi+=(g.phi-g.actual_phi)*m,g.actual_phi<g.phi+.05&&g.actual_phi>g.phi-.05&&(g.actual_phi=g.phi),g.actual_theta<g.theta+.05&&g.actual_theta>g.theta-.05&&(g.actual_theta=g.theta),_=!0),_&&((r=o.position).set.apply(r,i((u=g.actual_theta,s=g.actual_phi,[(d=g.actual_zoom)*Math.sin(u*Math.PI/360)*Math.cos(s*Math.PI/360),d*Math.sin(s*Math.PI/360),d*Math.cos(u*Math.PI/360)*Math.cos(s*Math.PI/360)]))),c.position.set(o.position.x,o.position.y,o.position.z),o.lookAt(new e.Vector3(0,0,0)),o.updateMatrix());h.rotation&&1!=g.rotation_speed?g.rotation_speed=Math.min(g.rotation_speed+M,1):h.rotation||0==g.rotation_speed||(g.rotation_speed=Math.max(g.rotation_speed-M,0)),g.rotation_speed>0&&(l.rotation.y+=.01*g.rotation_speed),n.render(t,o)}(),a.addEventListener("mousedown",function(e){e.preventDefault(),a.style.cursor="grabbing",0==e.button&&M(e.clientX,e.clientY)},!1),window.addEventListener("mouseup",function(e){a.style.cursor="grab"}),a.addEventListener("mousemove",function(e){e.preventDefault(),1&e.buttons&&_(e.clientX,e.clientY),M(e.clientX,e.clientY)},!1),a.addEventListener("touchstart",function(e){e.preventDefault(),e.touches&&(e.touches.length>1?x(e.touches[0].clientX,e.touches[0].clientY,e.touches[1].clientX,e.touches[1].clientY):M(e.touches[0].clientX,e.touches[0].clientY))}),a.addEventListener("touchend",function(e){e.preventDefault(),e.touches&&e.touches.length>0&&(e.touches.length>1&&e.touches[1]?x(e.touches[0].clientX,e.touches[0].clientY,e.touches[1].clientX,e.touches[1].clientY):M(e.touches[0].clientX,e.touches[0].clientY))}),a.addEventListener("touchmove",function(e){var t,o,n,a,r;e.preventDefault(),e.touches&&(e.touches.length>1?(t=e.touches[0].clientX,o=e.touches[0].clientY,n=e.touches[1].clientX,a=e.touches[1].clientY,r=Math.sqrt(Math.pow(n-t,2)+Math.pow(a-o,2)),b(.03*(g.touch_delta-r)),x(e.touches[0].clientX,e.touches[0].clientY,e.touches[1].clientX,e.touches[1].clientY)):(_(e.touches[0].clientX,e.touches[0].clientY),M(e.touches[0].clientX,e.touches[0].clientY)))}),a.addEventListener("wheel",function(e){e.preventDefault();var t={0:100,1:3,2:1}[e.deltaMode];b(e.deltaY/t)}),l}
},{"three":"gBK8","./globe.js":"UVw2","./ColorGradient.js":"MwGC","./config.json":"C9jC"}],"tOna":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=t(require("./planet/planet.js"));function t(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var a=function t(a,n,o){r(this,t),this.earth=(0,e.default)(a,n,o),this.hover=!1};exports.default=a;
},{"./planet/planet.js":"u8cO"}],"vDhC":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Interaction=exports.InteractionLayer=exports.InteractionManager=void 0;var t=require("three");function e(t){return Object.prototype.toString.call(t)}var n={isFunction:function(){var t=e(function(){});return function(n){return e(n)===t}}(),isUndefined:function(t){return void 0===t}};t.EventDispatcher.prototype.on=function(e,i){if(n.isFunction(i))return this instanceof t.Object3D&&(this.interactive=!0),this.addEventListener(e,i),this},t.EventDispatcher.prototype.off=function(t,e){return this.removeEventListener(t,e),this},t.EventDispatcher.prototype.once=function(t,e){var i=this;if(n.isFunction(e)){return this.on(t,function n(o){e(o),i.off(t,n)}),this}},t.EventDispatcher.prototype.emit=function(t){if(void 0!==this._listeners&&!n.isUndefined(this._listeners[t])){for(var e=(this._listeners[t]||[]).slice(0),i=arguments.length,o=Array(i>1?i-1:0),r=1;r<i;r++)o[r-1]=arguments[r];for(var s=0;s<e.length;s++)e[s].apply(this,o);return this}},t.Object3D.prototype.interactive=!1,t.Object3D.prototype.interactiveChildren=!0,t.Object3D.prototype.started=!1,Object.defineProperty(t.Object3D.prototype,"trackedPointers",{get:function(){return this._trackedPointers||(this._trackedPointers={}),this._trackedPointers}}),t.Object3D.prototype.raycastTest=function(t){var e=[];return this.raycast(t,e),e.length>0&&e[0]};var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)},a=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e},c=function(){function e(){o(this,e),this.global=new t.Vector2,this.target=null,this.originalEvent=null,this.identifier=null,this.isPrimary=!1,this.button=0,this.buttons=0,this.width=0,this.height=0,this.tiltX=0,this.tiltY=0,this.pointerType=null,this.pressure=0,this.rotationAngle=0,this.twist=0,this.tangentialPressure=0}return r(e,[{key:"_copyEvent",value:function(t){t.isPrimary&&(this.isPrimary=!0),this.button=t.button,this.buttons=t.buttons,this.width=t.width,this.height=t.height,this.tiltX=t.tiltX,this.tiltY=t.tiltY,this.pointerType=t.pointerType,this.pressure=t.pressure,this.rotationAngle=t.rotationAngle,this.twist=t.twist||0,this.tangentialPressure=t.tangentialPressure||0}},{key:"_reset",value:function(){this.isPrimary=!1}},{key:"pointerId",get:function(){return this.identifier}}]),e}(),h=function(){function t(){o(this,t),this.stopped=!1,this.target=null,this.currentTarget=null,this.type=null,this.data=null,this.intersects=[]}return r(t,[{key:"stopPropagation",value:function(){this.stopped=!0}},{key:"_reset",value:function(){this.stopped=!1,this.currentTarget=null,this.target=null,this.intersects=[]}}]),t}(),u=function(){function t(e){o(this,t),this._pointerId=e,this._flags=t.FLAGS.NONE}return r(t,[{key:"_doSet",value:function(t,e){this._flags=e?this._flags|t:this._flags&~t}},{key:"pointerId",get:function(){return this._pointerId}},{key:"flags",get:function(){return this._flags},set:function(t){this._flags=t}},{key:"none",get:function(){return this._flags===this.constructor.FLAGS.NONE}},{key:"over",get:function(){return 0!=(this._flags&this.constructor.FLAGS.OVER)},set:function(t){this._doSet(this.constructor.FLAGS.OVER,t)}},{key:"rightDown",get:function(){return 0!=(this._flags&this.constructor.FLAGS.RIGHT_DOWN)},set:function(t){this._doSet(this.constructor.FLAGS.RIGHT_DOWN,t)}},{key:"leftDown",get:function(){return 0!=(this._flags&this.constructor.FLAGS.LEFT_DOWN)},set:function(t){this._doSet(this.constructor.FLAGS.LEFT_DOWN,t)}}]),t}();u.FLAGS=Object.freeze({NONE:0,OVER:1,LEFT_DOWN:2,RIGHT_DOWN:4});var l="MOUSE",v={target:null,data:{global:null}},p=function(e){function n(e,i,r,s){o(this,n);var u=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return s=s||{},u.renderer=e,u.scene=i,u.camera=r,u.autoPreventDefault=s.autoPreventDefault||!1,u.interactionFrequency=s.interactionFrequency||10,u.mouse=new c,u.mouse.identifier=l,u.mouse.global.set(-999999),u.activeInteractionData={},u.activeInteractionData[l]=u.mouse,u.interactionDataPool=[],u.eventData=new h,u.interactionDOMElement=null,u.moveWhenInside=!0,u.eventsAdded=!1,u.mouseOverRenderer=!1,u.supportsTouchEvents="ontouchstart"in window,u.supportsPointerEvents=!!window.PointerEvent,u.onClick=u.onClick.bind(u),u.processClick=u.processClick.bind(u),u.onPointerUp=u.onPointerUp.bind(u),u.processPointerUp=u.processPointerUp.bind(u),u.onPointerCancel=u.onPointerCancel.bind(u),u.processPointerCancel=u.processPointerCancel.bind(u),u.onPointerDown=u.onPointerDown.bind(u),u.processPointerDown=u.processPointerDown.bind(u),u.onPointerMove=u.onPointerMove.bind(u),u.processPointerMove=u.processPointerMove.bind(u),u.onPointerOut=u.onPointerOut.bind(u),u.processPointerOverOut=u.processPointerOverOut.bind(u),u.onPointerOver=u.onPointerOver.bind(u),u.cursorStyles={default:"inherit",pointer:"pointer"},u.currentCursorMode=null,u.cursor=null,u.raycaster=new t.Raycaster,u._deltaTime=0,u.setTargetElement(u.renderer.domElement),u}return s(n,e),r(n,[{key:"hitTest",value:function(t,e){return v.target=null,v.data.global=t,e||(e=this.scene),this.processInteractive(v,e,null,!0),v.target}},{key:"setTargetElement",value:function(t){this.removeEvents(),this.interactionDOMElement=t,this.addEvents()}},{key:"addEvents",value:function(){this.interactionDOMElement&&!this.eventsAdded&&(this.emit("addevents"),this.interactionDOMElement.addEventListener("click",this.onClick,!0),window.navigator.msPointerEnabled?(this.interactionDOMElement.style["-ms-content-zooming"]="none",this.interactionDOMElement.style["-ms-touch-action"]="none"):this.supportsPointerEvents&&(this.interactionDOMElement.style["touch-action"]="none"),this.supportsPointerEvents?(window.document.addEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("pointerover",this.onPointerOver,!0),window.addEventListener("pointercancel",this.onPointerCancel,!0),window.addEventListener("pointerup",this.onPointerUp,!0)):(window.document.addEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("mouseover",this.onPointerOver,!0),window.addEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.addEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.addEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.addEventListener("touchmove",this.onPointerMove,!0)),this.eventsAdded=!0)}},{key:"removeEvents",value:function(){this.interactionDOMElement&&(this.emit("removeevents"),this.interactionDOMElement.removeEventListener("click",this.onClick,!0),window.navigator.msPointerEnabled?(this.interactionDOMElement.style["-ms-content-zooming"]="",this.interactionDOMElement.style["-ms-touch-action"]=""):this.supportsPointerEvents&&(this.interactionDOMElement.style["touch-action"]=""),this.supportsPointerEvents?(window.document.removeEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("pointerover",this.onPointerOver,!0),window.removeEventListener("pointercancel",this.onPointerCancel,!0),window.removeEventListener("pointerup",this.onPointerUp,!0)):(window.document.removeEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("mouseover",this.onPointerOver,!0),window.removeEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.removeEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.removeEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.removeEventListener("touchmove",this.onPointerMove,!0)),this.interactionDOMElement=null,this.eventsAdded=!1)}},{key:"update",value:function(t){var e=t.snippet;if(this._deltaTime+=e,!(this._deltaTime<this.interactionFrequency)&&(this._deltaTime=0,this.interactionDOMElement))if(this.didMove)this.didMove=!1;else{for(var n in this.cursor=null,this.activeInteractionData)if(this.activeInteractionData.hasOwnProperty(n)){var i=this.activeInteractionData[n];if(i.originalEvent&&"touch"!==i.pointerType){var o=this.configureInteractionEventForDOMEvent(this.eventData,i.originalEvent,i);this.processInteractive(o,this.scene,this.processPointerOverOut,!0)}}this.setCursorMode(this.cursor)}}},{key:"setCursorMode",value:function(t){if(t=t||"default",this.currentCursorMode!==t){this.currentCursorMode=t;var e=this.cursorStyles[t];if(e)switch(void 0===e?"undefined":i(e)){case"string":this.interactionDOMElement.style.cursor=e;break;case"function":e(t);break;case"object":Object.assign(this.interactionDOMElement.style,e)}else"string"!=typeof t||Object.prototype.hasOwnProperty.call(this.cursorStyles,t)||(this.interactionDOMElement.style.cursor=t)}}},{key:"triggerEvent",value:function(t,e,n){n.stopped||(n.currentTarget=t,n.type=e,t.emit(e,n),t[e]&&t[e](n))}},{key:"processInteractive",value:function(t,e,n,i,o){if(!e||!e.visible)return!1;var r=!1,s=o=e.interactive||o;if(e.interactiveChildren&&e.children)for(var a=e.children,c=a.length-1;c>=0;c--){var h=a[c],u=this.processInteractive(t,h,n,i,s);if(u){if(!h.parent)continue;s=!1,u&&(t.target&&(i=!1),r=!0)}}return o&&(i&&!t.target&&t.intersects[0]&&t.intersects[0].object===e&&(r=!0),e.interactive&&(r&&!t.target&&(t.data.target=t.target=e),n&&n(t,e,!!r))),r}},{key:"onClick",value:function(t){if("click"===t.type){var e=this.normalizeToPointerData(t);this.autoPreventDefault&&e[0].isNormalized&&t.preventDefault();var n=this.getInteractionDataForPointerId(e[0]),i=this.configureInteractionEventForDOMEvent(this.eventData,e[0],n);i.data.originalEvent=t,this.processInteractive(i,this.scene,this.processClick,!0),this.emit("click",i)}}},{key:"processClick",value:function(t,e,n){n&&this.triggerEvent(e,"click",t)}},{key:"onPointerDown",value:function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t);this.autoPreventDefault&&e[0].isNormalized&&t.preventDefault();for(var n=e.length,i=0;i<n;i++){var o=e[i],r=this.getInteractionDataForPointerId(o),s=this.configureInteractionEventForDOMEvent(this.eventData,o,r);if(s.data.originalEvent=t,this.processInteractive(s,this.scene,this.processPointerDown,!0),this.emit("pointerdown",s),"touch"===o.pointerType)this.emit("touchstart",s);else if("mouse"===o.pointerType||"pen"===o.pointerType){var a=2===o.button;this.emit(a?"rightdown":"mousedown",this.eventData)}}}}},{key:"processPointerDown",value:function(t,e,n){var i=t.data,o=t.data.identifier;if(n)if(e.trackedPointers[o]||(e.trackedPointers[o]=new u(o)),this.triggerEvent(e,"pointerdown",t),"touch"===i.pointerType)e.started=!0,this.triggerEvent(e,"touchstart",t);else if("mouse"===i.pointerType||"pen"===i.pointerType){var r=2===i.button;r?e.trackedPointers[o].rightDown=!0:e.trackedPointers[o].leftDown=!0,this.triggerEvent(e,r?"rightdown":"mousedown",t)}}},{key:"onPointerComplete",value:function(t,e,n){for(var i=this.normalizeToPointerData(t),o=i.length,r=t.target!==this.interactionDOMElement?"outside":"",s=0;s<o;s++){var a=i[s],c=this.getInteractionDataForPointerId(a),h=this.configureInteractionEventForDOMEvent(this.eventData,a,c);if(h.data.originalEvent=t,this.processInteractive(h,this.scene,n,e||!r),this.emit(e?"pointercancel":"pointerup"+r,h),"mouse"===a.pointerType||"pen"===a.pointerType){var u=2===a.button;this.emit(u?"rightup"+r:"mouseup"+r,h)}else"touch"===a.pointerType&&(this.emit(e?"touchcancel":"touchend"+r,h),this.releaseInteractionDataForPointerId(a.pointerId,c))}}},{key:"onPointerCancel",value:function(t){this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!0,this.processPointerCancel)}},{key:"processPointerCancel",value:function(t,e){var n=t.data,i=t.data.identifier;void 0!==e.trackedPointers[i]&&(delete e.trackedPointers[i],this.triggerEvent(e,"pointercancel",t),"touch"===n.pointerType&&this.triggerEvent(e,"touchcancel",t))}},{key:"onPointerUp",value:function(t){this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!1,this.processPointerUp)}},{key:"processPointerUp",value:function(t,e,n){var i=t.data,o=t.data.identifier,r=e.trackedPointers[o],s="touch"===i.pointerType;if("mouse"===i.pointerType||"pen"===i.pointerType){var a=2===i.button,c=u.FLAGS,h=a?c.RIGHT_DOWN:c.LEFT_DOWN,l=void 0!==r&&r.flags&h;n?(this.triggerEvent(e,a?"rightup":"mouseup",t),l&&this.triggerEvent(e,a?"rightclick":"leftclick",t)):l&&this.triggerEvent(e,a?"rightupoutside":"mouseupoutside",t),r&&(a?r.rightDown=!1:r.leftDown=!1)}s&&e.started&&(e.started=!1,this.triggerEvent(e,"touchend",t)),n?(this.triggerEvent(e,"pointerup",t),r&&(this.triggerEvent(e,"pointertap",t),s&&(this.triggerEvent(e,"tap",t),r.over=!1))):r&&(this.triggerEvent(e,"pointerupoutside",t),s&&this.triggerEvent(e,"touchendoutside",t)),r&&r.none&&delete e.trackedPointers[o]}},{key:"onPointerMove",value:function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t);"mouse"===e[0].pointerType&&(this.didMove=!0,this.cursor=null);for(var n=e.length,i=0;i<n;i++){var o=e[i],r=this.getInteractionDataForPointerId(o),s=this.configureInteractionEventForDOMEvent(this.eventData,o,r);s.data.originalEvent=t;var a="touch"!==o.pointerType||this.moveWhenInside;this.processInteractive(s,this.scene,this.processPointerMove,a),this.emit("pointermove",s),"touch"===o.pointerType&&this.emit("touchmove",s),"mouse"!==o.pointerType&&"pen"!==o.pointerType||this.emit("mousemove",s)}"mouse"===e[0].pointerType&&this.setCursorMode(this.cursor)}}},{key:"processPointerMove",value:function(t,e,n){var i=t.data,o="touch"===i.pointerType,r="mouse"===i.pointerType||"pen"===i.pointerType;r&&this.processPointerOverOut(t,e,n),o&&e.started&&this.triggerEvent(e,"touchmove",t),this.moveWhenInside&&!n||(this.triggerEvent(e,"pointermove",t),r&&this.triggerEvent(e,"mousemove",t))}},{key:"onPointerOut",value:function(t){if(!this.supportsTouchEvents||"touch"!==t.pointerType){var e=this.normalizeToPointerData(t)[0];"mouse"===e.pointerType&&(this.mouseOverRenderer=!1,this.setCursorMode(null));var n=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,n);i.data.originalEvent=e,this.processInteractive(i,this.scene,this.processPointerOverOut,!1),this.emit("pointerout",i),"mouse"===e.pointerType||"pen"===e.pointerType?this.emit("mouseout",i):this.releaseInteractionDataForPointerId(n.identifier)}}},{key:"processPointerOverOut",value:function(t,e,n){var i=t.data,o=t.data.identifier,r="mouse"===i.pointerType||"pen"===i.pointerType,s=e.trackedPointers[o];n&&!s&&(s=e.trackedPointers[o]=new u(o)),void 0!==s&&(n&&this.mouseOverRenderer?(s.over||(s.over=!0,this.triggerEvent(e,"pointerover",t),r&&this.triggerEvent(e,"mouseover",t)),r&&null===this.cursor&&(this.cursor=e.cursor)):s.over&&(s.over=!1,this.triggerEvent(e,"pointerout",this.eventData),r&&this.triggerEvent(e,"mouseout",t),s.none&&delete e.trackedPointers[o]))}},{key:"onPointerOver",value:function(t){var e=this.normalizeToPointerData(t)[0],n=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,n);i.data.originalEvent=e,"mouse"===e.pointerType&&(this.mouseOverRenderer=!0),this.emit("pointerover",i),"mouse"!==e.pointerType&&"pen"!==e.pointerType||this.emit("mouseover",i)}},{key:"getInteractionDataForPointerId",value:function(t){var e=t.pointerId,n=void 0;return e===l||"mouse"===t.pointerType?n=this.mouse:this.activeInteractionData[e]?n=this.activeInteractionData[e]:((n=this.interactionDataPool.pop()||new c).identifier=e,this.activeInteractionData[e]=n),n._copyEvent(t),n}},{key:"releaseInteractionDataForPointerId",value:function(t){var e=this.activeInteractionData[t];e&&(delete this.activeInteractionData[t],e._reset(),this.interactionDataPool.push(e))}},{key:"mapPositionToPoint",value:function(t,e,n){var i=void 0;i=this.interactionDOMElement.parentElement?this.interactionDOMElement.getBoundingClientRect():{x:0,y:0,left:0,top:0,width:0,height:0},t.x=(e-i.left)/i.width*2-1,t.y=-(n-i.top)/i.height*2+1}},{key:"configureInteractionEventForDOMEvent",value:function(t,e,n){return t.data=n,this.mapPositionToPoint(n.global,e.clientX,e.clientY),this.raycaster.setFromCamera(n.global,this.camera),"touch"===e.pointerType&&(e.globalX=n.global.x,e.globalY=n.global.y),n.originalEvent=e,t._reset(),t.intersects=this.raycaster.intersectObjects(this.scene.children,!0),t}},{key:"normalizeToPointerData",value:function(t){var e=[];if(this.supportsTouchEvents&&t instanceof TouchEvent)for(var n=0,i=t.changedTouches.length;n<i;n++){var o=t.changedTouches[n];void 0===o.button&&(o.button=t.touches.length?1:0),void 0===o.buttons&&(o.buttons=t.touches.length?1:0),void 0===o.isPrimary&&(o.isPrimary=1===t.touches.length&&"touchstart"===t.type),void 0===o.width&&(o.width=o.radiusX||1),void 0===o.height&&(o.height=o.radiusY||1),void 0===o.tiltX&&(o.tiltX=0),void 0===o.tiltY&&(o.tiltY=0),void 0===o.pointerType&&(o.pointerType="touch"),void 0===o.pointerId&&(o.pointerId=o.identifier||0),void 0===o.pressure&&(o.pressure=o.force||.5),o.twist=0,o.tangentialPressure=0,void 0===o.layerX&&(o.layerX=o.offsetX=o.clientX),void 0===o.layerY&&(o.layerY=o.offsetY=o.clientY),o.isNormalized=!0,e.push(o)}else!(t instanceof MouseEvent)||this.supportsPointerEvents&&t instanceof window.PointerEvent?e.push(t):(void 0===t.isPrimary&&(t.isPrimary=!0),void 0===t.width&&(t.width=1),void 0===t.height&&(t.height=1),void 0===t.tiltX&&(t.tiltX=0),void 0===t.tiltY&&(t.tiltY=0),void 0===t.pointerType&&(t.pointerType="mouse"),void 0===t.pointerId&&(t.pointerId=l),void 0===t.pressure&&(t.pressure=.5),t.twist=0,t.tangentialPressure=0,t.isNormalized=!0,e.push(t));return e}},{key:"destroy",value:function(){this.removeEvents(),this.removeAllListeners(),this.renderer=null,this.mouse=null,this.eventData=null,this.interactionDOMElement=null,this.onPointerDown=null,this.processPointerDown=null,this.onPointerUp=null,this.processPointerUp=null,this.onPointerCancel=null,this.processPointerCancel=null,this.onPointerMove=null,this.processPointerMove=null,this.onPointerOut=null,this.processPointerOverOut=null,this.onPointerOver=null,this._tempPoint=null}}]),n}(t.EventDispatcher);exports.InteractionManager=p;var d="MOUSE",m={target:null,data:{global:null}},E=function(e){function n(e,i){o(this,n);var r=a(this,(n.__proto__||Object.getPrototypeOf(n)).call(this));return i=i||{},r.renderer=e,r.layer=null,r.autoPreventDefault=i.autoPreventDefault||!1,r.interactionFrequency=i.interactionFrequency||10,r.mouse=new c,r.mouse.identifier=d,r.mouse.global.set(-999999),r.activeInteractionData={},r.activeInteractionData[d]=r.mouse,r.interactionDataPool=[],r.eventData=new h,r.interactionDOMElement=null,r.moveWhenInside=!0,r.eventsAdded=!1,r.mouseOverRenderer=!1,r.supportsTouchEvents="ontouchstart"in window,r.supportsPointerEvents=!!window.PointerEvent,r.onClick=r.onClick.bind(r),r.processClick=r.processClick.bind(r),r.onPointerUp=r.onPointerUp.bind(r),r.processPointerUp=r.processPointerUp.bind(r),r.onPointerCancel=r.onPointerCancel.bind(r),r.processPointerCancel=r.processPointerCancel.bind(r),r.onPointerDown=r.onPointerDown.bind(r),r.processPointerDown=r.processPointerDown.bind(r),r.onPointerMove=r.onPointerMove.bind(r),r.processPointerMove=r.processPointerMove.bind(r),r.onPointerOut=r.onPointerOut.bind(r),r.processPointerOverOut=r.processPointerOverOut.bind(r),r.onPointerOver=r.onPointerOver.bind(r),r.cursorStyles={default:"inherit",pointer:"pointer"},r.currentCursorMode=null,r.cursor=null,r.raycaster=new t.Raycaster,r._deltaTime=0,r.setTargetElement(r.renderer.domElement),r}return s(n,e),r(n,[{key:"isAble",value:function(){return this.layer&&this.layer.interactive}},{key:"setLayer",value:function(t){this.layer=t}},{key:"hitTest",value:function(t,e){return this.isAble()?(m.target=null,m.data.global=t,e||(e=this.layer.scene),this.processInteractive(m,e,null,!0),m.target):null}},{key:"setTargetElement",value:function(t){this.removeEvents(),this.interactionDOMElement=t,this.addEvents()}},{key:"addEvents",value:function(){this.interactionDOMElement&&!this.eventsAdded&&(this.emit("addevents"),this.interactionDOMElement.addEventListener("click",this.onClick,!0),window.navigator.msPointerEnabled?(this.interactionDOMElement.style["-ms-content-zooming"]="none",this.interactionDOMElement.style["-ms-touch-action"]="none"):this.supportsPointerEvents&&(this.interactionDOMElement.style["touch-action"]="none"),this.supportsPointerEvents?(window.document.addEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("pointerover",this.onPointerOver,!0),window.addEventListener("pointercancel",this.onPointerCancel,!0),window.addEventListener("pointerup",this.onPointerUp,!0)):(window.document.addEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.addEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.addEventListener("mouseover",this.onPointerOver,!0),window.addEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.addEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.addEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.addEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.addEventListener("touchmove",this.onPointerMove,!0)),this.eventsAdded=!0)}},{key:"removeEvents",value:function(){this.interactionDOMElement&&(this.emit("removeevents"),this.interactionDOMElement.removeEventListener("click",this.onClick,!0),window.navigator.msPointerEnabled?(this.interactionDOMElement.style["-ms-content-zooming"]="",this.interactionDOMElement.style["-ms-touch-action"]=""):this.supportsPointerEvents&&(this.interactionDOMElement.style["touch-action"]=""),this.supportsPointerEvents?(window.document.removeEventListener("pointermove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("pointerdown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("pointerleave",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("pointerover",this.onPointerOver,!0),window.removeEventListener("pointercancel",this.onPointerCancel,!0),window.removeEventListener("pointerup",this.onPointerUp,!0)):(window.document.removeEventListener("mousemove",this.onPointerMove,!0),this.interactionDOMElement.removeEventListener("mousedown",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("mouseout",this.onPointerOut,!0),this.interactionDOMElement.removeEventListener("mouseover",this.onPointerOver,!0),window.removeEventListener("mouseup",this.onPointerUp,!0)),this.supportsTouchEvents&&(this.interactionDOMElement.removeEventListener("touchstart",this.onPointerDown,!0),this.interactionDOMElement.removeEventListener("touchcancel",this.onPointerCancel,!0),this.interactionDOMElement.removeEventListener("touchend",this.onPointerUp,!0),this.interactionDOMElement.removeEventListener("touchmove",this.onPointerMove,!0)),this.interactionDOMElement=null,this.eventsAdded=!1)}},{key:"update",value:function(t){var e=t.snippet;if(this.isAble()&&(this._deltaTime+=e,!(this._deltaTime<this.interactionFrequency)&&(this._deltaTime=0,this.interactionDOMElement)))if(this.didMove)this.didMove=!1;else{for(var n in this.cursor=null,this.activeInteractionData)if(this.activeInteractionData.hasOwnProperty(n)){var i=this.activeInteractionData[n];if(i.originalEvent&&"touch"!==i.pointerType){var o=this.configureInteractionEventForDOMEvent(this.eventData,i.originalEvent,i);this.processInteractive(o,this.layer.scene,this.processPointerOverOut,!0)}}this.setCursorMode(this.cursor)}}},{key:"setCursorMode",value:function(t){if(t=t||"default",this.currentCursorMode!==t){this.currentCursorMode=t;var e=this.cursorStyles[t];if(e)switch(void 0===e?"undefined":i(e)){case"string":this.interactionDOMElement.style.cursor=e;break;case"function":e(t);break;case"object":Object.assign(this.interactionDOMElement.style,e)}else"string"!=typeof t||Object.prototype.hasOwnProperty.call(this.cursorStyles,t)||(this.interactionDOMElement.style.cursor=t)}}},{key:"triggerEvent",value:function(t,e,n){n.stopped||(n.currentTarget=t,n.type=e,t.emit(e,n),t[e]&&t[e](n))}},{key:"processInteractive",value:function(t,e,n,i,o){if(!e||!e.visible)return!1;var r=!1,s=o=e.interactive||o;if(e.interactiveChildren&&e.children)for(var a=e.children,c=a.length-1;c>=0;c--){var h=a[c],u=this.processInteractive(t,h,n,i,s);if(u){if(!h.parent)continue;s=!1,u&&(t.target&&(i=!1),r=!0)}}return o&&(i&&!t.target&&t.intersects[0]&&t.intersects[0].object===e&&(r=!0),e.interactive&&(r&&!t.target&&(t.data.target=t.target=e),n&&n(t,e,!!r))),r}},{key:"onClick",value:function(t){if(this.isAble()&&"click"===t.type){var e=this.normalizeToPointerData(t);this.autoPreventDefault&&e[0].isNormalized&&t.preventDefault();var n=this.getInteractionDataForPointerId(e[0]),i=this.configureInteractionEventForDOMEvent(this.eventData,e[0],n);i.data.originalEvent=t,this.processInteractive(i,this.layer.scene,this.processClick,!0),this.emit("click",i)}}},{key:"processClick",value:function(t,e,n){n&&this.triggerEvent(e,"click",t)}},{key:"onPointerDown",value:function(t){if(this.isAble()&&(!this.supportsTouchEvents||"touch"!==t.pointerType)){var e=this.normalizeToPointerData(t);this.autoPreventDefault&&e[0].isNormalized&&t.preventDefault();for(var n=e.length,i=0;i<n;i++){var o=e[i],r=this.getInteractionDataForPointerId(o),s=this.configureInteractionEventForDOMEvent(this.eventData,o,r);if(s.data.originalEvent=t,this.processInteractive(s,this.layer.scene,this.processPointerDown,!0),this.emit("pointerdown",s),"touch"===o.pointerType)this.emit("touchstart",s);else if("mouse"===o.pointerType||"pen"===o.pointerType){var a=2===o.button;this.emit(a?"rightdown":"mousedown",this.eventData)}}}}},{key:"processPointerDown",value:function(t,e,n){var i=t.data,o=t.data.identifier;if(n)if(e.trackedPointers[o]||(e.trackedPointers[o]=new u(o)),this.triggerEvent(e,"pointerdown",t),"touch"===i.pointerType)e.started=!0,this.triggerEvent(e,"touchstart",t);else if("mouse"===i.pointerType||"pen"===i.pointerType){var r=2===i.button;r?e.trackedPointers[o].rightDown=!0:e.trackedPointers[o].leftDown=!0,this.triggerEvent(e,r?"rightdown":"mousedown",t)}}},{key:"onPointerComplete",value:function(t,e,n){for(var i=this.normalizeToPointerData(t),o=i.length,r=t.target!==this.interactionDOMElement?"outside":"",s=0;s<o;s++){var a=i[s],c=this.getInteractionDataForPointerId(a),h=this.configureInteractionEventForDOMEvent(this.eventData,a,c);if(h.data.originalEvent=t,this.processInteractive(h,this.layer.scene,n,e||!r),this.emit(e?"pointercancel":"pointerup"+r,h),"mouse"===a.pointerType||"pen"===a.pointerType){var u=2===a.button;this.emit(u?"rightup"+r:"mouseup"+r,h)}else"touch"===a.pointerType&&(this.emit(e?"touchcancel":"touchend"+r,h),this.releaseInteractionDataForPointerId(a.pointerId,c))}}},{key:"onPointerCancel",value:function(t){this.isAble()&&(this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!0,this.processPointerCancel))}},{key:"processPointerCancel",value:function(t,e){var n=t.data,i=t.data.identifier;void 0!==e.trackedPointers[i]&&(delete e.trackedPointers[i],this.triggerEvent(e,"pointercancel",t),"touch"===n.pointerType&&this.triggerEvent(e,"touchcancel",t))}},{key:"onPointerUp",value:function(t){this.isAble()&&(this.supportsTouchEvents&&"touch"===t.pointerType||this.onPointerComplete(t,!1,this.processPointerUp))}},{key:"processPointerUp",value:function(t,e,n){var i=t.data,o=t.data.identifier,r=e.trackedPointers[o],s="touch"===i.pointerType;if("mouse"===i.pointerType||"pen"===i.pointerType){var a=2===i.button,c=u.FLAGS,h=a?c.RIGHT_DOWN:c.LEFT_DOWN,l=void 0!==r&&r.flags&h;n?(this.triggerEvent(e,a?"rightup":"mouseup",t),l&&this.triggerEvent(e,a?"rightclick":"leftclick",t)):l&&this.triggerEvent(e,a?"rightupoutside":"mouseupoutside",t),r&&(a?r.rightDown=!1:r.leftDown=!1)}s&&e.started&&(e.started=!1,this.triggerEvent(e,"touchend",t)),n?(this.triggerEvent(e,"pointerup",t),r&&(this.triggerEvent(e,"pointertap",t),s&&(this.triggerEvent(e,"tap",t),r.over=!1))):r&&(this.triggerEvent(e,"pointerupoutside",t),s&&this.triggerEvent(e,"touchendoutside",t)),r&&r.none&&delete e.trackedPointers[o]}},{key:"onPointerMove",value:function(t){if(this.isAble()&&(!this.supportsTouchEvents||"touch"!==t.pointerType)){var e=this.normalizeToPointerData(t);"mouse"===e[0].pointerType&&(this.didMove=!0,this.cursor=null);for(var n=e.length,i=0;i<n;i++){var o=e[i],r=this.getInteractionDataForPointerId(o),s=this.configureInteractionEventForDOMEvent(this.eventData,o,r);s.data.originalEvent=t;var a="touch"!==o.pointerType||this.moveWhenInside;this.processInteractive(s,this.layer.scene,this.processPointerMove,a),this.emit("pointermove",s),"touch"===o.pointerType&&this.emit("touchmove",s),"mouse"!==o.pointerType&&"pen"!==o.pointerType||this.emit("mousemove",s)}"mouse"===e[0].pointerType&&this.setCursorMode(this.cursor)}}},{key:"processPointerMove",value:function(t,e,n){var i=t.data,o="touch"===i.pointerType,r="mouse"===i.pointerType||"pen"===i.pointerType;r&&this.processPointerOverOut(t,e,n),o&&e.started&&this.triggerEvent(e,"touchmove",t),this.moveWhenInside&&!n||(this.triggerEvent(e,"pointermove",t),r&&this.triggerEvent(e,"mousemove",t))}},{key:"onPointerOut",value:function(t){if(this.isAble()&&(!this.supportsTouchEvents||"touch"!==t.pointerType)){var e=this.normalizeToPointerData(t)[0];"mouse"===e.pointerType&&(this.mouseOverRenderer=!1,this.setCursorMode(null));var n=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,n);i.data.originalEvent=e,this.processInteractive(i,this.layer.scene,this.processPointerOverOut,!1),this.emit("pointerout",i),"mouse"===e.pointerType||"pen"===e.pointerType?this.emit("mouseout",i):this.releaseInteractionDataForPointerId(n.identifier)}}},{key:"processPointerOverOut",value:function(t,e,n){var i=t.data,o=t.data.identifier,r="mouse"===i.pointerType||"pen"===i.pointerType,s=e.trackedPointers[o];n&&!s&&(s=e.trackedPointers[o]=new u(o)),void 0!==s&&(n&&this.mouseOverRenderer?(s.over||(s.over=!0,this.triggerEvent(e,"pointerover",t),r&&this.triggerEvent(e,"mouseover",t)),r&&null===this.cursor&&(this.cursor=e.cursor)):s.over&&(s.over=!1,this.triggerEvent(e,"pointerout",this.eventData),r&&this.triggerEvent(e,"mouseout",t),s.none&&delete e.trackedPointers[o]))}},{key:"onPointerOver",value:function(t){if(this.isAble()){var e=this.normalizeToPointerData(t)[0],n=this.getInteractionDataForPointerId(e),i=this.configureInteractionEventForDOMEvent(this.eventData,e,n);i.data.originalEvent=e,"mouse"===e.pointerType&&(this.mouseOverRenderer=!0),this.emit("pointerover",i),"mouse"!==e.pointerType&&"pen"!==e.pointerType||this.emit("mouseover",i)}}},{key:"getInteractionDataForPointerId",value:function(t){var e=t.pointerId,n=void 0;return e===d||"mouse"===t.pointerType?n=this.mouse:this.activeInteractionData[e]?n=this.activeInteractionData[e]:((n=this.interactionDataPool.pop()||new c).identifier=e,this.activeInteractionData[e]=n),n._copyEvent(t),n}},{key:"releaseInteractionDataForPointerId",value:function(t){var e=this.activeInteractionData[t];e&&(delete this.activeInteractionData[t],e._reset(),this.interactionDataPool.push(e))}},{key:"mapPositionToPoint",value:function(t,e,n){var i=void 0;i=this.interactionDOMElement.parentElement?this.interactionDOMElement.getBoundingClientRect():{x:0,y:0,left:0,top:0,width:0,height:0},t.x=(e-i.left)/i.width*2-1,t.y=-(n-i.top)/i.height*2+1}},{key:"configureInteractionEventForDOMEvent",value:function(t,e,n){return t.data=n,this.mapPositionToPoint(n.global,e.clientX,e.clientY),this.layer&&this.layer.interactive&&this.raycaster.setFromCamera(n.global,this.layer.camera),"touch"===e.pointerType&&(e.globalX=n.global.x,e.globalY=n.global.y),n.originalEvent=e,t._reset(),t.intersects=this.raycaster.intersectObjects(this.scene.children,!0),t}},{key:"normalizeToPointerData",value:function(t){var e=[];if(this.supportsTouchEvents&&t instanceof TouchEvent)for(var n=0,i=t.changedTouches.length;n<i;n++){var o=t.changedTouches[n];void 0===o.button&&(o.button=t.touches.length?1:0),void 0===o.buttons&&(o.buttons=t.touches.length?1:0),void 0===o.isPrimary&&(o.isPrimary=1===t.touches.length&&"touchstart"===t.type),void 0===o.width&&(o.width=o.radiusX||1),void 0===o.height&&(o.height=o.radiusY||1),void 0===o.tiltX&&(o.tiltX=0),void 0===o.tiltY&&(o.tiltY=0),void 0===o.pointerType&&(o.pointerType="touch"),void 0===o.pointerId&&(o.pointerId=o.identifier||0),void 0===o.pressure&&(o.pressure=o.force||.5),o.twist=0,o.tangentialPressure=0,void 0===o.layerX&&(o.layerX=o.offsetX=o.clientX),void 0===o.layerY&&(o.layerY=o.offsetY=o.clientY),o.isNormalized=!0,e.push(o)}else!(t instanceof MouseEvent)||this.supportsPointerEvents&&t instanceof window.PointerEvent?e.push(t):(void 0===t.isPrimary&&(t.isPrimary=!0),void 0===t.width&&(t.width=1),void 0===t.height&&(t.height=1),void 0===t.tiltX&&(t.tiltX=0),void 0===t.tiltY&&(t.tiltY=0),void 0===t.pointerType&&(t.pointerType="mouse"),void 0===t.pointerId&&(t.pointerId=d),void 0===t.pressure&&(t.pressure=.5),t.twist=0,t.tangentialPressure=0,t.isNormalized=!0,e.push(t));return e}},{key:"destroy",value:function(){this.removeEvents(),this.removeAllListeners(),this.renderer=null,this.mouse=null,this.eventData=null,this.interactionDOMElement=null,this.onPointerDown=null,this.processPointerDown=null,this.onPointerUp=null,this.processPointerUp=null,this.onPointerCancel=null,this.processPointerCancel=null,this.onPointerMove=null,this.processPointerMove=null,this.onPointerOut=null,this.processPointerOverOut=null,this.onPointerOver=null,this._tempPoint=null}}]),n}(t.EventDispatcher);exports.InteractionLayer=E,function(){for(var t=0,e=["ms","moz","webkit","o"],n=0;n<e.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[e[n]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[e[n]+"CancelAnimationFrame"]||window[e[n]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e){var n=(new Date).getTime(),i=Math.max(0,16-(n-t)),o=window.setTimeout(function(){e(n+i)},i);return t=n+i,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(t){clearTimeout(t)}),window.RAF=window.requestAnimationFrame,window.CAF=window.cancelAnimationFrame}();var f=function(t){function e(){o(this,e);var t=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.timer=null,t.started=!1,t.pt=0,t.snippet=0,t.start(),t}return s(e,t),r(e,[{key:"start",value:function(){var t=this;if(!this.started){!function e(){t.timeline(),t.emit("tick",{snippet:t.snippet}),t.timer=RAF(e)}()}}},{key:"stop",value:function(){CAF(this.timer),this.started=!1}},{key:"timeline",value:function(){this.snippet=Date.now()-this.pt,(0===this.pt||this.snippet>200)&&(this.pt=Date.now(),this.snippet=Date.now()-this.pt),this.pt+=this.snippet}}]),e}(t.EventDispatcher),g=function(t){function e(t,n,i,r){o(this,e),r=Object.assign({autoAttach:!1},r);var s=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,r));return s.ticker=new f,s.update=s.update.bind(s),s.on("addevents",function(){s.ticker.on("tick",s.update)}),s.on("removeevents",function(){s.ticker.off("tick",s.update)}),s.setTargetElement(s.renderer.domElement),s}return s(e,p),e}();exports.Interaction=g;
},{"three":"gBK8"}],"lxWU":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=r(require("three")),t=require("three.interaction");function r(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};o.get||o.set?Object.defineProperty(t,r,o):t[r]=e[r]}return t.default=e,t}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function n(e,t,r){return t&&i(e.prototype,t),r&&i(e,r),e}var a=function(){function t(r,i){o(this,t),this.earth=i,this.cube=new e.Mesh(new e.BoxGeometry(.25,.25/3,.25/3),new e.MeshBasicMaterial({color:8947848})),this.cube.position.y=1.5,r.add(this.cube),console.log(r)}return n(t,[{key:"update",value:function(e){this.cube.material.color.setHex(this.hover?3003:2184),this.earth&&(this.cube.position.z=1.5*-Math.sin(e/1e4),this.cube.position.y=1.5*-Math.cos(e/1e4),this.cube.lookAt(this.earth.position))}}]),t}();exports.default=a;
},{"three":"gBK8","three.interaction":"vDhC"}],"DPGx":[function(require,module,exports) {
var a=2*Math.PI,e=Math.round,r=Math.min,t=Math.max,c=Math.ceil;function n(a,r,t,c){c[0]=e(255*a),c[1]=e(255*r),c[2]=e(255*t)}function s(a,e,c){return t(e,r(a,c))}function i(a,e,r,t){if(t=t||[0,0,0],a%=360,e=s(e,0,1),r=s(r,0,1),e){var i=(1-e)*r,u=r-i,h=a%60;switch(a/60|0){case 0:n(r,u*a/60+i,i,t);break;case 1:n(u*(60-h)/60+i,r,i,t);break;case 2:n(i,r,u*h/60+i,t);break;case 3:n(i,u*(60-h)/60+i,r,t);break;case 4:n(u*h/60+i,i,r,t);break;case 5:n(r,i,u*(60-h)/60+i,t)}}else t[0]=t[1]=t[2]=c(255*r);return t}module.exports=i;
},{}],"cfbd":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NORM_2D=1/47,exports.NORM_3D=1/103,exports.NORM_4D=1/30,exports.SQUISH_2D=(Math.sqrt(3)-1)/2,exports.SQUISH_3D=(Math.sqrt(4)-1)/3,exports.SQUISH_4D=(Math.sqrt(5)-1)/4,exports.STRETCH_2D=(1/Math.sqrt(3)-1)/2,exports.STRETCH_3D=(1/Math.sqrt(4)-1)/3,exports.STRETCH_4D=(1/Math.sqrt(5)-1)/4,exports.base2D=[[1,1,0,1,0,1,0,0,0],[1,1,0,1,0,1,2,1,1]],exports.base3D=[[0,0,0,0,1,1,0,0,1,0,1,0,1,0,0,1],[2,1,1,0,2,1,0,1,2,0,1,1,3,1,1,1],[1,1,0,0,1,0,1,0,1,0,0,1,2,1,1,0,2,1,0,1,2,0,1,1]],exports.base4D=[[0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,4,1,1,1,1],[1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1],[3,1,1,1,0,3,1,1,0,1,3,1,0,1,1,3,0,1,1,1,2,1,1,0,0,2,1,0,1,0,2,1,0,0,1,2,0,1,1,0,2,0,1,0,1,2,0,0,1,1]],exports.gradients2D=[5,2,2,5,-5,2,-2,5,5,-2,2,-5,-5,-2,-2,-5],exports.gradients3D=[-11,4,4,-4,11,4,-4,4,11,11,4,4,4,11,4,4,4,11,-11,-4,4,-4,-11,4,-4,-4,11,11,-4,4,4,-11,4,4,-4,11,-11,4,-4,-4,11,-4,-4,4,-11,11,4,-4,4,11,-4,4,4,-11,-11,-4,-4,-4,-11,-4,-4,-4,-11,11,-4,-4,4,-11,-4,4,-4,-11],exports.gradients4D=[3,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3,-3,1,1,1,-1,3,1,1,-1,1,3,1,-1,1,1,3,3,-1,1,1,1,-3,1,1,1,-1,3,1,1,-1,1,3,-3,-1,1,1,-1,-3,1,1,-1,-1,3,1,-1,-1,1,3,3,1,-1,1,1,3,-1,1,1,1,-3,1,1,1,-1,3,-3,1,-1,1,-1,3,-1,1,-1,1,-3,1,-1,1,-1,3,3,-1,-1,1,1,-3,-1,1,1,-1,-3,1,1,-1,-1,3,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,3,1,1,-1,1,3,1,-1,1,1,3,-1,1,1,1,-3,-3,1,1,-1,-1,3,1,-1,-1,1,3,-1,-1,1,1,-3,3,-1,1,-1,1,-3,1,-1,1,-1,3,-1,1,-1,1,-3,-3,-1,1,-1,-1,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,3,1,-1,-1,1,3,-1,-1,1,1,-3,-1,1,1,-1,-3,-3,1,-1,-1,-1,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,3,-1,-1,-1,1,-3,-1,-1,1,-1,-3,-1,1,-1,-1,-3,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3,-1,-1,-1,-1,-3],exports.lookupPairs2D=[0,1,1,0,4,1,17,0,20,2,21,2,22,5,23,5,26,4,39,3,42,4,43,3],exports.lookupPairs3D=[0,2,1,1,2,2,5,1,6,0,7,0,32,2,34,2,129,1,133,1,160,5,161,5,518,0,519,0,546,4,550,4,645,3,647,3,672,5,673,5,674,4,677,3,678,4,679,3,680,13,681,13,682,12,685,14,686,12,687,14,712,20,714,18,809,21,813,23,840,20,841,21,1198,19,1199,22,1226,18,1230,19,1325,23,1327,22,1352,15,1353,17,1354,15,1357,17,1358,16,1359,16,1360,11,1361,10,1362,11,1365,10,1366,9,1367,9,1392,11,1394,11,1489,10,1493,10,1520,8,1521,8,1878,9,1879,9,1906,7,1910,7,2005,6,2007,6,2032,8,2033,8,2034,7,2037,6,2038,7,2039,6],exports.lookupPairs4D=[0,3,1,2,2,3,5,2,6,1,7,1,8,3,9,2,10,3,13,2,16,3,18,3,22,1,23,1,24,3,26,3,33,2,37,2,38,1,39,1,41,2,45,2,54,1,55,1,56,0,57,0,58,0,59,0,60,0,61,0,62,0,63,0,256,3,258,3,264,3,266,3,272,3,274,3,280,3,282,3,2049,2,2053,2,2057,2,2061,2,2081,2,2085,2,2089,2,2093,2,2304,9,2305,9,2312,9,2313,9,16390,1,16391,1,16406,1,16407,1,16422,1,16423,1,16438,1,16439,1,16642,8,16646,8,16658,8,16662,8,18437,6,18439,6,18469,6,18471,6,18688,9,18689,9,18690,8,18693,6,18694,8,18695,6,18696,9,18697,9,18706,8,18710,8,18725,6,18727,6,131128,0,131129,0,131130,0,131131,0,131132,0,131133,0,131134,0,131135,0,131352,7,131354,7,131384,7,131386,7,133161,5,133165,5,133177,5,133181,5,133376,9,133377,9,133384,9,133385,9,133400,7,133402,7,133417,5,133421,5,133432,7,133433,5,133434,7,133437,5,147510,4,147511,4,147518,4,147519,4,147714,8,147718,8,147730,8,147734,8,147736,7,147738,7,147766,4,147767,4,147768,7,147770,7,147774,4,147775,4,149509,6,149511,6,149541,6,149543,6,149545,5,149549,5,149558,4,149559,4,149561,5,149565,5,149566,4,149567,4,149760,9,149761,9,149762,8,149765,6,149766,8,149767,6,149768,9,149769,9,149778,8,149782,8,149784,7,149786,7,149797,6,149799,6,149801,5,149805,5,149814,4,149815,4,149816,7,149817,5,149818,7,149821,5,149822,4,149823,4,149824,37,149825,37,149826,36,149829,34,149830,36,149831,34,149832,37,149833,37,149842,36,149846,36,149848,35,149850,35,149861,34,149863,34,149865,33,149869,33,149878,32,149879,32,149880,35,149881,33,149882,35,149885,33,149886,32,149887,32,150080,49,150082,48,150088,49,150098,48,150104,47,150106,47,151873,46,151877,45,151881,46,151909,45,151913,44,151917,44,152128,49,152129,46,152136,49,152137,46,166214,43,166215,42,166230,43,166247,42,166262,41,166263,41,166466,48,166470,43,166482,48,166486,43,168261,45,168263,42,168293,45,168295,42,168512,31,168513,28,168514,31,168517,28,168518,25,168519,25,280952,40,280953,39,280954,40,280957,39,280958,38,280959,38,281176,47,281178,47,281208,40,281210,40,282985,44,282989,44,283001,39,283005,39,283208,30,283209,27,283224,30,283241,27,283256,22,283257,22,297334,41,297335,41,297342,38,297343,38,297554,29,297558,24,297562,29,297590,24,297594,21,297598,21,299365,26,299367,23,299373,26,299383,23,299389,20,299391,20,299584,31,299585,28,299586,31,299589,28,299590,25,299591,25,299592,30,299593,27,299602,29,299606,24,299608,30,299610,29,299621,26,299623,23,299625,27,299629,26,299638,24,299639,23,299640,22,299641,22,299642,21,299645,20,299646,21,299647,20,299648,61,299649,60,299650,61,299653,60,299654,59,299655,59,299656,58,299657,57,299666,55,299670,54,299672,58,299674,55,299685,52,299687,51,299689,57,299693,52,299702,54,299703,51,299704,56,299705,56,299706,53,299709,50,299710,53,299711,50,299904,61,299906,61,299912,58,299922,55,299928,58,299930,55,301697,60,301701,60,301705,57,301733,52,301737,57,301741,52,301952,79,301953,79,301960,76,301961,76,316038,59,316039,59,316054,54,316071,51,316086,54,316087,51,316290,78,316294,78,316306,73,316310,73,318085,77,318087,77,318117,70,318119,70,318336,79,318337,79,318338,78,318341,77,318342,78,318343,77,430776,56,430777,56,430778,53,430781,50,430782,53,430783,50,431e3,75,431002,72,431032,75,431034,72,432809,74,432813,69,432825,74,432829,69,433032,76,433033,76,433048,75,433065,74,433080,75,433081,74,447158,71,447159,68,447166,71,447167,68,447378,73,447382,73,447386,72,447414,71,447418,72,447422,71,449189,70,449191,70,449197,69,449207,68,449213,69,449215,68,449408,67,449409,67,449410,66,449413,64,449414,66,449415,64,449416,67,449417,67,449426,66,449430,66,449432,65,449434,65,449445,64,449447,64,449449,63,449453,63,449462,62,449463,62,449464,65,449465,63,449466,65,449469,63,449470,62,449471,62,449472,19,449473,19,449474,18,449477,16,449478,18,449479,16,449480,19,449481,19,449490,18,449494,18,449496,17,449498,17,449509,16,449511,16,449513,15,449517,15,449526,14,449527,14,449528,17,449529,15,449530,17,449533,15,449534,14,449535,14,449728,19,449729,19,449730,18,449734,18,449736,19,449737,19,449746,18,449750,18,449752,17,449754,17,449784,17,449786,17,451520,19,451521,19,451525,16,451527,16,451528,19,451529,19,451557,16,451559,16,451561,15,451565,15,451577,15,451581,15,451776,19,451777,19,451784,19,451785,19,465858,18,465861,16,465862,18,465863,16,465874,18,465878,18,465893,16,465895,16,465910,14,465911,14,465918,14,465919,14,466114,18,466118,18,466130,18,466134,18,467909,16,467911,16,467941,16,467943,16,468160,13,468161,13,468162,13,468163,13,468164,13,468165,13,468166,13,468167,13,580568,17,580570,17,580585,15,580589,15,580598,14,580599,14,580600,17,580601,15,580602,17,580605,15,580606,14,580607,14,580824,17,580826,17,580856,17,580858,17,582633,15,582637,15,582649,15,582653,15,582856,12,582857,12,582872,12,582873,12,582888,12,582889,12,582904,12,582905,12,596982,14,596983,14,596990,14,596991,14,597202,11,597206,11,597210,11,597214,11,597234,11,597238,11,597242,11,597246,11,599013,10,599015,10,599021,10,599023,10,599029,10,599031,10,599037,10,599039,10,599232,13,599233,13,599234,13,599235,13,599236,13,599237,13,599238,13,599239,13,599240,12,599241,12,599250,11,599254,11,599256,12,599257,12,599258,11,599262,11,599269,10,599271,10,599272,12,599273,12,599277,10,599279,10,599282,11,599285,10,599286,11,599287,10,599288,12,599289,12,599290,11,599293,10,599294,11,599295,10],exports.p2D=[0,0,1,-1,0,0,-1,1,0,2,1,1,1,2,2,0,1,2,0,2,1,0,0,0],exports.p3D=[0,0,1,-1,0,0,1,0,-1,0,0,-1,1,0,0,0,1,-1,0,0,-1,0,1,0,0,-1,1,0,2,1,1,0,1,1,1,-1,0,2,1,0,1,1,1,-1,1,0,2,0,1,1,1,-1,1,1,1,3,2,1,0,3,1,2,0,1,3,2,0,1,3,1,0,2,1,3,0,2,1,3,0,1,2,1,1,1,0,0,2,2,0,0,1,1,0,1,0,2,0,2,0,1,1,0,0,1,2,0,0,2,2,0,0,0,0,1,1,-1,1,2,0,0,0,0,1,-1,1,1,2,0,0,0,0,1,1,1,-1,2,3,1,1,1,2,0,0,2,2,3,1,1,1,2,2,0,0,2,3,1,1,1,2,0,2,0,2,1,1,-1,1,2,0,0,2,2,1,1,-1,1,2,2,0,0,2,1,-1,1,1,2,0,0,2,2,1,-1,1,1,2,0,2,0,2,1,1,1,-1,2,2,0,0,2,1,1,1,-1,2,0,2,0],exports.p4D=[0,0,1,-1,0,0,0,1,0,-1,0,0,1,0,0,-1,0,0,-1,1,0,0,0,0,1,-1,0,0,0,1,0,-1,0,0,-1,0,1,0,0,0,-1,1,0,0,0,0,1,-1,0,0,-1,0,0,1,0,0,-1,0,1,0,0,0,-1,1,0,2,1,1,0,0,1,1,1,-1,0,1,1,1,0,-1,0,2,1,0,1,0,1,1,-1,1,0,1,1,0,1,-1,0,2,0,1,1,0,1,-1,1,1,0,1,0,1,1,-1,0,2,1,0,0,1,1,1,-1,0,1,1,1,0,-1,1,0,2,0,1,0,1,1,-1,1,0,1,1,0,1,-1,1,0,2,0,0,1,1,1,-1,0,1,1,1,0,-1,1,1,1,4,2,1,1,0,4,1,2,1,0,4,1,1,2,0,1,4,2,1,0,1,4,1,2,0,1,4,1,1,0,2,1,4,2,0,1,1,4,1,0,2,1,4,1,0,1,2,1,4,0,2,1,1,4,0,1,2,1,4,0,1,1,2,1,2,1,1,0,0,3,2,1,0,0,3,1,2,0,0,1,2,1,0,1,0,3,2,0,1,0,3,1,0,2,0,1,2,0,1,1,0,3,0,2,1,0,3,0,1,2,0,1,2,1,0,0,1,3,2,0,0,1,3,1,0,0,2,1,2,0,1,0,1,3,0,2,0,1,3,0,1,0,2,1,2,0,0,1,1,3,0,0,2,1,3,0,0,1,2,2,3,1,1,1,0,2,1,1,1,-1,2,2,0,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,2,0,0,0,2,3,1,0,1,1,2,1,-1,1,1,2,2,0,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,2,0,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,2,0,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,2,0,0,2,3,1,1,1,0,2,1,1,1,-1,2,0,0,2,0,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,2,0,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,2,0,2,3,1,1,0,1,2,1,1,-1,1,2,0,0,0,2,2,3,1,0,1,1,2,1,-1,1,1,2,0,0,0,2,2,3,0,1,1,1,2,-1,1,1,1,2,0,0,0,2,2,1,1,1,-1,0,1,1,1,0,-1,0,0,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,0,0,0,0,0,2,1,-1,1,1,0,1,0,1,1,-1,0,0,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,0,0,0,0,0,2,1,-1,1,0,1,1,0,1,-1,1,0,0,0,0,0,2,1,-1,0,1,1,1,0,-1,1,1,0,0,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,2,0,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,2,0,0,0,2,1,1,-1,0,1,1,1,0,-1,1,2,2,0,0,0,2,1,1,1,-1,0,1,1,1,0,-1,2,0,2,0,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,2,0,0,2,1,-1,1,0,1,1,0,1,-1,1,2,0,2,0,0,2,1,1,-1,1,0,1,1,0,1,-1,2,0,0,2,0,2,1,-1,1,1,0,1,0,1,1,-1,2,0,0,2,0,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,2,0,2,1,1,-1,0,1,1,1,0,-1,1,2,0,0,0,2,2,1,-1,1,0,1,1,0,1,-1,1,2,0,0,0,2,2,1,-1,0,1,1,1,0,-1,1,1,2,0,0,0,2,3,1,1,0,0,0,2,2,0,0,0,2,1,1,1,-1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,1,-1,3,1,0,0,1,0,2,0,0,2,0,2,1,1,1,-1,3,1,1,0,0,0,2,2,0,0,0,2,1,1,-1,1,3,1,0,1,0,0,2,0,2,0,0,2,1,1,-1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,1,-1,1,3,1,1,0,0,0,2,2,0,0,0,2,1,-1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,1,-1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,1,-1,1,1,3,1,0,1,0,0,2,0,2,0,0,2,-1,1,1,1,3,1,0,0,1,0,2,0,0,2,0,2,-1,1,1,1,3,1,0,0,0,1,2,0,0,0,2,2,-1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,4,1,1,1,1,3,3,2,0,1,0,3,1,0,2,0,4,1,1,1,1,3,3,0,2,1,0,3,0,1,2,0,4,1,1,1,1,3,3,2,0,0,1,3,1,0,0,2,4,1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,4,1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,4,1,1,1,1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,1,-1,3,3,2,0,1,0,3,1,0,2,0,2,1,1,1,-1,3,3,0,2,1,0,3,0,1,2,0,2,1,1,1,-1,3,3,2,1,0,0,3,1,2,0,0,2,1,1,-1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,1,-1,1,3,3,0,2,0,1,3,0,1,0,2,2,1,1,-1,1,3,3,2,0,1,0,3,1,0,2,0,2,1,-1,1,1,3,3,2,0,0,1,3,1,0,0,2,2,1,-1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,1,-1,1,1,3,3,0,2,1,0,3,0,1,2,0,2,-1,1,1,1,3,3,0,2,0,1,3,0,1,0,2,2,-1,1,1,1,3,3,0,0,2,1,3,0,0,1,2,2,-1,1,1,1];
},{}],"EPZC":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("./constants"),t=function(){return function(t,n,e){this.dx=-n-t*r.SQUISH_2D,this.dy=-e-t*r.SQUISH_2D,this.xsb=n,this.ysb=e}}(),n=function(){return function(t,n,e,o){this.dx=-n-t*r.SQUISH_3D,this.dy=-e-t*r.SQUISH_3D,this.dz=-o-t*r.SQUISH_3D,this.xsb=n,this.ysb=e,this.zsb=o}}(),e=function(){return function(t,n,e,o,i){this.dx=-n-t*r.SQUISH_4D,this.dy=-e-t*r.SQUISH_4D,this.dz=-o-t*r.SQUISH_4D,this.dw=-i-t*r.SQUISH_4D,this.xsb=n,this.ysb=e,this.zsb=o,this.wsb=i}}();function o(r){var t=new Uint32Array(1);return t[0]=1664525*r[0]+1013904223,t}var i=function(){function i(r){this.initialize(),this.perm=new Uint8Array(256),this.perm2D=new Uint8Array(256),this.perm3D=new Uint8Array(256),this.perm4D=new Uint8Array(256);for(var t=new Uint8Array(256),n=0;n<256;n++)t[n]=n;var e=new Uint32Array(1);e[0]=r,e=o(o(o(e)));for(n=255;n>=0;n--){e=o(e);var i=new Uint32Array(1);i[0]=(e[0]+31)%(n+1),i[0]<0&&(i[0]+=n+1),this.perm[n]=t[i[0]],this.perm2D[n]=14&this.perm[n],this.perm3D[n]=this.perm[n]%24*3,this.perm4D[n]=252&this.perm[n],t[i[0]]=t[n]}}return i.prototype.array2D=function(r,t){for(var n=new Array(r),e=0;e<r;e++){n[e]=new Array(t);for(var o=0;o<t;o++)n[e][o]=this.noise2D(e,o)}return n},i.prototype.array3D=function(r,t,n){for(var e=new Array(r),o=0;o<r;o++){e[o]=new Array(t);for(var i=0;i<t;i++){e[o][i]=new Array(n);for(var s=0;s<n;s++)e[o][i][s]=this.noise3D(o,i,s)}}return e},i.prototype.array4D=function(r,t,n,e){for(var o=new Array(r),i=0;i<r;i++){o[i]=new Array(t);for(var s=0;s<t;s++){o[i][s]=new Array(n);for(var D=0;D<n;D++){o[i][s][D]=new Array(e);for(var p=0;p<e;p++)o[i][s][D][p]=this.noise4D(i,s,D,p)}}}return o},i.prototype.noise2D=function(t,n){for(var e=(t+n)*r.STRETCH_2D,o=t+e,i=n+e,s=Math.floor(o),D=Math.floor(i),p=(s+D)*r.SQUISH_2D,a=t-(s+p),h=n-(D+p),l=o-s,u=i-D,f=l+u,y=l-u+1|f<<1|f+u<<2|f+l<<4,d=0,v=this.lookup2D[y];void 0!==v;v=v.next){var w=a+v.dx,x=h+v.dy,S=2-w*w-x*x;if(S>0){var b=s+v.xsb,m=D+v.ysb,U=this.perm[255&b],_=this.perm2D[U+m&255];d+=S*S*S*S*(r.gradients2D[_]*w+r.gradients2D[_+1]*x)}}return d*r.NORM_2D},i.prototype.noise3D=function(t,n,e){for(var o=(t+n+e)*r.STRETCH_3D,i=t+o,s=n+o,D=e+o,p=Math.floor(i),a=Math.floor(s),h=Math.floor(D),l=(p+a+h)*r.SQUISH_3D,u=t-(p+l),f=n-(a+l),y=e-(h+l),d=i-p,v=s-a,w=D-h,x=d+v+w,S=v-w+1|d-v+1<<1|d-w+1<<2|x<<3|x+w<<5|x+v<<7|x+d<<9,b=0,m=this.lookup3D[S];void 0!==m;m=m.next){var U=u+m.dx,_=f+m.dy,c=y+m.dz,g=2-U*U-_*_-c*c;if(g>0){var k=p+m.xsb,A=a+m.ysb,H=h+m.zsb,M=this.perm[255&k],I=this.perm[M+A&255],Q=this.perm3D[I+H&255];b+=g*g*g*g*(r.gradients3D[Q]*U+r.gradients3D[Q+1]*_+r.gradients3D[Q+2]*c)}}return b*r.NORM_3D},i.prototype.noise4D=function(t,n,e,o){for(var i=(t+n+e+o)*r.STRETCH_4D,s=t+i,D=n+i,p=e+i,a=o+i,h=Math.floor(s),l=Math.floor(D),u=Math.floor(p),f=Math.floor(a),y=(h+l+u+f)*r.SQUISH_4D,d=t-(h+y),v=n-(l+y),w=e-(u+y),x=o-(f+y),S=s-h,b=D-l,m=p-u,U=a-f,_=S+b+m+U,c=m-U+1|b-m+1<<1|b-U+1<<2|S-b+1<<3|S-m+1<<4|S-U+1<<5|_<<6|_+U<<8|_+m<<11|_+b<<14|_+S<<17,g=0,k=this.lookup4D[c];void 0!==k;k=k.next){var A=d+k.dx,H=v+k.dy,M=w+k.dz,I=x+k.dw,Q=2-A*A-H*H-M*M-I*I;if(Q>0){var z=h+k.xsb,P=l+k.ysb,R=u+k.zsb,T=f+k.wsb,O=this.perm[255&z],C=this.perm[O+P&255],E=this.perm[C+R&255],N=this.perm4D[E+T&255];g+=Q*Q*Q*Q*(r.gradients4D[N]*A+r.gradients4D[N+1]*H+r.gradients4D[N+2]*M+r.gradients4D[N+3]*I)}}return g*r.NORM_4D},i.prototype.initialize=function(){for(var o=[],i=0;i<r.p2D.length;i+=4){for(var s=r.base2D[r.p2D[i]],D=null,p=null,a=0;a<s.length;a+=3)p=new t(s[a],s[a+1],s[a+2]),null===D?o[i/4]=p:D.next=p,D=p;p.next=new t(r.p2D[i+1],r.p2D[i+2],r.p2D[i+3])}this.lookup2D=[];for(i=0;i<r.lookupPairs2D.length;i+=2)this.lookup2D[r.lookupPairs2D[i]]=o[r.lookupPairs2D[i+1]];var h=[];for(i=0;i<r.p3D.length;i+=9){for(s=r.base3D[r.p3D[i]],D=null,p=null,a=0;a<s.length;a+=4)p=new n(s[a],s[a+1],s[a+2],s[a+3]),null===D?h[i/9]=p:D.next=p,D=p;p.next=new n(r.p3D[i+1],r.p3D[i+2],r.p3D[i+3],r.p3D[i+4]),p.next.next=new n(r.p3D[i+5],r.p3D[i+6],r.p3D[i+7],r.p3D[i+8])}this.lookup3D=[];for(i=0;i<r.lookupPairs3D.length;i+=2)this.lookup3D[r.lookupPairs3D[i]]=h[r.lookupPairs3D[i+1]];var l=[];for(i=0;i<r.p4D.length;i+=16){for(s=r.base4D[r.p4D[i]],D=null,p=null,a=0;a<s.length;a+=5)p=new e(s[a],s[a+1],s[a+2],s[a+3],s[a+4]),null===D?l[i/16]=p:D.next=p,D=p;p.next=new e(r.p4D[i+1],r.p4D[i+2],r.p4D[i+3],r.p4D[i+4],r.p4D[i+5]),p.next.next=new e(r.p4D[i+6],r.p4D[i+7],r.p4D[i+8],r.p4D[i+9],r.p4D[i+10]),p.next.next.next=new e(r.p4D[i+11],r.p4D[i+12],r.p4D[i+13],r.p4D[i+14],r.p4D[i+15])}this.lookup4D=[];for(i=0;i<r.lookupPairs4D.length;i+=2)this.lookup4D[r.lookupPairs4D[i]]=l[r.lookupPairs4D[i+1]]},i}();exports.default=i;
},{"./constants":"cfbd"}],"wUwH":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=o(require("three")),e=n(require("hsv2rgb")),r=n(require("open-simplex-noise"));function n(t){return t&&t.__esModule?t:{default:t}}function o(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,r):{};n.get||n.set?Object.defineProperty(e,r,n):e[r]=t[r]}return e.default=t,e}function i(t,e){return u(t)||s(t,e)||a()}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function s(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!e||r.length!==e);n=!0);}catch(u){o=!0,i=u}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}function u(t){if(Array.isArray(t))return t}function c(t){return f(t)||h(t)||l()}function l(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function h(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function f(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function d(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function v(t,e,r){return e&&p(t.prototype,e),r&&p(t,r),t}var y=function(){function n(o,a,s){var u=this;d(this,n),this.hover=!1;var l=i(this.randomNumArr(2,-2,2),2);this.a=l[0],this.b=l[1];var h=i(this.randomNumArr(2,-10,10),2);this.c=h[0],this.d=h[1],this.perlin=new r.default(this.a+this.b+this.c+this.d);var f,p,v=new t.BufferGeometry;new t.Color;this.altitude=s,this.vectors=[],this.colors=[];for(var y=function(){for(var t=0;t<a;t++){var e,r,n=f.slice(t,t+2),o=p.slice(t,t+2),i=n.reduce(function(t,e){return[].concat(c(t),c(e.position))},[]),s=o.reduce(function(t,e){return[].concat(c(t),c(e.position))},[]),l=n.reduce(function(t,e){return[].concat(c(t),c(e.color))},[]),h=o.reduce(function(t,e){return[].concat(c(t),c(e.color))},[]),d=[].concat(c(i),c(s.slice(0,3)),c(s),c(i.slice(3,6))),v=[].concat(c(l),c(h.slice(0,4)),c(h),c(l.slice(4,8)));(e=u.vectors).push.apply(e,c(d)),(r=u.colors).push.apply(r,c(v))}},b=0;b<=a;b++){var m;f=p,p=[];for(var M=0;M<a;M++){var w=b/a,g=M/a,A=2*this.getRadius(w,g,5)+this.altitude,P=this.getCoords(A,w,g),O=255/(1+10*Math.pow(Math.E,-160*(A-this.altitude))),j=(0,e.default)(O,127.5,127.5,[0,0,0,25.5]);p.push({position:P,color:j})}(m=p).push.apply(m,c(p.slice(0,1))),void 0!==f&&y()}var I=new t.Uint8BufferAttribute(this.colors,4);I.normalized=!0,v.addAttribute("position",new t.Float32BufferAttribute(this.vectors,3)),v.addAttribute("color",I);var x=new t.RawShaderMaterial({uniforms:{time:{value:1}},vertexShader:document.getElementById("vertexShader").textContent,fragmentShader:document.getElementById("fragmentShader").textContent,side:t.DoubleSide,transparent:!0});this.ionosphere=new t.Mesh(v,x),this.scene=o,o.add(this.ionosphere)}return v(n,[{key:"randomNumArr",value:function(t,e,r){return new Array(t).fill().map(function(t){return Math.floor(Math.random()*(r-e))-e})}},{key:"getRadius",value:function(t,e){var r;t=Math.PI/2-2*Math.PI*t,e=2*Math.PI*e;this.b,Math.cos(this.d*t),this.a,Math.sin(this.c*e),this.altitude;return((r=this.perlin).noise3D.apply(r,c(this.getCoords(this.altitude,t,e)))+1)/15+.25}},{key:"getCoords",value:function(t,e,r){return e=Math.PI/2-Math.PI*e,r=2*Math.PI*r,[t*Math.cos(r)*Math.abs(Math.cos(e)),t*Math.sin(r)*Math.abs(Math.cos(e)),t*Math.sin(e)]}}]),n}();exports.default=y;
},{"three":"gBK8","hsv2rgb":"DPGx","open-simplex-noise":"EPZC"}],"40vq":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=e(require("three"));function e(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,r):{};n.get||n.set?Object.defineProperty(e,r,n):e[r]=t[r]}return e.default=t,e}function r(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},i=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),i.forEach(function(e){n(t,e,r[e])})}return t}function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function o(t,e,r){return(o=i()?Reflect.construct:function(t,e,r){var n=[null];n.push.apply(n,e);var i=new(Function.bind.apply(t,n));return r&&a(i,r.prototype),i}).apply(null,arguments)}function a(t,e){return(a=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function s(t){return l(t)||u(t)||c()}function c(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function u(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function l(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function f(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function y(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),t}var p=function(){function e(r,n,i,a,c,u){var l=this;f(this,e),this.resolution=c,this.earth=r,this.ionosphere=n,this.origin=o(t.Vector3,s(this.getCoords(1,i,a))),this.lat=i,this.long=a,this.lifetime=0,this.locus=new Array(c).fill(0).map(function(e,r){return new Array(c).fill(0).map(function(e,n){var c={lat:i+u*(r/l.resolution-.5),long:a+u*(n/l.resolution/.5)},f=o(t.Vector3,s(l.getCoords(1,c.lat,c.long)));return c={direction:f,x:f.x,y:f.y,z:f.z,visible:!0}})}),this.material=new t.PointsMaterial({color:4095}),this.positions=new Float32Array(3*Math.pow(this.resolution,2)),this.scales=new Float32Array(Math.pow(this.resolution,2)),this.geometry=new t.BufferGeometry,this.geometry.addAttribute("position",new t.BufferAttribute(this.positions),3),this.geometry.addAttribute("scale",new t.BufferAttribute(this.scales,3)),this.geom=new t.Points(this.geometry,this.material),this.update(50),this.cubeStart=new t.Mesh(new t.BoxGeometry(.1,.1,.1),new t.MeshBasicMaterial({color:"gray"}))}return y(e,[{key:"update",value:function(e){if(!this.stop){e>1e3&&(this.stop=!0),this.lifetime+=e;var n=new t.Raycaster(this.origin,this.origin,.1,10),i=0,o=this.geom.geometry.attributes.position.array,a=this.geom.geometry.attributes.scale.array,s=!0,c=!1,u=void 0;try{for(var l,f=this.locus[Symbol.iterator]();!(s=(l=f.next()).done);s=!0){var h=l.value,y=0,p=!0,d=!1,b=void 0;try{for(var g,v=h[Symbol.iterator]();!(p=(g=v.next()).done);p=!0){var m=g.value,w=this.lifetime/1e4;m.visible||(w=0);0;for(var O=r({},m);w>0;){n.intersectObject(this.earth.earth);var j=void 0,M=3*(i*this.resolution+y),P=n.intersectObject(this.ionosphere.ionosphere);if(!(P.length>0&&P[0].distance<=this.lifetime)){j=new t.Vector3(O.x,O.y,O.z).addScaledVector(m.direction,e/1e3),o[M]=j.x,o[M+1]=j.y,o[M+2]=j.z,a[M]=j.x,a[M+1]=j.y,a[M+2]=j.z;break}O.origin=P[0].distance,w-=P[0].distance;var A=P[0].point.addScaledVector(O.direction.negate(),2);n.set(P[0].point,A),j=P[0].point.addScaledVector(A,e)}y++}}catch(x){d=!0,b=x}finally{try{p||null==v.return||v.return()}finally{if(d)throw b}}i++}}catch(x){c=!0,u=x}finally{try{s||null==f.return||f.return()}finally{if(c)throw u}}this.geom.geometry.attributes.position.needsUpdate=!0,this.geom.geometry.attributes.scale.needsUpdate=!0}}},{key:"isTouching",value:function(){}},{key:"getCoords",value:function(t,e,r){return e=Math.PI/2-Math.PI*e,r=2*Math.PI*r,[t*Math.cos(r)*Math.abs(Math.cos(e)),t*Math.sin(r)*Math.abs(Math.cos(e)),t*Math.sin(e)]}}]),e}();exports.default=p;
},{"three":"gBK8"}],"nE9y":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=i(require("three")),e=r(require("./wave"));function r(t){return t&&t.__esModule?t:{default:t}}function i(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)if(Object.prototype.hasOwnProperty.call(t,r)){var i=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(t,r):{};i.get||i.set?Object.defineProperty(e,r,i):e[r]=t[r]}return e.default=t,e}function o(t){return n(t)||a(t)||s()}function s(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function a(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function n(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function l(t,e,r){return e&&u(t.prototype,e),r&&u(t,r),t}var c=function(){function r(i,s,a,n,u,l){h(this,r),this.hover=!1,this.ionosphere=a,this.radius=1,this.earth=s,this.waves=l,this.period=0,this.pos=this.getCoords(this.radius,n,u),this.model=new t.BufferGeometry;var c=[[-.1,.1*Math.sqrt(3)/4,0],[.05,.1*Math.sqrt(3)/4,.1*Math.sqrt(3)/2],[.05,.1*Math.sqrt(3)/4,-.1*Math.sqrt(3)/2],[0,-.1,0]],d=[c[0],c[1],c[2],c[0],c[1],c[3],c[0],c[2],c[3],c[1],c[2],c[3]].reduce(function(t,e){return[].concat(o(t),o(e))},[]);this.model.addAttribute("position",new t.Float32BufferAttribute(d,3));var f=new t.MeshBasicMaterial({color:16777215,side:t.DoubleSide}),p=new t.Group,y=new t.CubeGeometry(this.radius/8,this.radius,this.radius/8);y=new t.Mesh(f,y);var v=new t.CubeGeometry(this.radius/2,this.radius/8,this.radius/8);(v=new t.Mesh(v,f)).position.set(new t.Vector3(0,this.radius,0)),p.add(y,v);for(var w=0;w<5;w++){var b=new t.CubeGeometry(this.radius/8,this.radius/8,this.radius/3);(b=new t.Mesh(b,f)).position.set(new t.Vector3(this.radius/4*(w-2),this.radius,0)),p.add(b)}this.geom=p,this.geom.position.x=this.pos.x,this.geom.position.y=this.pos.y,this.geom.position.z=this.pos.z,this.geom.lookAt(new t.Vector3(0,0,0));var M=new e.default(this.earth,this.ionosphere,this.lat,this.long,10,Math.PI/4);this.waves.push(M),console.log("Updated first wave")}return l(r,[{key:"getCoords",value:function(t,e,r){return e=Math.PI/2-Math.PI*e,r=2*Math.PI*r,{x:t*Math.cos(r)*Math.abs(Math.cos(e)),z:t*Math.sin(r)*Math.abs(Math.cos(e)),y:t*Math.sin(e)}}},{key:"update",value:function(t){this.period+=t,this.period>=2e3&&(this.period%=2e3);var e=!0,r=!1,i=void 0;try{for(var o,s=this.waves[Symbol.iterator]();!(e=(o=s.next()).done);e=!0){o.value.isTouching(this)&&this.geom.material.color.set(65280)}}catch(a){r=!0,i=a}finally{try{e||null==s.return||s.return()}finally{if(r)throw i}}}}]),r}();exports.default=c;
},{"three":"gBK8","./wave":"40vq"}],"epB2":[function(require,module,exports) {
"use strict";var e=c(require("three")),t=a(require("three-orbitcontrols")),n=a(require("./earth.js")),o=a(require("./cubesat.js")),i=a(require("./ionosphere.js")),r=a(require("./ionosonde.js")),s=a(require("./wave.js"));function a(e){return e&&e.__esModule?e:{default:e}}function c(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};o.get||o.set?Object.defineProperty(t,n,o):t[n]=e[n]}return t.default=e,t}function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?l(e):t}function l(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=f(e,t);if(o){var i=Object.getOwnPropertyDescriptor(o,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function v(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function b(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(e,t,n){return t&&b(e.prototype,t),n&&b(e,n),e}require("./styles.css");var g={cubesat:document.getElementById("cubesat-indicator")},k=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";m(this,e),this.name=t,this.html=n,this.title=o}return y(e,[{key:"init",value:function(e){this.canvas=e}},{key:"$animate",value:function(e){var t=this,n=+new Date,o=n-e;this.running&&requestAnimationFrame(function(){return t.$animate(n)}),this.animate(o)}},{key:"animate",value:function(){}},{key:"start",value:function(){this.running=!0,this.animate(+new Date)}},{key:"stop",value:function(){this.running=!1}}]),e}(),j=function(t){function n(){var e;return m(this,n),(e=h(this,p(n).call(this,"cubesat","The Cubesat is what we will create on blair3sat. It has three key duties: to receive signals from ionosondes around the world; to collect information about the atmosphere with a filtered camera; and to send the data back to the blair3sat ground station. The Cubesat will deal with rapid, >100 degree temperature changes that would destroy normal electronics components. Such a design, built to replace a years-old practice, is implemented with a Cubesat because as a Cubesat, it can move and measure all steps of the radio wave's travelling between ionosonde and ionosonde.","The Cubesat"))).running=!1,e}return v(n,k),y(n,[{key:"init",value:function(t){d(p(n.prototype),"init",this).call(this,t),this.canvas&&(console.log(this.canvas),this.renderer=new e.WebGLRenderer({canvas:this.canvas}),this.renderer.setSize(this.canvas.offsetWidth,this.canvas.offsetHeight),this.camera=new e.PerspectiveCamera,this.scene=new e.Scene,this.cubesat=new o.default(this.scene,null),this.camera.position.set(2,2,2),this.camera.lookAt(this.cubesat.cube.position))}},{key:"animate",value:function(e){this.renderer.render(this.scene,this.camera)}}]),n}(),O=function(e){function t(){var e;return m(this,t),(e=h(this,p(t).call(this,"ionosonde","An ionosonde is a high-powered radio station that sends radio waves towards the ionosphere. An ionosonde sounding changes the frequency of its radio waves over time, allowing it to measure how the ionosphere affects different radio frequencies. Ionosondes can be paired to find information about the area between them; this method is used across oceans and other inaccessible locations. The shortcomings of ionosondes to find information about the ionosphere are as follows: since they cannot be moved easily, ionosondes can only measure information about the ionosphere directly between two ionosondes, or above one. Furthermore, by using only ground-based equipment, labs limit their knowledge of every step of the radio wave's progress through the ionosphere.","An Ionosonde"))).running=!1,e}return v(t,k),y(t,[{key:"animate",value:function(e){}}]),t}(),T=function(e){function t(){var e;return m(this,t),(e=h(this,p(t).call(this,"ionosphere","\n                The ionosphere is the layer of the earth's atmosphere that contains a high concentration of ions and free electrons and is able to reflect radio waves. It lies above the mesosphere and extends from about 50 to 600 miles (80 to 1,000 km) above the earth's surface. The ionosphere reflects radio waves of certain frequencies off of it. This allows for over-the-horizon detection systems and similar applications. However, the way that the ionosphere reflects waves changes over time, varies based on location and is near impossible to predict, so the systems using the ionosphere need accurate, real-time information to use.\n        ","The Ionosphere"))).running=!1,e}return v(t,k),y(t,[{key:"animate",value:function(e){}}]),t}(),P=function(e){function t(){var e;return m(this,t),(e=h(this,p(t).call(this,"waves","Ionosonde soundings are sent from ionosondes. They bounce off of a certain spot in the ionosphere and move back towards the earth. Ionosondes can measure how much time the wave took to return to figure out where the wave bounced off."))).running=!1,e}return v(t,k),y(t,[{key:"animate",value:function(e){}}]),t}(),S=function(){function e(t){var n=this;m(this,e),this.element=t,this.text=t.querySelector("#text"),this.canvas=t.querySelector("#canvas"),this.title=t.querySelector("#title"),this.canvas.width=this.canvas.offsetWidth,this.canvas.height=this.canvas.offsetHeight,this.close=t.querySelector("#close"),this.close.addEventListener("click",function(e){n.reset(),e.stopPropagation()}),this.element.addEventListener("click",function(e){return e.stopPropagation()}),this.things={},this.currentThing=null}return y(e,[{key:"add",value:function(e){this.things[e.name]=e,e.init(this.canvas)}},{key:"select",value:function(e){this.things[e]&&(this.reset(),this.currentThing=this.things[e],this.currentThing.start(),this.text.innerHTML=this.currentThing.html.replace("\n","<br>").replace(" ","&nbsp;"),this.title.innerHTML=this.currentThing.title,this.element.classList.add("visible"))}},{key:"reset",value:function(){this.currentThing&&(this.element.classList.remove("visible"),this.currentThing.stop(),this.currentThing=null,this.text.innerHTML="")}}]),e}(),q=new S(document.getElementById("info"));q.add(new j),q.add(new O),q.add(new T),q.add(new P);var E,L,x,H,M,C,_,I,W,A,D=+new Date,F=document.getElementById("container"),R=new e.Raycaster,z=new e.Vector2;function B(e){z.x=e.clientX/window.innerWidth*2-1,z.y=-e.clientY/window.innerHeight*2+1}window.addEventListener("mousemove",B,!1);var G=[],V=986895,$=16777215,X=16777215,Y=100;function J(){x.aspect=window.innerWidth/window.innerHeight,x.updateProjectionMatrix(),E.setSize(window.innerWidth,window.innerHeight)}function K(){(E=new e.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),E.setClearColor(V,1),F.appendChild(E.domElement),L=new e.Scene,x=new e.PerspectiveCamera(50,window.innerWidth/window.innerHeight,.1,2e3);for(var t=new e.Geometry,a=0;a<1e4;a++){var c=new e.Vector3;c.x=e.Math.randFloatSpread(1500),c.y=e.Math.randFloatSpread(1500),c.z=e.Math.randFloatSpread(1500),t.vertices.push(c)}var u=new e.PointsMaterial({color:11184810}),h=new e.Points(t,u);L.add(h),_=new n.default(L,x,E),I=new o.default(L,_.earth),W=new i.default(L,Y,1.5),console.log(G instanceof Array),A=new r.default(L,_,W,.25,0,G);new e.Mesh(new e.SphereGeometry(.1),new e.MeshBasicMaterial({color:47872}));G.push(new s.default(_,W,.5,0,5,.5)),E.render(L,x)}function N(){setTimeout(function(){return requestAnimationFrame(N,2)});var e=new Date-D;I.update(e),A.update(e);for(var t=0;t<G.length;t++){G[t].update(e)}R.setFromCamera(z,x);var n=R.intersectObjects(L.children),o=!1,i=!1;I.hover=!1,W.hover=!1,A.hover=!1;for(var r=0;r<n.length;r++){if(n[r].object===I.cube){I.hover=o=!0;break}if(n[r].object===A.geom){A.hover=o=!0;break}n[r].object===W.ionosphere&&(i=!0)}!o&&i&&(W.hover=!0);var s=I.cube.position.clone().project(x);s.x=(s.x+1)/2*window.innerWidth,s.y=-(s.y-1)/2*window.innerHeight,g.cubesat.style.left=s.x+50+"px",g.cubesat.style.top=s.y-g.cubesat.offsetHeight/2+"px",E.render(L,x)}K(),N(),window.addEventListener("resize",J,!1),g.cubesat.hidden=!1,g.cubesat.addEventListener("click",function(e){e.stopPropagation(),q.select("cubesat")});var Q=!1,U=!1;document.addEventListener("mousedown",function(e){return U=!0}),document.addEventListener("mousemove",function(e){return Q=U}),document.addEventListener("click",function(e){Q||(A.hover?q.select("ionosonde"):I.hover?q.select("cubesat"):W.hover&&q.select("ionosphere")),U=Q=!1}),console.log("scene",L);
},{"three":"gBK8","three-orbitcontrols":"UskU","./earth.js":"tOna","./cubesat.js":"lxWU","./ionosphere.js":"wUwH","./ionosonde.js":"nE9y","./wave.js":"40vq","./styles.css":"prme"}]},{},["epB2"], null)
//# sourceMappingURL=/main.b3033633.map